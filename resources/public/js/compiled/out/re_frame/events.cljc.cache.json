["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ ","~$console","~$re-frame.loggers","~$empty-queue","~$re-frame.interop","~$debug-enabled?","^8"],"~:excludes",["~#set",[]],"~:name","~$re-frame.events","~:imports",null,"~:requires",["^ ","~$re-frame.db","^@","~$re-frame.utils","^A","^8","^8","~$re-frame.registrar","^B","^6","^6","~$interceptor","~$re-frame.interceptor","^D","^D","~$trace","~$re-frame.trace","^F","^F"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","^5","^6","~$app-db","^@","~$get-handler","^B","~$first-in-vector","^A","^7","^8","^9","^8","~$register-handler","^B"],"~:defs",["^ ","~$kind",["^ ","^<","~$re-frame.events/kind","~:file","resources/public/js/compiled/out/re_frame/events.cljc","~:line",11,"~:column",1,"~:end-line",11,"~:end-column",10,"~:meta",["^ ","^P","/home/bill/repos/guildsman-GIT/resources/public/js/compiled/out/re_frame/events.cljc","^Q",11,"^R",6,"^S",11,"^T",10],"~:tag","~$cljs.core/Keyword"],"~$flatten-and-remove-nils",["^ ","~:protocol-inline",null,"^U",["^ ","^P","/home/bill/repos/guildsman-GIT/resources/public/js/compiled/out/re_frame/events.cljc","^Q",14,"^R",8,"^S",14,"^T",31,"~:private",true,"~:arglists",["~#list",["~$quote",["^10",[["~$id","~$interceptors"]]]]],"~:doc","~`interceptors` might have nested collections, and contain nil elements.\n  return a flat collection, with all nils removed.\n  This function is 9/10 about giving good error messages."],"^Z",true,"^<","~$re-frame.events/flatten-and-remove-nils","~:variadic",false,"^P","resources/public/js/compiled/out/re_frame/events.cljc","^T",31,"~:method-params",["^10",[["^12","^13"]]],"~:protocol-impl",null,"~:arglists-meta",["^10",[null,null]],"^R",1,"^Q",14,"^S",14,"~:max-fixed-arity",2,"~:fn-var",true,"^[",["^10",["^11",["^10",[["^12","^13"]]]]],"^14","~`interceptors` might have nested collections, and contain nil elements.\n  return a flat collection, with all nils removed.\n  This function is 9/10 about giving good error messages."],"~$register",["^ ","^Y",null,"^U",["^ ","^P","/home/bill/repos/guildsman-GIT/resources/public/js/compiled/out/re_frame/events.cljc","^Q",35,"^R",7,"^S",35,"^T",15,"^[",["^10",["^11",["^10",[["^12","^13"]]]]],"^14","Associate the given event `id` with the given collection of `interceptors`.\n\n   `interceptors` may contain nested collections and there may be nils\n   at any level,so process this structure into a simple, nil-less vector\n   before registration.\n\n   Typically, an `event handler` will be at the end of the chain (wrapped\n   in an interceptor)."],"^<","~$re-frame.events/register","^16",false,"^P","resources/public/js/compiled/out/re_frame/events.cljc","^T",15,"^17",["^10",[["^12","^13"]]],"^18",null,"^19",["^10",[null,null]],"^R",1,"^Q",35,"^S",35,"^1:",2,"^1;",true,"^[",["^10",["^11",["^10",[["^12","^13"]]]]],"^14","Associate the given event `id` with the given collection of `interceptors`.\n\n   `interceptors` may contain nested collections and there may be nils\n   at any level,so process this structure into a simple, nil-less vector\n   before registration.\n\n   Typically, an `event handler` will be at the end of the chain (wrapped\n   in an interceptor)."],"~$*handling*",["^ ","^<","~$re-frame.events/*handling*","^P","resources/public/js/compiled/out/re_frame/events.cljc","^Q",51,"^R",1,"^S",51,"^T",26,"~:dynamic",true,"^U",["^ ","^P","/home/bill/repos/guildsman-GIT/resources/public/js/compiled/out/re_frame/events.cljc","^Q",51,"^R",16,"^S",51,"^T",26,"^1@",true],"^V","~$clj-nil"],"~$handle",["^ ","^Y",null,"^U",["^ ","^P","/home/bill/repos/guildsman-GIT/resources/public/js/compiled/out/re_frame/events.cljc","^Q",53,"^R",7,"^S",53,"^T",13,"^[",["^10",["^11",["^10",[["~$event-v"]]]]],"^14","Given an event vector `event-v`, look up the associated interceptor chain, and execute it."],"^<","~$re-frame.events/handle","^16",false,"^P","resources/public/js/compiled/out/re_frame/events.cljc","^T",13,"^17",["^10",[["^1C"]]],"^18",null,"^19",["^10",[null,null]],"^R",1,"^Q",53,"^S",53,"^1:",1,"^1;",true,"^[",["^10",["^11",["^10",[["^1C"]]]]],"^14","Given an event vector `event-v`, look up the associated interceptor chain, and execute it."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^E","^F","^F","^F"],"~:cljs.analyzer/constants",["^ ","~:seen",["^;",["~:tags","~:else","~:operation","~:start","~:duration","~:event","~:error","~:end","~:op-type"]],"~:order",["^1N","^1O","^1K","^1Q","^1I","^1L","^1J","^1M","^1P"]],"^14",null]