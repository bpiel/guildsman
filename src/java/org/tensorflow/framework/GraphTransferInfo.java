// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/graph_transfer_info.proto

package org.tensorflow.framework;

/**
 * <pre>
 * Protocol buffer representing a handle to a tensorflow resource. Handles are
 * not valid across executions, but can be serialized back and forth from within
 * a single run.
 * </pre>
 *
 * Protobuf type {@code tensorflow.GraphTransferInfo}
 */
public  final class GraphTransferInfo extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo)
    GraphTransferInfoOrBuilder {
  // Use GraphTransferInfo.newBuilder() to construct.
  private GraphTransferInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GraphTransferInfo() {
    nodeInfo_ = java.util.Collections.emptyList();
    constNodeInfo_ = java.util.Collections.emptyList();
    nodeInputInfo_ = java.util.Collections.emptyList();
    nodeOutputInfo_ = java.util.Collections.emptyList();
    graphInputNodeInfo_ = java.util.Collections.emptyList();
    graphOutputNodeInfo_ = java.util.Collections.emptyList();
    destination_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private GraphTransferInfo(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              nodeInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.NodeInfo>();
              mutable_bitField0_ |= 0x00000001;
            }
            nodeInfo_.add(
                input.readMessage(org.tensorflow.framework.GraphTransferInfo.NodeInfo.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              constNodeInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo>();
              mutable_bitField0_ |= 0x00000002;
            }
            constNodeInfo_.add(
                input.readMessage(org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              nodeInputInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.NodeInputInfo>();
              mutable_bitField0_ |= 0x00000004;
            }
            nodeInputInfo_.add(
                input.readMessage(org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              nodeOutputInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo>();
              mutable_bitField0_ |= 0x00000008;
            }
            nodeOutputInfo_.add(
                input.readMessage(org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.parser(), extensionRegistry));
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              graphInputNodeInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo>();
              mutable_bitField0_ |= 0x00000010;
            }
            graphInputNodeInfo_.add(
                input.readMessage(org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.parser(), extensionRegistry));
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              graphOutputNodeInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo>();
              mutable_bitField0_ |= 0x00000020;
            }
            graphOutputNodeInfo_.add(
                input.readMessage(org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.parser(), extensionRegistry));
            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            destination_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        nodeInfo_ = java.util.Collections.unmodifiableList(nodeInfo_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        constNodeInfo_ = java.util.Collections.unmodifiableList(constNodeInfo_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        nodeInputInfo_ = java.util.Collections.unmodifiableList(nodeInputInfo_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        nodeOutputInfo_ = java.util.Collections.unmodifiableList(nodeOutputInfo_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        graphInputNodeInfo_ = java.util.Collections.unmodifiableList(graphInputNodeInfo_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        graphOutputNodeInfo_ = java.util.Collections.unmodifiableList(graphOutputNodeInfo_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.framework.GraphTransferInfo.class, org.tensorflow.framework.GraphTransferInfo.Builder.class);
  }

  /**
   * Protobuf enum {@code tensorflow.GraphTransferInfo.Destination}
   */
  public enum Destination
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NOP = 0;</code>
     */
    NOP(0),
    /**
     * <code>HEXAGON = 1;</code>
     */
    HEXAGON(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NOP = 0;</code>
     */
    public static final int NOP_VALUE = 0;
    /**
     * <code>HEXAGON = 1;</code>
     */
    public static final int HEXAGON_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static Destination valueOf(int value) {
      return forNumber(value);
    }

    public static Destination forNumber(int value) {
      switch (value) {
        case 0: return NOP;
        case 1: return HEXAGON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Destination>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        Destination> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Destination>() {
            public Destination findValueByNumber(int number) {
              return Destination.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphTransferInfo.getDescriptor().getEnumTypes().get(0);
    }

    private static final Destination[] VALUES = values();

    public static Destination valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private Destination(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.GraphTransferInfo.Destination)
  }

  public interface NodeInputOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.NodeInput)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 node_id = 1;</code>
     */
    int getNodeId();

    /**
     * <code>int32 output_port = 2;</code>
     */
    int getOutputPort();
  }
  /**
   * Protobuf type {@code tensorflow.GraphTransferInfo.NodeInput}
   */
  public  static final class NodeInput extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.NodeInput)
      NodeInputOrBuilder {
    // Use NodeInput.newBuilder() to construct.
    private NodeInput(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeInput() {
      nodeId_ = 0;
      outputPort_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NodeInput(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nodeId_ = input.readInt32();
              break;
            }
            case 16: {

              outputPort_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.GraphTransferInfo.NodeInput.class, org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder.class);
    }

    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>int32 node_id = 1;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int OUTPUT_PORT_FIELD_NUMBER = 2;
    private int outputPort_;
    /**
     * <code>int32 output_port = 2;</code>
     */
    public int getOutputPort() {
      return outputPort_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeId_ != 0) {
        output.writeInt32(1, nodeId_);
      }
      if (outputPort_ != 0) {
        output.writeInt32(2, outputPort_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nodeId_);
      }
      if (outputPort_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, outputPort_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.framework.GraphTransferInfo.NodeInput)) {
        return super.equals(obj);
      }
      org.tensorflow.framework.GraphTransferInfo.NodeInput other = (org.tensorflow.framework.GraphTransferInfo.NodeInput) obj;

      boolean result = true;
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && (getOutputPort()
          == other.getOutputPort());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      hash = (37 * hash) + OUTPUT_PORT_FIELD_NUMBER;
      hash = (53 * hash) + getOutputPort();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInput parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.framework.GraphTransferInfo.NodeInput prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.GraphTransferInfo.NodeInput}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.NodeInput)
        org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.framework.GraphTransferInfo.NodeInput.class, org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.NodeInput.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = 0;

        outputPort_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInput_descriptor;
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeInput getDefaultInstanceForType() {
        return org.tensorflow.framework.GraphTransferInfo.NodeInput.getDefaultInstance();
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeInput build() {
        org.tensorflow.framework.GraphTransferInfo.NodeInput result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeInput buildPartial() {
        org.tensorflow.framework.GraphTransferInfo.NodeInput result = new org.tensorflow.framework.GraphTransferInfo.NodeInput(this);
        result.nodeId_ = nodeId_;
        result.outputPort_ = outputPort_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.framework.GraphTransferInfo.NodeInput) {
          return mergeFrom((org.tensorflow.framework.GraphTransferInfo.NodeInput)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.framework.GraphTransferInfo.NodeInput other) {
        if (other == org.tensorflow.framework.GraphTransferInfo.NodeInput.getDefaultInstance()) return this;
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (other.getOutputPort() != 0) {
          setOutputPort(other.getOutputPort());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.framework.GraphTransferInfo.NodeInput parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.framework.GraphTransferInfo.NodeInput) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private int outputPort_ ;
      /**
       * <code>int32 output_port = 2;</code>
       */
      public int getOutputPort() {
        return outputPort_;
      }
      /**
       * <code>int32 output_port = 2;</code>
       */
      public Builder setOutputPort(int value) {
        
        outputPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 output_port = 2;</code>
       */
      public Builder clearOutputPort() {
        
        outputPort_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.NodeInput)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.NodeInput)
    private static final org.tensorflow.framework.GraphTransferInfo.NodeInput DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.framework.GraphTransferInfo.NodeInput();
    }

    public static org.tensorflow.framework.GraphTransferInfo.NodeInput getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeInput>
        PARSER = new com.google.protobuf.AbstractParser<NodeInput>() {
      public NodeInput parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeInput(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeInput> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeInput> getParserForType() {
      return PARSER;
    }

    public org.tensorflow.framework.GraphTransferInfo.NodeInput getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.NodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 node_id = 2;</code>
     */
    int getNodeId();

    /**
     * <code>string type_name = 3;</code>
     */
    java.lang.String getTypeName();
    /**
     * <code>string type_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getTypeNameBytes();

    /**
     * <code>int32 soc_op_id = 4;</code>
     */
    int getSocOpId();

    /**
     * <code>int32 padding_id = 5;</code>
     */
    int getPaddingId();

    /**
     * <code>int32 input_count = 6;</code>
     */
    int getInputCount();

    /**
     * <code>int32 output_count = 7;</code>
     */
    int getOutputCount();
  }
  /**
   * Protobuf type {@code tensorflow.GraphTransferInfo.NodeInfo}
   */
  public  static final class NodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.NodeInfo)
      NodeInfoOrBuilder {
    // Use NodeInfo.newBuilder() to construct.
    private NodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeInfo() {
      name_ = "";
      nodeId_ = 0;
      typeName_ = "";
      socOpId_ = 0;
      paddingId_ = 0;
      inputCount_ = 0;
      outputCount_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              nodeId_ = input.readInt32();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              typeName_ = s;
              break;
            }
            case 32: {

              socOpId_ = input.readInt32();
              break;
            }
            case 40: {

              paddingId_ = input.readInt32();
              break;
            }
            case 48: {

              inputCount_ = input.readInt32();
              break;
            }
            case 56: {

              outputCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.GraphTransferInfo.NodeInfo.class, org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder.class);
    }

    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_ID_FIELD_NUMBER = 2;
    private int nodeId_;
    /**
     * <code>int32 node_id = 2;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int TYPE_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object typeName_;
    /**
     * <code>string type_name = 3;</code>
     */
    public java.lang.String getTypeName() {
      java.lang.Object ref = typeName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        typeName_ = s;
        return s;
      }
    }
    /**
     * <code>string type_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTypeNameBytes() {
      java.lang.Object ref = typeName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        typeName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SOC_OP_ID_FIELD_NUMBER = 4;
    private int socOpId_;
    /**
     * <code>int32 soc_op_id = 4;</code>
     */
    public int getSocOpId() {
      return socOpId_;
    }

    public static final int PADDING_ID_FIELD_NUMBER = 5;
    private int paddingId_;
    /**
     * <code>int32 padding_id = 5;</code>
     */
    public int getPaddingId() {
      return paddingId_;
    }

    public static final int INPUT_COUNT_FIELD_NUMBER = 6;
    private int inputCount_;
    /**
     * <code>int32 input_count = 6;</code>
     */
    public int getInputCount() {
      return inputCount_;
    }

    public static final int OUTPUT_COUNT_FIELD_NUMBER = 7;
    private int outputCount_;
    /**
     * <code>int32 output_count = 7;</code>
     */
    public int getOutputCount() {
      return outputCount_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (nodeId_ != 0) {
        output.writeInt32(2, nodeId_);
      }
      if (!getTypeNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, typeName_);
      }
      if (socOpId_ != 0) {
        output.writeInt32(4, socOpId_);
      }
      if (paddingId_ != 0) {
        output.writeInt32(5, paddingId_);
      }
      if (inputCount_ != 0) {
        output.writeInt32(6, inputCount_);
      }
      if (outputCount_ != 0) {
        output.writeInt32(7, outputCount_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nodeId_);
      }
      if (!getTypeNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, typeName_);
      }
      if (socOpId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, socOpId_);
      }
      if (paddingId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, paddingId_);
      }
      if (inputCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, inputCount_);
      }
      if (outputCount_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, outputCount_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.framework.GraphTransferInfo.NodeInfo)) {
        return super.equals(obj);
      }
      org.tensorflow.framework.GraphTransferInfo.NodeInfo other = (org.tensorflow.framework.GraphTransferInfo.NodeInfo) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && getTypeName()
          .equals(other.getTypeName());
      result = result && (getSocOpId()
          == other.getSocOpId());
      result = result && (getPaddingId()
          == other.getPaddingId());
      result = result && (getInputCount()
          == other.getInputCount());
      result = result && (getOutputCount()
          == other.getOutputCount());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      hash = (37 * hash) + TYPE_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTypeName().hashCode();
      hash = (37 * hash) + SOC_OP_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSocOpId();
      hash = (37 * hash) + PADDING_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPaddingId();
      hash = (37 * hash) + INPUT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getInputCount();
      hash = (37 * hash) + OUTPUT_COUNT_FIELD_NUMBER;
      hash = (53 * hash) + getOutputCount();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.framework.GraphTransferInfo.NodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.GraphTransferInfo.NodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.NodeInfo)
        org.tensorflow.framework.GraphTransferInfo.NodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.framework.GraphTransferInfo.NodeInfo.class, org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.NodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        nodeId_ = 0;

        typeName_ = "";

        socOpId_ = 0;

        paddingId_ = 0;

        inputCount_ = 0;

        outputCount_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInfo_descriptor;
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeInfo getDefaultInstanceForType() {
        return org.tensorflow.framework.GraphTransferInfo.NodeInfo.getDefaultInstance();
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeInfo build() {
        org.tensorflow.framework.GraphTransferInfo.NodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeInfo buildPartial() {
        org.tensorflow.framework.GraphTransferInfo.NodeInfo result = new org.tensorflow.framework.GraphTransferInfo.NodeInfo(this);
        result.name_ = name_;
        result.nodeId_ = nodeId_;
        result.typeName_ = typeName_;
        result.socOpId_ = socOpId_;
        result.paddingId_ = paddingId_;
        result.inputCount_ = inputCount_;
        result.outputCount_ = outputCount_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.framework.GraphTransferInfo.NodeInfo) {
          return mergeFrom((org.tensorflow.framework.GraphTransferInfo.NodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.framework.GraphTransferInfo.NodeInfo other) {
        if (other == org.tensorflow.framework.GraphTransferInfo.NodeInfo.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (!other.getTypeName().isEmpty()) {
          typeName_ = other.typeName_;
          onChanged();
        }
        if (other.getSocOpId() != 0) {
          setSocOpId(other.getSocOpId());
        }
        if (other.getPaddingId() != 0) {
          setPaddingId(other.getPaddingId());
        }
        if (other.getInputCount() != 0) {
          setInputCount(other.getInputCount());
        }
        if (other.getOutputCount() != 0) {
          setOutputCount(other.getOutputCount());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.framework.GraphTransferInfo.NodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.framework.GraphTransferInfo.NodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 2;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 2;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 2;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object typeName_ = "";
      /**
       * <code>string type_name = 3;</code>
       */
      public java.lang.String getTypeName() {
        java.lang.Object ref = typeName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          typeName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string type_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTypeNameBytes() {
        java.lang.Object ref = typeName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          typeName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string type_name = 3;</code>
       */
      public Builder setTypeName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        typeName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string type_name = 3;</code>
       */
      public Builder clearTypeName() {
        
        typeName_ = getDefaultInstance().getTypeName();
        onChanged();
        return this;
      }
      /**
       * <code>string type_name = 3;</code>
       */
      public Builder setTypeNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        typeName_ = value;
        onChanged();
        return this;
      }

      private int socOpId_ ;
      /**
       * <code>int32 soc_op_id = 4;</code>
       */
      public int getSocOpId() {
        return socOpId_;
      }
      /**
       * <code>int32 soc_op_id = 4;</code>
       */
      public Builder setSocOpId(int value) {
        
        socOpId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 soc_op_id = 4;</code>
       */
      public Builder clearSocOpId() {
        
        socOpId_ = 0;
        onChanged();
        return this;
      }

      private int paddingId_ ;
      /**
       * <code>int32 padding_id = 5;</code>
       */
      public int getPaddingId() {
        return paddingId_;
      }
      /**
       * <code>int32 padding_id = 5;</code>
       */
      public Builder setPaddingId(int value) {
        
        paddingId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 padding_id = 5;</code>
       */
      public Builder clearPaddingId() {
        
        paddingId_ = 0;
        onChanged();
        return this;
      }

      private int inputCount_ ;
      /**
       * <code>int32 input_count = 6;</code>
       */
      public int getInputCount() {
        return inputCount_;
      }
      /**
       * <code>int32 input_count = 6;</code>
       */
      public Builder setInputCount(int value) {
        
        inputCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 input_count = 6;</code>
       */
      public Builder clearInputCount() {
        
        inputCount_ = 0;
        onChanged();
        return this;
      }

      private int outputCount_ ;
      /**
       * <code>int32 output_count = 7;</code>
       */
      public int getOutputCount() {
        return outputCount_;
      }
      /**
       * <code>int32 output_count = 7;</code>
       */
      public Builder setOutputCount(int value) {
        
        outputCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 output_count = 7;</code>
       */
      public Builder clearOutputCount() {
        
        outputCount_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.NodeInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.NodeInfo)
    private static final org.tensorflow.framework.GraphTransferInfo.NodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.framework.GraphTransferInfo.NodeInfo();
    }

    public static org.tensorflow.framework.GraphTransferInfo.NodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<NodeInfo>() {
      public NodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeInfo> getParserForType() {
      return PARSER;
    }

    public org.tensorflow.framework.GraphTransferInfo.NodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConstNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.ConstNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>int32 node_id = 2;</code>
     */
    int getNodeId();

    /**
     * <code>repeated int64 shape = 3;</code>
     */
    java.util.List<java.lang.Long> getShapeList();
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    int getShapeCount();
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    long getShape(int index);

    /**
     * <code>bytes data = 4;</code>
     */
    com.google.protobuf.ByteString getData();

    /**
     * <code>.tensorflow.DataType dtype = 5;</code>
     */
    int getDtypeValue();
    /**
     * <code>.tensorflow.DataType dtype = 5;</code>
     */
    org.tensorflow.framework.DataType getDtype();
  }
  /**
   * Protobuf type {@code tensorflow.GraphTransferInfo.ConstNodeInfo}
   */
  public  static final class ConstNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.ConstNodeInfo)
      ConstNodeInfoOrBuilder {
    // Use ConstNodeInfo.newBuilder() to construct.
    private ConstNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConstNodeInfo() {
      name_ = "";
      nodeId_ = 0;
      shape_ = java.util.Collections.emptyList();
      data_ = com.google.protobuf.ByteString.EMPTY;
      dtype_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ConstNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {

              nodeId_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                shape_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              shape_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                shape_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {

              data_ = input.readBytes();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();

              dtype_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.class, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_ID_FIELD_NUMBER = 2;
    private int nodeId_;
    /**
     * <code>int32 node_id = 2;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int SHAPE_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> shape_;
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    public java.util.List<java.lang.Long>
        getShapeList() {
      return shape_;
    }
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <code>repeated int64 shape = 3;</code>
     */
    public long getShape(int index) {
      return shape_.get(index);
    }
    private int shapeMemoizedSerializedSize = -1;

    public static final int DATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString data_;
    /**
     * <code>bytes data = 4;</code>
     */
    public com.google.protobuf.ByteString getData() {
      return data_;
    }

    public static final int DTYPE_FIELD_NUMBER = 5;
    private int dtype_;
    /**
     * <code>.tensorflow.DataType dtype = 5;</code>
     */
    public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <code>.tensorflow.DataType dtype = 5;</code>
     */
    public org.tensorflow.framework.DataType getDtype() {
      org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
      return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (nodeId_ != 0) {
        output.writeInt32(2, nodeId_);
      }
      if (getShapeList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(shapeMemoizedSerializedSize);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeInt64NoTag(shape_.get(i));
      }
      if (!data_.isEmpty()) {
        output.writeBytes(4, data_);
      }
      if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        output.writeEnum(5, dtype_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nodeId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(shape_.get(i));
        }
        size += dataSize;
        if (!getShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shapeMemoizedSerializedSize = dataSize;
      }
      if (!data_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, data_);
      }
      if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, dtype_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo)) {
        return super.equals(obj);
      }
      org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo other = (org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && getShapeList()
          .equals(other.getShapeList());
      result = result && getData()
          .equals(other.getData());
      result = result && dtype_ == other.dtype_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      if (getShapeCount() > 0) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShapeList().hashCode();
      }
      hash = (37 * hash) + DATA_FIELD_NUMBER;
      hash = (53 * hash) + getData().hashCode();
      hash = (37 * hash) + DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + dtype_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.GraphTransferInfo.ConstNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.ConstNodeInfo)
        org.tensorflow.framework.GraphTransferInfo.ConstNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.class, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        nodeId_ = 0;

        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        data_ = com.google.protobuf.ByteString.EMPTY;

        dtype_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_ConstNodeInfo_descriptor;
      }

      public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo getDefaultInstanceForType() {
        return org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.getDefaultInstance();
      }

      public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo build() {
        org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo buildPartial() {
        org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo result = new org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.nodeId_ = nodeId_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.shape_ = shape_;
        result.data_ = data_;
        result.dtype_ = dtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo) {
          return mergeFrom((org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo other) {
        if (other == org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        if (other.getData() != com.google.protobuf.ByteString.EMPTY) {
          setData(other.getData());
        }
        if (other.dtype_ != 0) {
          setDtypeValue(other.getDtypeValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 2;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 2;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 2;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> shape_ = java.util.Collections.emptyList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          shape_ = new java.util.ArrayList<java.lang.Long>(shape_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public java.util.List<java.lang.Long>
          getShapeList() {
        return java.util.Collections.unmodifiableList(shape_);
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public long getShape(int index) {
        return shape_.get(index);
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public Builder setShape(
          int index, long value) {
        ensureShapeIsMutable();
        shape_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public Builder addShape(long value) {
        ensureShapeIsMutable();
        shape_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public Builder addAllShape(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shape_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 3;</code>
       */
      public Builder clearShape() {
        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString data_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes data = 4;</code>
       */
      public com.google.protobuf.ByteString getData() {
        return data_;
      }
      /**
       * <code>bytes data = 4;</code>
       */
      public Builder setData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        data_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bytes data = 4;</code>
       */
      public Builder clearData() {
        
        data_ = getDefaultInstance().getData();
        onChanged();
        return this;
      }

      private int dtype_ = 0;
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public Builder setDtypeValue(int value) {
        dtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public org.tensorflow.framework.DataType getDtype() {
        org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
        return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public Builder setDtype(org.tensorflow.framework.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 5;</code>
       */
      public Builder clearDtype() {
        
        dtype_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.ConstNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.ConstNodeInfo)
    private static final org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo();
    }

    public static org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ConstNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<ConstNodeInfo>() {
      public ConstNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ConstNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ConstNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConstNodeInfo> getParserForType() {
      return PARSER;
    }

    public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeInputInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.NodeInputInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 node_id = 1;</code>
     */
    int getNodeId();

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInput> 
        getNodeInputList();
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    org.tensorflow.framework.GraphTransferInfo.NodeInput getNodeInput(int index);
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    int getNodeInputCount();
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder> 
        getNodeInputOrBuilderList();
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder getNodeInputOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tensorflow.GraphTransferInfo.NodeInputInfo}
   */
  public  static final class NodeInputInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.NodeInputInfo)
      NodeInputInfoOrBuilder {
    // Use NodeInputInfo.newBuilder() to construct.
    private NodeInputInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeInputInfo() {
      nodeId_ = 0;
      nodeInput_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NodeInputInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nodeId_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                nodeInput_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.NodeInput>();
                mutable_bitField0_ |= 0x00000002;
              }
              nodeInput_.add(
                  input.readMessage(org.tensorflow.framework.GraphTransferInfo.NodeInput.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          nodeInput_ = java.util.Collections.unmodifiableList(nodeInput_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.class, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder.class);
    }

    private int bitField0_;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>int32 node_id = 1;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int NODE_INPUT_FIELD_NUMBER = 2;
    private java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInput> nodeInput_;
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInput> getNodeInputList() {
      return nodeInput_;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder> 
        getNodeInputOrBuilderList() {
      return nodeInput_;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public int getNodeInputCount() {
      return nodeInput_.size();
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInput getNodeInput(int index) {
      return nodeInput_.get(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder getNodeInputOrBuilder(
        int index) {
      return nodeInput_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeId_ != 0) {
        output.writeInt32(1, nodeId_);
      }
      for (int i = 0; i < nodeInput_.size(); i++) {
        output.writeMessage(2, nodeInput_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nodeId_);
      }
      for (int i = 0; i < nodeInput_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, nodeInput_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.framework.GraphTransferInfo.NodeInputInfo)) {
        return super.equals(obj);
      }
      org.tensorflow.framework.GraphTransferInfo.NodeInputInfo other = (org.tensorflow.framework.GraphTransferInfo.NodeInputInfo) obj;

      boolean result = true;
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && getNodeInputList()
          .equals(other.getNodeInputList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      if (getNodeInputCount() > 0) {
        hash = (37 * hash) + NODE_INPUT_FIELD_NUMBER;
        hash = (53 * hash) + getNodeInputList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.framework.GraphTransferInfo.NodeInputInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.GraphTransferInfo.NodeInputInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.NodeInputInfo)
        org.tensorflow.framework.GraphTransferInfo.NodeInputInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.class, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodeInputFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = 0;

        if (nodeInputBuilder_ == null) {
          nodeInput_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          nodeInputBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeInputInfo_descriptor;
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeInputInfo getDefaultInstanceForType() {
        return org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.getDefaultInstance();
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeInputInfo build() {
        org.tensorflow.framework.GraphTransferInfo.NodeInputInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeInputInfo buildPartial() {
        org.tensorflow.framework.GraphTransferInfo.NodeInputInfo result = new org.tensorflow.framework.GraphTransferInfo.NodeInputInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.nodeId_ = nodeId_;
        if (nodeInputBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            nodeInput_ = java.util.Collections.unmodifiableList(nodeInput_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.nodeInput_ = nodeInput_;
        } else {
          result.nodeInput_ = nodeInputBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.framework.GraphTransferInfo.NodeInputInfo) {
          return mergeFrom((org.tensorflow.framework.GraphTransferInfo.NodeInputInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.framework.GraphTransferInfo.NodeInputInfo other) {
        if (other == org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.getDefaultInstance()) return this;
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (nodeInputBuilder_ == null) {
          if (!other.nodeInput_.isEmpty()) {
            if (nodeInput_.isEmpty()) {
              nodeInput_ = other.nodeInput_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureNodeInputIsMutable();
              nodeInput_.addAll(other.nodeInput_);
            }
            onChanged();
          }
        } else {
          if (!other.nodeInput_.isEmpty()) {
            if (nodeInputBuilder_.isEmpty()) {
              nodeInputBuilder_.dispose();
              nodeInputBuilder_ = null;
              nodeInput_ = other.nodeInput_;
              bitField0_ = (bitField0_ & ~0x00000002);
              nodeInputBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodeInputFieldBuilder() : null;
            } else {
              nodeInputBuilder_.addAllMessages(other.nodeInput_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.framework.GraphTransferInfo.NodeInputInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.framework.GraphTransferInfo.NodeInputInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInput> nodeInput_ =
        java.util.Collections.emptyList();
      private void ensureNodeInputIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          nodeInput_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.NodeInput>(nodeInput_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.tensorflow.framework.GraphTransferInfo.NodeInput, org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder, org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder> nodeInputBuilder_;

      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInput> getNodeInputList() {
        if (nodeInputBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodeInput_);
        } else {
          return nodeInputBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public int getNodeInputCount() {
        if (nodeInputBuilder_ == null) {
          return nodeInput_.size();
        } else {
          return nodeInputBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public org.tensorflow.framework.GraphTransferInfo.NodeInput getNodeInput(int index) {
        if (nodeInputBuilder_ == null) {
          return nodeInput_.get(index);
        } else {
          return nodeInputBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder setNodeInput(
          int index, org.tensorflow.framework.GraphTransferInfo.NodeInput value) {
        if (nodeInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeInputIsMutable();
          nodeInput_.set(index, value);
          onChanged();
        } else {
          nodeInputBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder setNodeInput(
          int index, org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder builderForValue) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          nodeInput_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodeInputBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addNodeInput(org.tensorflow.framework.GraphTransferInfo.NodeInput value) {
        if (nodeInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeInputIsMutable();
          nodeInput_.add(value);
          onChanged();
        } else {
          nodeInputBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addNodeInput(
          int index, org.tensorflow.framework.GraphTransferInfo.NodeInput value) {
        if (nodeInputBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeInputIsMutable();
          nodeInput_.add(index, value);
          onChanged();
        } else {
          nodeInputBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addNodeInput(
          org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder builderForValue) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          nodeInput_.add(builderForValue.build());
          onChanged();
        } else {
          nodeInputBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addNodeInput(
          int index, org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder builderForValue) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          nodeInput_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodeInputBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder addAllNodeInput(
          java.lang.Iterable<? extends org.tensorflow.framework.GraphTransferInfo.NodeInput> values) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodeInput_);
          onChanged();
        } else {
          nodeInputBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder clearNodeInput() {
        if (nodeInputBuilder_ == null) {
          nodeInput_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          nodeInputBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public Builder removeNodeInput(int index) {
        if (nodeInputBuilder_ == null) {
          ensureNodeInputIsMutable();
          nodeInput_.remove(index);
          onChanged();
        } else {
          nodeInputBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder getNodeInputBuilder(
          int index) {
        return getNodeInputFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder getNodeInputOrBuilder(
          int index) {
        if (nodeInputBuilder_ == null) {
          return nodeInput_.get(index);  } else {
          return nodeInputBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder> 
           getNodeInputOrBuilderList() {
        if (nodeInputBuilder_ != null) {
          return nodeInputBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodeInput_);
        }
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder addNodeInputBuilder() {
        return getNodeInputFieldBuilder().addBuilder(
            org.tensorflow.framework.GraphTransferInfo.NodeInput.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder addNodeInputBuilder(
          int index) {
        return getNodeInputFieldBuilder().addBuilder(
            index, org.tensorflow.framework.GraphTransferInfo.NodeInput.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.GraphTransferInfo.NodeInput node_input = 2;</code>
       */
      public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder> 
           getNodeInputBuilderList() {
        return getNodeInputFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          org.tensorflow.framework.GraphTransferInfo.NodeInput, org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder, org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder> 
          getNodeInputFieldBuilder() {
        if (nodeInputBuilder_ == null) {
          nodeInputBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              org.tensorflow.framework.GraphTransferInfo.NodeInput, org.tensorflow.framework.GraphTransferInfo.NodeInput.Builder, org.tensorflow.framework.GraphTransferInfo.NodeInputOrBuilder>(
                  nodeInput_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          nodeInput_ = null;
        }
        return nodeInputBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.NodeInputInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.NodeInputInfo)
    private static final org.tensorflow.framework.GraphTransferInfo.NodeInputInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.framework.GraphTransferInfo.NodeInputInfo();
    }

    public static org.tensorflow.framework.GraphTransferInfo.NodeInputInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeInputInfo>
        PARSER = new com.google.protobuf.AbstractParser<NodeInputInfo>() {
      public NodeInputInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeInputInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeInputInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeInputInfo> getParserForType() {
      return PARSER;
    }

    public org.tensorflow.framework.GraphTransferInfo.NodeInputInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface NodeOutputInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.NodeOutputInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int32 node_id = 1;</code>
     */
    int getNodeId();

    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    java.util.List<java.lang.Integer> getMaxByteSizeList();
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    int getMaxByteSizeCount();
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    int getMaxByteSize(int index);
  }
  /**
   * Protobuf type {@code tensorflow.GraphTransferInfo.NodeOutputInfo}
   */
  public  static final class NodeOutputInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.NodeOutputInfo)
      NodeOutputInfoOrBuilder {
    // Use NodeOutputInfo.newBuilder() to construct.
    private NodeOutputInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeOutputInfo() {
      nodeId_ = 0;
      maxByteSize_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private NodeOutputInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              nodeId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                maxByteSize_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              maxByteSize_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                maxByteSize_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                maxByteSize_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          maxByteSize_ = java.util.Collections.unmodifiableList(maxByteSize_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.class, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder.class);
    }

    private int bitField0_;
    public static final int NODE_ID_FIELD_NUMBER = 1;
    private int nodeId_;
    /**
     * <code>int32 node_id = 1;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int MAX_BYTE_SIZE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> maxByteSize_;
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getMaxByteSizeList() {
      return maxByteSize_;
    }
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    public int getMaxByteSizeCount() {
      return maxByteSize_.size();
    }
    /**
     * <code>repeated int32 max_byte_size = 2;</code>
     */
    public int getMaxByteSize(int index) {
      return maxByteSize_.get(index);
    }
    private int maxByteSizeMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (nodeId_ != 0) {
        output.writeInt32(1, nodeId_);
      }
      if (getMaxByteSizeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(maxByteSizeMemoizedSerializedSize);
      }
      for (int i = 0; i < maxByteSize_.size(); i++) {
        output.writeInt32NoTag(maxByteSize_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, nodeId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < maxByteSize_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(maxByteSize_.get(i));
        }
        size += dataSize;
        if (!getMaxByteSizeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        maxByteSizeMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo)) {
        return super.equals(obj);
      }
      org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo other = (org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo) obj;

      boolean result = true;
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && getMaxByteSizeList()
          .equals(other.getMaxByteSizeList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      if (getMaxByteSizeCount() > 0) {
        hash = (37 * hash) + MAX_BYTE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + getMaxByteSizeList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.GraphTransferInfo.NodeOutputInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.NodeOutputInfo)
        org.tensorflow.framework.GraphTransferInfo.NodeOutputInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.class, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        nodeId_ = 0;

        maxByteSize_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_NodeOutputInfo_descriptor;
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo getDefaultInstanceForType() {
        return org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.getDefaultInstance();
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo build() {
        org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo buildPartial() {
        org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo result = new org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.nodeId_ = nodeId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          maxByteSize_ = java.util.Collections.unmodifiableList(maxByteSize_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.maxByteSize_ = maxByteSize_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo) {
          return mergeFrom((org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo other) {
        if (other == org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.getDefaultInstance()) return this;
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (!other.maxByteSize_.isEmpty()) {
          if (maxByteSize_.isEmpty()) {
            maxByteSize_ = other.maxByteSize_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMaxByteSizeIsMutable();
            maxByteSize_.addAll(other.maxByteSize_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 1;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 1;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> maxByteSize_ = java.util.Collections.emptyList();
      private void ensureMaxByteSizeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          maxByteSize_ = new java.util.ArrayList<java.lang.Integer>(maxByteSize_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getMaxByteSizeList() {
        return java.util.Collections.unmodifiableList(maxByteSize_);
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public int getMaxByteSizeCount() {
        return maxByteSize_.size();
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public int getMaxByteSize(int index) {
        return maxByteSize_.get(index);
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public Builder setMaxByteSize(
          int index, int value) {
        ensureMaxByteSizeIsMutable();
        maxByteSize_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public Builder addMaxByteSize(int value) {
        ensureMaxByteSizeIsMutable();
        maxByteSize_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public Builder addAllMaxByteSize(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMaxByteSizeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, maxByteSize_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 max_byte_size = 2;</code>
       */
      public Builder clearMaxByteSize() {
        maxByteSize_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.NodeOutputInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.NodeOutputInfo)
    private static final org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo();
    }

    public static org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeOutputInfo>
        PARSER = new com.google.protobuf.AbstractParser<NodeOutputInfo>() {
      public NodeOutputInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new NodeOutputInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeOutputInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<NodeOutputInfo> getParserForType() {
      return PARSER;
    }

    public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphInputNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated int64 shape = 2;</code>
     */
    java.util.List<java.lang.Long> getShapeList();
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    int getShapeCount();
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    long getShape(int index);

    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    int getDtypeValue();
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    org.tensorflow.framework.DataType getDtype();
  }
  /**
   * Protobuf type {@code tensorflow.GraphTransferInfo.GraphInputNodeInfo}
   */
  public  static final class GraphInputNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
      GraphInputNodeInfoOrBuilder {
    // Use GraphInputNodeInfo.newBuilder() to construct.
    private GraphInputNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphInputNodeInfo() {
      name_ = "";
      shape_ = java.util.Collections.emptyList();
      dtype_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GraphInputNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                shape_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              shape_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                shape_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              dtype_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.class, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHAPE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> shape_;
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getShapeList() {
      return shape_;
    }
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public long getShape(int index) {
      return shape_.get(index);
    }
    private int shapeMemoizedSerializedSize = -1;

    public static final int DTYPE_FIELD_NUMBER = 3;
    private int dtype_;
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    public org.tensorflow.framework.DataType getDtype() {
      org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
      return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (getShapeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(shapeMemoizedSerializedSize);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeInt64NoTag(shape_.get(i));
      }
      if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        output.writeEnum(3, dtype_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(shape_.get(i));
        }
        size += dataSize;
        if (!getShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shapeMemoizedSerializedSize = dataSize;
      }
      if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, dtype_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo)) {
        return super.equals(obj);
      }
      org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo other = (org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getShapeList()
          .equals(other.getShapeList());
      result = result && dtype_ == other.dtype_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getShapeCount() > 0) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShapeList().hashCode();
      }
      hash = (37 * hash) + DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + dtype_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.GraphTransferInfo.GraphInputNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
        org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.class, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        dtype_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphInputNodeInfo_descriptor;
      }

      public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo getDefaultInstanceForType() {
        return org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.getDefaultInstance();
      }

      public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo build() {
        org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo buildPartial() {
        org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo result = new org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.shape_ = shape_;
        result.dtype_ = dtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo) {
          return mergeFrom((org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo other) {
        if (other == org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        if (other.dtype_ != 0) {
          setDtypeValue(other.getDtypeValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> shape_ = java.util.Collections.emptyList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = new java.util.ArrayList<java.lang.Long>(shape_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getShapeList() {
        return java.util.Collections.unmodifiableList(shape_);
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public long getShape(int index) {
        return shape_.get(index);
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder setShape(
          int index, long value) {
        ensureShapeIsMutable();
        shape_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder addShape(long value) {
        ensureShapeIsMutable();
        shape_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder addAllShape(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shape_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder clearShape() {
        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int dtype_ = 0;
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder setDtypeValue(int value) {
        dtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public org.tensorflow.framework.DataType getDtype() {
        org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
        return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder setDtype(org.tensorflow.framework.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder clearDtype() {
        
        dtype_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.GraphInputNodeInfo)
    private static final org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo();
    }

    public static org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphInputNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<GraphInputNodeInfo>() {
      public GraphInputNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GraphInputNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GraphInputNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphInputNodeInfo> getParserForType() {
      return PARSER;
    }

    public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphOutputNodeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>repeated int64 shape = 2;</code>
     */
    java.util.List<java.lang.Long> getShapeList();
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    int getShapeCount();
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    long getShape(int index);

    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    int getDtypeValue();
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    org.tensorflow.framework.DataType getDtype();
  }
  /**
   * Protobuf type {@code tensorflow.GraphTransferInfo.GraphOutputNodeInfo}
   */
  public  static final class GraphOutputNodeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
      GraphOutputNodeInfoOrBuilder {
    // Use GraphOutputNodeInfo.newBuilder() to construct.
    private GraphOutputNodeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GraphOutputNodeInfo() {
      name_ = "";
      shape_ = java.util.Collections.emptyList();
      dtype_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GraphOutputNodeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                shape_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              shape_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                shape_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                shape_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              dtype_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.class, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SHAPE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> shape_;
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getShapeList() {
      return shape_;
    }
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public int getShapeCount() {
      return shape_.size();
    }
    /**
     * <code>repeated int64 shape = 2;</code>
     */
    public long getShape(int index) {
      return shape_.get(index);
    }
    private int shapeMemoizedSerializedSize = -1;

    public static final int DTYPE_FIELD_NUMBER = 3;
    private int dtype_;
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    public int getDtypeValue() {
      return dtype_;
    }
    /**
     * <code>.tensorflow.DataType dtype = 3;</code>
     */
    public org.tensorflow.framework.DataType getDtype() {
      org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
      return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (getShapeList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(shapeMemoizedSerializedSize);
      }
      for (int i = 0; i < shape_.size(); i++) {
        output.writeInt64NoTag(shape_.get(i));
      }
      if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        output.writeEnum(3, dtype_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < shape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(shape_.get(i));
        }
        size += dataSize;
        if (!getShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        shapeMemoizedSerializedSize = dataSize;
      }
      if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, dtype_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo)) {
        return super.equals(obj);
      }
      org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo other = (org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && getShapeList()
          .equals(other.getShapeList());
      result = result && dtype_ == other.dtype_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (getShapeCount() > 0) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShapeList().hashCode();
      }
      hash = (37 * hash) + DTYPE_FIELD_NUMBER;
      hash = (53 * hash) + dtype_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.GraphTransferInfo.GraphOutputNodeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
        org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.class, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder.class);
      }

      // Construct using org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        dtype_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_GraphOutputNodeInfo_descriptor;
      }

      public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo getDefaultInstanceForType() {
        return org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.getDefaultInstance();
      }

      public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo build() {
        org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo buildPartial() {
        org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo result = new org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = java.util.Collections.unmodifiableList(shape_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.shape_ = shape_;
        result.dtype_ = dtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo) {
          return mergeFrom((org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo other) {
        if (other == org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (!other.shape_.isEmpty()) {
          if (shape_.isEmpty()) {
            shape_ = other.shape_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureShapeIsMutable();
            shape_.addAll(other.shape_);
          }
          onChanged();
        }
        if (other.dtype_ != 0) {
          setDtypeValue(other.getDtypeValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> shape_ = java.util.Collections.emptyList();
      private void ensureShapeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          shape_ = new java.util.ArrayList<java.lang.Long>(shape_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getShapeList() {
        return java.util.Collections.unmodifiableList(shape_);
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public int getShapeCount() {
        return shape_.size();
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public long getShape(int index) {
        return shape_.get(index);
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder setShape(
          int index, long value) {
        ensureShapeIsMutable();
        shape_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder addShape(long value) {
        ensureShapeIsMutable();
        shape_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder addAllShape(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, shape_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 shape = 2;</code>
       */
      public Builder clearShape() {
        shape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int dtype_ = 0;
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder setDtypeValue(int value) {
        dtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public org.tensorflow.framework.DataType getDtype() {
        org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
        return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder setDtype(org.tensorflow.framework.DataType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        dtype_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.DataType dtype = 3;</code>
       */
      public Builder clearDtype() {
        
        dtype_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo.GraphOutputNodeInfo)
    private static final org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo();
    }

    public static org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GraphOutputNodeInfo>
        PARSER = new com.google.protobuf.AbstractParser<GraphOutputNodeInfo>() {
      public GraphOutputNodeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GraphOutputNodeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GraphOutputNodeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GraphOutputNodeInfo> getParserForType() {
      return PARSER;
    }

    public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private int bitField0_;
  public static final int NODE_INFO_FIELD_NUMBER = 1;
  private java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInfo> nodeInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInfo> getNodeInfoList() {
    return nodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.NodeInfoOrBuilder> 
      getNodeInfoOrBuilderList() {
    return nodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public int getNodeInfoCount() {
    return nodeInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.NodeInfo getNodeInfo(int index) {
    return nodeInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.NodeInfoOrBuilder getNodeInfoOrBuilder(
      int index) {
    return nodeInfo_.get(index);
  }

  public static final int CONST_NODE_INFO_FIELD_NUMBER = 2;
  private java.util.List<org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo> constNodeInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public java.util.List<org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo> getConstNodeInfoList() {
    return constNodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.ConstNodeInfoOrBuilder> 
      getConstNodeInfoOrBuilderList() {
    return constNodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public int getConstNodeInfoCount() {
    return constNodeInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo getConstNodeInfo(int index) {
    return constNodeInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfoOrBuilder getConstNodeInfoOrBuilder(
      int index) {
    return constNodeInfo_.get(index);
  }

  public static final int NODE_INPUT_INFO_FIELD_NUMBER = 3;
  private java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInputInfo> nodeInputInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInputInfo> getNodeInputInfoList() {
    return nodeInputInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.NodeInputInfoOrBuilder> 
      getNodeInputInfoOrBuilderList() {
    return nodeInputInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public int getNodeInputInfoCount() {
    return nodeInputInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.NodeInputInfo getNodeInputInfo(int index) {
    return nodeInputInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.NodeInputInfoOrBuilder getNodeInputInfoOrBuilder(
      int index) {
    return nodeInputInfo_.get(index);
  }

  public static final int NODE_OUTPUT_INFO_FIELD_NUMBER = 4;
  private java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo> nodeOutputInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo> getNodeOutputInfoList() {
    return nodeOutputInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.NodeOutputInfoOrBuilder> 
      getNodeOutputInfoOrBuilderList() {
    return nodeOutputInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public int getNodeOutputInfoCount() {
    return nodeOutputInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo getNodeOutputInfo(int index) {
    return nodeOutputInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfoOrBuilder getNodeOutputInfoOrBuilder(
      int index) {
    return nodeOutputInfo_.get(index);
  }

  public static final int GRAPH_INPUT_NODE_INFO_FIELD_NUMBER = 5;
  private java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo> graphInputNodeInfo_;
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo> getGraphInputNodeInfoList() {
    return graphInputNodeInfo_;
  }
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfoOrBuilder> 
      getGraphInputNodeInfoOrBuilderList() {
    return graphInputNodeInfo_;
  }
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public int getGraphInputNodeInfoCount() {
    return graphInputNodeInfo_.size();
  }
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo getGraphInputNodeInfo(int index) {
    return graphInputNodeInfo_.get(index);
  }
  /**
   * <pre>
   * Input Node parameters of transferred graph
   * </pre>
   *
   * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfoOrBuilder getGraphInputNodeInfoOrBuilder(
      int index) {
    return graphInputNodeInfo_.get(index);
  }

  public static final int GRAPH_OUTPUT_NODE_INFO_FIELD_NUMBER = 6;
  private java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo> graphOutputNodeInfo_;
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo> getGraphOutputNodeInfoList() {
    return graphOutputNodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfoOrBuilder> 
      getGraphOutputNodeInfoOrBuilderList() {
    return graphOutputNodeInfo_;
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public int getGraphOutputNodeInfoCount() {
    return graphOutputNodeInfo_.size();
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo getGraphOutputNodeInfo(int index) {
    return graphOutputNodeInfo_.get(index);
  }
  /**
   * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfoOrBuilder getGraphOutputNodeInfoOrBuilder(
      int index) {
    return graphOutputNodeInfo_.get(index);
  }

  public static final int DESTINATION_FIELD_NUMBER = 7;
  private int destination_;
  /**
   * <pre>
   * Destination of graph transfer
   * </pre>
   *
   * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
   */
  public int getDestinationValue() {
    return destination_;
  }
  /**
   * <pre>
   * Destination of graph transfer
   * </pre>
   *
   * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
   */
  public org.tensorflow.framework.GraphTransferInfo.Destination getDestination() {
    org.tensorflow.framework.GraphTransferInfo.Destination result = org.tensorflow.framework.GraphTransferInfo.Destination.valueOf(destination_);
    return result == null ? org.tensorflow.framework.GraphTransferInfo.Destination.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < nodeInfo_.size(); i++) {
      output.writeMessage(1, nodeInfo_.get(i));
    }
    for (int i = 0; i < constNodeInfo_.size(); i++) {
      output.writeMessage(2, constNodeInfo_.get(i));
    }
    for (int i = 0; i < nodeInputInfo_.size(); i++) {
      output.writeMessage(3, nodeInputInfo_.get(i));
    }
    for (int i = 0; i < nodeOutputInfo_.size(); i++) {
      output.writeMessage(4, nodeOutputInfo_.get(i));
    }
    for (int i = 0; i < graphInputNodeInfo_.size(); i++) {
      output.writeMessage(5, graphInputNodeInfo_.get(i));
    }
    for (int i = 0; i < graphOutputNodeInfo_.size(); i++) {
      output.writeMessage(6, graphOutputNodeInfo_.get(i));
    }
    if (destination_ != org.tensorflow.framework.GraphTransferInfo.Destination.NOP.getNumber()) {
      output.writeEnum(7, destination_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < nodeInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, nodeInfo_.get(i));
    }
    for (int i = 0; i < constNodeInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, constNodeInfo_.get(i));
    }
    for (int i = 0; i < nodeInputInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, nodeInputInfo_.get(i));
    }
    for (int i = 0; i < nodeOutputInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, nodeOutputInfo_.get(i));
    }
    for (int i = 0; i < graphInputNodeInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, graphInputNodeInfo_.get(i));
    }
    for (int i = 0; i < graphOutputNodeInfo_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, graphOutputNodeInfo_.get(i));
    }
    if (destination_ != org.tensorflow.framework.GraphTransferInfo.Destination.NOP.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, destination_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.framework.GraphTransferInfo)) {
      return super.equals(obj);
    }
    org.tensorflow.framework.GraphTransferInfo other = (org.tensorflow.framework.GraphTransferInfo) obj;

    boolean result = true;
    result = result && getNodeInfoList()
        .equals(other.getNodeInfoList());
    result = result && getConstNodeInfoList()
        .equals(other.getConstNodeInfoList());
    result = result && getNodeInputInfoList()
        .equals(other.getNodeInputInfoList());
    result = result && getNodeOutputInfoList()
        .equals(other.getNodeOutputInfoList());
    result = result && getGraphInputNodeInfoList()
        .equals(other.getGraphInputNodeInfoList());
    result = result && getGraphOutputNodeInfoList()
        .equals(other.getGraphOutputNodeInfoList());
    result = result && destination_ == other.destination_;
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getNodeInfoCount() > 0) {
      hash = (37 * hash) + NODE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getNodeInfoList().hashCode();
    }
    if (getConstNodeInfoCount() > 0) {
      hash = (37 * hash) + CONST_NODE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getConstNodeInfoList().hashCode();
    }
    if (getNodeInputInfoCount() > 0) {
      hash = (37 * hash) + NODE_INPUT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getNodeInputInfoList().hashCode();
    }
    if (getNodeOutputInfoCount() > 0) {
      hash = (37 * hash) + NODE_OUTPUT_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getNodeOutputInfoList().hashCode();
    }
    if (getGraphInputNodeInfoCount() > 0) {
      hash = (37 * hash) + GRAPH_INPUT_NODE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getGraphInputNodeInfoList().hashCode();
    }
    if (getGraphOutputNodeInfoCount() > 0) {
      hash = (37 * hash) + GRAPH_OUTPUT_NODE_INFO_FIELD_NUMBER;
      hash = (53 * hash) + getGraphOutputNodeInfoList().hashCode();
    }
    hash = (37 * hash) + DESTINATION_FIELD_NUMBER;
    hash = (53 * hash) + destination_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.framework.GraphTransferInfo parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.framework.GraphTransferInfo parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.framework.GraphTransferInfo prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Protocol buffer representing a handle to a tensorflow resource. Handles are
   * not valid across executions, but can be serialized back and forth from within
   * a single run.
   * </pre>
   *
   * Protobuf type {@code tensorflow.GraphTransferInfo}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.GraphTransferInfo)
      org.tensorflow.framework.GraphTransferInfoOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.GraphTransferInfo.class, org.tensorflow.framework.GraphTransferInfo.Builder.class);
    }

    // Construct using org.tensorflow.framework.GraphTransferInfo.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getNodeInfoFieldBuilder();
        getConstNodeInfoFieldBuilder();
        getNodeInputInfoFieldBuilder();
        getNodeOutputInfoFieldBuilder();
        getGraphInputNodeInfoFieldBuilder();
        getGraphOutputNodeInfoFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (nodeInfoBuilder_ == null) {
        nodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        nodeInfoBuilder_.clear();
      }
      if (constNodeInfoBuilder_ == null) {
        constNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        constNodeInfoBuilder_.clear();
      }
      if (nodeInputInfoBuilder_ == null) {
        nodeInputInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        nodeInputInfoBuilder_.clear();
      }
      if (nodeOutputInfoBuilder_ == null) {
        nodeOutputInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        nodeOutputInfoBuilder_.clear();
      }
      if (graphInputNodeInfoBuilder_ == null) {
        graphInputNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        graphInputNodeInfoBuilder_.clear();
      }
      if (graphOutputNodeInfoBuilder_ == null) {
        graphOutputNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        graphOutputNodeInfoBuilder_.clear();
      }
      destination_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.framework.GraphTransferInfoProto.internal_static_tensorflow_GraphTransferInfo_descriptor;
    }

    public org.tensorflow.framework.GraphTransferInfo getDefaultInstanceForType() {
      return org.tensorflow.framework.GraphTransferInfo.getDefaultInstance();
    }

    public org.tensorflow.framework.GraphTransferInfo build() {
      org.tensorflow.framework.GraphTransferInfo result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.tensorflow.framework.GraphTransferInfo buildPartial() {
      org.tensorflow.framework.GraphTransferInfo result = new org.tensorflow.framework.GraphTransferInfo(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (nodeInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          nodeInfo_ = java.util.Collections.unmodifiableList(nodeInfo_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.nodeInfo_ = nodeInfo_;
      } else {
        result.nodeInfo_ = nodeInfoBuilder_.build();
      }
      if (constNodeInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          constNodeInfo_ = java.util.Collections.unmodifiableList(constNodeInfo_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.constNodeInfo_ = constNodeInfo_;
      } else {
        result.constNodeInfo_ = constNodeInfoBuilder_.build();
      }
      if (nodeInputInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          nodeInputInfo_ = java.util.Collections.unmodifiableList(nodeInputInfo_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.nodeInputInfo_ = nodeInputInfo_;
      } else {
        result.nodeInputInfo_ = nodeInputInfoBuilder_.build();
      }
      if (nodeOutputInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          nodeOutputInfo_ = java.util.Collections.unmodifiableList(nodeOutputInfo_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.nodeOutputInfo_ = nodeOutputInfo_;
      } else {
        result.nodeOutputInfo_ = nodeOutputInfoBuilder_.build();
      }
      if (graphInputNodeInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          graphInputNodeInfo_ = java.util.Collections.unmodifiableList(graphInputNodeInfo_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.graphInputNodeInfo_ = graphInputNodeInfo_;
      } else {
        result.graphInputNodeInfo_ = graphInputNodeInfoBuilder_.build();
      }
      if (graphOutputNodeInfoBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          graphOutputNodeInfo_ = java.util.Collections.unmodifiableList(graphOutputNodeInfo_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.graphOutputNodeInfo_ = graphOutputNodeInfo_;
      } else {
        result.graphOutputNodeInfo_ = graphOutputNodeInfoBuilder_.build();
      }
      result.destination_ = destination_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.framework.GraphTransferInfo) {
        return mergeFrom((org.tensorflow.framework.GraphTransferInfo)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.framework.GraphTransferInfo other) {
      if (other == org.tensorflow.framework.GraphTransferInfo.getDefaultInstance()) return this;
      if (nodeInfoBuilder_ == null) {
        if (!other.nodeInfo_.isEmpty()) {
          if (nodeInfo_.isEmpty()) {
            nodeInfo_ = other.nodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureNodeInfoIsMutable();
            nodeInfo_.addAll(other.nodeInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.nodeInfo_.isEmpty()) {
          if (nodeInfoBuilder_.isEmpty()) {
            nodeInfoBuilder_.dispose();
            nodeInfoBuilder_ = null;
            nodeInfo_ = other.nodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000001);
            nodeInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodeInfoFieldBuilder() : null;
          } else {
            nodeInfoBuilder_.addAllMessages(other.nodeInfo_);
          }
        }
      }
      if (constNodeInfoBuilder_ == null) {
        if (!other.constNodeInfo_.isEmpty()) {
          if (constNodeInfo_.isEmpty()) {
            constNodeInfo_ = other.constNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureConstNodeInfoIsMutable();
            constNodeInfo_.addAll(other.constNodeInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.constNodeInfo_.isEmpty()) {
          if (constNodeInfoBuilder_.isEmpty()) {
            constNodeInfoBuilder_.dispose();
            constNodeInfoBuilder_ = null;
            constNodeInfo_ = other.constNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000002);
            constNodeInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getConstNodeInfoFieldBuilder() : null;
          } else {
            constNodeInfoBuilder_.addAllMessages(other.constNodeInfo_);
          }
        }
      }
      if (nodeInputInfoBuilder_ == null) {
        if (!other.nodeInputInfo_.isEmpty()) {
          if (nodeInputInfo_.isEmpty()) {
            nodeInputInfo_ = other.nodeInputInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureNodeInputInfoIsMutable();
            nodeInputInfo_.addAll(other.nodeInputInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.nodeInputInfo_.isEmpty()) {
          if (nodeInputInfoBuilder_.isEmpty()) {
            nodeInputInfoBuilder_.dispose();
            nodeInputInfoBuilder_ = null;
            nodeInputInfo_ = other.nodeInputInfo_;
            bitField0_ = (bitField0_ & ~0x00000004);
            nodeInputInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodeInputInfoFieldBuilder() : null;
          } else {
            nodeInputInfoBuilder_.addAllMessages(other.nodeInputInfo_);
          }
        }
      }
      if (nodeOutputInfoBuilder_ == null) {
        if (!other.nodeOutputInfo_.isEmpty()) {
          if (nodeOutputInfo_.isEmpty()) {
            nodeOutputInfo_ = other.nodeOutputInfo_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureNodeOutputInfoIsMutable();
            nodeOutputInfo_.addAll(other.nodeOutputInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.nodeOutputInfo_.isEmpty()) {
          if (nodeOutputInfoBuilder_.isEmpty()) {
            nodeOutputInfoBuilder_.dispose();
            nodeOutputInfoBuilder_ = null;
            nodeOutputInfo_ = other.nodeOutputInfo_;
            bitField0_ = (bitField0_ & ~0x00000008);
            nodeOutputInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getNodeOutputInfoFieldBuilder() : null;
          } else {
            nodeOutputInfoBuilder_.addAllMessages(other.nodeOutputInfo_);
          }
        }
      }
      if (graphInputNodeInfoBuilder_ == null) {
        if (!other.graphInputNodeInfo_.isEmpty()) {
          if (graphInputNodeInfo_.isEmpty()) {
            graphInputNodeInfo_ = other.graphInputNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureGraphInputNodeInfoIsMutable();
            graphInputNodeInfo_.addAll(other.graphInputNodeInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.graphInputNodeInfo_.isEmpty()) {
          if (graphInputNodeInfoBuilder_.isEmpty()) {
            graphInputNodeInfoBuilder_.dispose();
            graphInputNodeInfoBuilder_ = null;
            graphInputNodeInfo_ = other.graphInputNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000010);
            graphInputNodeInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGraphInputNodeInfoFieldBuilder() : null;
          } else {
            graphInputNodeInfoBuilder_.addAllMessages(other.graphInputNodeInfo_);
          }
        }
      }
      if (graphOutputNodeInfoBuilder_ == null) {
        if (!other.graphOutputNodeInfo_.isEmpty()) {
          if (graphOutputNodeInfo_.isEmpty()) {
            graphOutputNodeInfo_ = other.graphOutputNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureGraphOutputNodeInfoIsMutable();
            graphOutputNodeInfo_.addAll(other.graphOutputNodeInfo_);
          }
          onChanged();
        }
      } else {
        if (!other.graphOutputNodeInfo_.isEmpty()) {
          if (graphOutputNodeInfoBuilder_.isEmpty()) {
            graphOutputNodeInfoBuilder_.dispose();
            graphOutputNodeInfoBuilder_ = null;
            graphOutputNodeInfo_ = other.graphOutputNodeInfo_;
            bitField0_ = (bitField0_ & ~0x00000020);
            graphOutputNodeInfoBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGraphOutputNodeInfoFieldBuilder() : null;
          } else {
            graphOutputNodeInfoBuilder_.addAllMessages(other.graphOutputNodeInfo_);
          }
        }
      }
      if (other.destination_ != 0) {
        setDestinationValue(other.getDestinationValue());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.framework.GraphTransferInfo parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.framework.GraphTransferInfo) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInfo> nodeInfo_ =
      java.util.Collections.emptyList();
    private void ensureNodeInfoIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        nodeInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.NodeInfo>(nodeInfo_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.NodeInfo, org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.NodeInfoOrBuilder> nodeInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInfo> getNodeInfoList() {
      if (nodeInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nodeInfo_);
      } else {
        return nodeInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public int getNodeInfoCount() {
      if (nodeInfoBuilder_ == null) {
        return nodeInfo_.size();
      } else {
        return nodeInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInfo getNodeInfo(int index) {
      if (nodeInfoBuilder_ == null) {
        return nodeInfo_.get(index);
      } else {
        return nodeInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder setNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeInfo value) {
      if (nodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInfoIsMutable();
        nodeInfo_.set(index, value);
        onChanged();
      } else {
        nodeInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder setNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder builderForValue) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        nodeInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodeInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addNodeInfo(org.tensorflow.framework.GraphTransferInfo.NodeInfo value) {
      if (nodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInfoIsMutable();
        nodeInfo_.add(value);
        onChanged();
      } else {
        nodeInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeInfo value) {
      if (nodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInfoIsMutable();
        nodeInfo_.add(index, value);
        onChanged();
      } else {
        nodeInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addNodeInfo(
        org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder builderForValue) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        nodeInfo_.add(builderForValue.build());
        onChanged();
      } else {
        nodeInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder builderForValue) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        nodeInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodeInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder addAllNodeInfo(
        java.lang.Iterable<? extends org.tensorflow.framework.GraphTransferInfo.NodeInfo> values) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodeInfo_);
        onChanged();
      } else {
        nodeInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder clearNodeInfo() {
      if (nodeInfoBuilder_ == null) {
        nodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        nodeInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public Builder removeNodeInfo(int index) {
      if (nodeInfoBuilder_ == null) {
        ensureNodeInfoIsMutable();
        nodeInfo_.remove(index);
        onChanged();
      } else {
        nodeInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder getNodeInfoBuilder(
        int index) {
      return getNodeInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInfoOrBuilder getNodeInfoOrBuilder(
        int index) {
      if (nodeInfoBuilder_ == null) {
        return nodeInfo_.get(index);  } else {
        return nodeInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.NodeInfoOrBuilder> 
         getNodeInfoOrBuilderList() {
      if (nodeInfoBuilder_ != null) {
        return nodeInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nodeInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder addNodeInfoBuilder() {
      return getNodeInfoFieldBuilder().addBuilder(
          org.tensorflow.framework.GraphTransferInfo.NodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder addNodeInfoBuilder(
        int index) {
      return getNodeInfoFieldBuilder().addBuilder(
          index, org.tensorflow.framework.GraphTransferInfo.NodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInfo node_info = 1;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder> 
         getNodeInfoBuilderList() {
      return getNodeInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.NodeInfo, org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.NodeInfoOrBuilder> 
        getNodeInfoFieldBuilder() {
      if (nodeInfoBuilder_ == null) {
        nodeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.framework.GraphTransferInfo.NodeInfo, org.tensorflow.framework.GraphTransferInfo.NodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.NodeInfoOrBuilder>(
                nodeInfo_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        nodeInfo_ = null;
      }
      return nodeInfoBuilder_;
    }

    private java.util.List<org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo> constNodeInfo_ =
      java.util.Collections.emptyList();
    private void ensureConstNodeInfoIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        constNodeInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo>(constNodeInfo_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfoOrBuilder> constNodeInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo> getConstNodeInfoList() {
      if (constNodeInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(constNodeInfo_);
      } else {
        return constNodeInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public int getConstNodeInfoCount() {
      if (constNodeInfoBuilder_ == null) {
        return constNodeInfo_.size();
      } else {
        return constNodeInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo getConstNodeInfo(int index) {
      if (constNodeInfoBuilder_ == null) {
        return constNodeInfo_.get(index);
      } else {
        return constNodeInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder setConstNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo value) {
      if (constNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.set(index, value);
        onChanged();
      } else {
        constNodeInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder setConstNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder builderForValue) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        constNodeInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addConstNodeInfo(org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo value) {
      if (constNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.add(value);
        onChanged();
      } else {
        constNodeInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addConstNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo value) {
      if (constNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.add(index, value);
        onChanged();
      } else {
        constNodeInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addConstNodeInfo(
        org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder builderForValue) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.add(builderForValue.build());
        onChanged();
      } else {
        constNodeInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addConstNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder builderForValue) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        constNodeInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder addAllConstNodeInfo(
        java.lang.Iterable<? extends org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo> values) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, constNodeInfo_);
        onChanged();
      } else {
        constNodeInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder clearConstNodeInfo() {
      if (constNodeInfoBuilder_ == null) {
        constNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        constNodeInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public Builder removeConstNodeInfo(int index) {
      if (constNodeInfoBuilder_ == null) {
        ensureConstNodeInfoIsMutable();
        constNodeInfo_.remove(index);
        onChanged();
      } else {
        constNodeInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder getConstNodeInfoBuilder(
        int index) {
      return getConstNodeInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfoOrBuilder getConstNodeInfoOrBuilder(
        int index) {
      if (constNodeInfoBuilder_ == null) {
        return constNodeInfo_.get(index);  } else {
        return constNodeInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.ConstNodeInfoOrBuilder> 
         getConstNodeInfoOrBuilderList() {
      if (constNodeInfoBuilder_ != null) {
        return constNodeInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(constNodeInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder addConstNodeInfoBuilder() {
      return getConstNodeInfoFieldBuilder().addBuilder(
          org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder addConstNodeInfoBuilder(
        int index) {
      return getConstNodeInfoFieldBuilder().addBuilder(
          index, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.ConstNodeInfo const_node_info = 2;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder> 
         getConstNodeInfoBuilderList() {
      return getConstNodeInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfoOrBuilder> 
        getConstNodeInfoFieldBuilder() {
      if (constNodeInfoBuilder_ == null) {
        constNodeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.ConstNodeInfoOrBuilder>(
                constNodeInfo_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        constNodeInfo_ = null;
      }
      return constNodeInfoBuilder_;
    }

    private java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInputInfo> nodeInputInfo_ =
      java.util.Collections.emptyList();
    private void ensureNodeInputInfoIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        nodeInputInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.NodeInputInfo>(nodeInputInfo_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.NodeInputInfo, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder, org.tensorflow.framework.GraphTransferInfo.NodeInputInfoOrBuilder> nodeInputInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInputInfo> getNodeInputInfoList() {
      if (nodeInputInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nodeInputInfo_);
      } else {
        return nodeInputInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public int getNodeInputInfoCount() {
      if (nodeInputInfoBuilder_ == null) {
        return nodeInputInfo_.size();
      } else {
        return nodeInputInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInputInfo getNodeInputInfo(int index) {
      if (nodeInputInfoBuilder_ == null) {
        return nodeInputInfo_.get(index);
      } else {
        return nodeInputInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder setNodeInputInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo value) {
      if (nodeInputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.set(index, value);
        onChanged();
      } else {
        nodeInputInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder setNodeInputInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder builderForValue) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodeInputInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addNodeInputInfo(org.tensorflow.framework.GraphTransferInfo.NodeInputInfo value) {
      if (nodeInputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.add(value);
        onChanged();
      } else {
        nodeInputInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addNodeInputInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo value) {
      if (nodeInputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.add(index, value);
        onChanged();
      } else {
        nodeInputInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addNodeInputInfo(
        org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder builderForValue) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.add(builderForValue.build());
        onChanged();
      } else {
        nodeInputInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addNodeInputInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder builderForValue) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodeInputInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder addAllNodeInputInfo(
        java.lang.Iterable<? extends org.tensorflow.framework.GraphTransferInfo.NodeInputInfo> values) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodeInputInfo_);
        onChanged();
      } else {
        nodeInputInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder clearNodeInputInfo() {
      if (nodeInputInfoBuilder_ == null) {
        nodeInputInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        nodeInputInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public Builder removeNodeInputInfo(int index) {
      if (nodeInputInfoBuilder_ == null) {
        ensureNodeInputInfoIsMutable();
        nodeInputInfo_.remove(index);
        onChanged();
      } else {
        nodeInputInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder getNodeInputInfoBuilder(
        int index) {
      return getNodeInputInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInputInfoOrBuilder getNodeInputInfoOrBuilder(
        int index) {
      if (nodeInputInfoBuilder_ == null) {
        return nodeInputInfo_.get(index);  } else {
        return nodeInputInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.NodeInputInfoOrBuilder> 
         getNodeInputInfoOrBuilderList() {
      if (nodeInputInfoBuilder_ != null) {
        return nodeInputInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nodeInputInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder addNodeInputInfoBuilder() {
      return getNodeInputInfoFieldBuilder().addBuilder(
          org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder addNodeInputInfoBuilder(
        int index) {
      return getNodeInputInfoFieldBuilder().addBuilder(
          index, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeInputInfo node_input_info = 3;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder> 
         getNodeInputInfoBuilderList() {
      return getNodeInputInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.NodeInputInfo, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder, org.tensorflow.framework.GraphTransferInfo.NodeInputInfoOrBuilder> 
        getNodeInputInfoFieldBuilder() {
      if (nodeInputInfoBuilder_ == null) {
        nodeInputInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.framework.GraphTransferInfo.NodeInputInfo, org.tensorflow.framework.GraphTransferInfo.NodeInputInfo.Builder, org.tensorflow.framework.GraphTransferInfo.NodeInputInfoOrBuilder>(
                nodeInputInfo_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        nodeInputInfo_ = null;
      }
      return nodeInputInfoBuilder_;
    }

    private java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo> nodeOutputInfo_ =
      java.util.Collections.emptyList();
    private void ensureNodeOutputInfoIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        nodeOutputInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo>(nodeOutputInfo_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfoOrBuilder> nodeOutputInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo> getNodeOutputInfoList() {
      if (nodeOutputInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(nodeOutputInfo_);
      } else {
        return nodeOutputInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public int getNodeOutputInfoCount() {
      if (nodeOutputInfoBuilder_ == null) {
        return nodeOutputInfo_.size();
      } else {
        return nodeOutputInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo getNodeOutputInfo(int index) {
      if (nodeOutputInfoBuilder_ == null) {
        return nodeOutputInfo_.get(index);
      } else {
        return nodeOutputInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder setNodeOutputInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo value) {
      if (nodeOutputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.set(index, value);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder setNodeOutputInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder builderForValue) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        nodeOutputInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addNodeOutputInfo(org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo value) {
      if (nodeOutputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.add(value);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addNodeOutputInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo value) {
      if (nodeOutputInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.add(index, value);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addNodeOutputInfo(
        org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder builderForValue) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.add(builderForValue.build());
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addNodeOutputInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder builderForValue) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder addAllNodeOutputInfo(
        java.lang.Iterable<? extends org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo> values) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, nodeOutputInfo_);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder clearNodeOutputInfo() {
      if (nodeOutputInfoBuilder_ == null) {
        nodeOutputInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public Builder removeNodeOutputInfo(int index) {
      if (nodeOutputInfoBuilder_ == null) {
        ensureNodeOutputInfoIsMutable();
        nodeOutputInfo_.remove(index);
        onChanged();
      } else {
        nodeOutputInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder getNodeOutputInfoBuilder(
        int index) {
      return getNodeOutputInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfoOrBuilder getNodeOutputInfoOrBuilder(
        int index) {
      if (nodeOutputInfoBuilder_ == null) {
        return nodeOutputInfo_.get(index);  } else {
        return nodeOutputInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.NodeOutputInfoOrBuilder> 
         getNodeOutputInfoOrBuilderList() {
      if (nodeOutputInfoBuilder_ != null) {
        return nodeOutputInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(nodeOutputInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder addNodeOutputInfoBuilder() {
      return getNodeOutputInfoFieldBuilder().addBuilder(
          org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder addNodeOutputInfoBuilder(
        int index) {
      return getNodeOutputInfoFieldBuilder().addBuilder(
          index, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.NodeOutputInfo node_output_info = 4;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder> 
         getNodeOutputInfoBuilderList() {
      return getNodeOutputInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfoOrBuilder> 
        getNodeOutputInfoFieldBuilder() {
      if (nodeOutputInfoBuilder_ == null) {
        nodeOutputInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfo.Builder, org.tensorflow.framework.GraphTransferInfo.NodeOutputInfoOrBuilder>(
                nodeOutputInfo_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        nodeOutputInfo_ = null;
      }
      return nodeOutputInfoBuilder_;
    }

    private java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo> graphInputNodeInfo_ =
      java.util.Collections.emptyList();
    private void ensureGraphInputNodeInfoIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        graphInputNodeInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo>(graphInputNodeInfo_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfoOrBuilder> graphInputNodeInfoBuilder_;

    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo> getGraphInputNodeInfoList() {
      if (graphInputNodeInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(graphInputNodeInfo_);
      } else {
        return graphInputNodeInfoBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public int getGraphInputNodeInfoCount() {
      if (graphInputNodeInfoBuilder_ == null) {
        return graphInputNodeInfo_.size();
      } else {
        return graphInputNodeInfoBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo getGraphInputNodeInfo(int index) {
      if (graphInputNodeInfoBuilder_ == null) {
        return graphInputNodeInfo_.get(index);
      } else {
        return graphInputNodeInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder setGraphInputNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo value) {
      if (graphInputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.set(index, value);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder setGraphInputNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder builderForValue) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addGraphInputNodeInfo(org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo value) {
      if (graphInputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.add(value);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addGraphInputNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo value) {
      if (graphInputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.add(index, value);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addGraphInputNodeInfo(
        org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder builderForValue) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.add(builderForValue.build());
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addGraphInputNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder builderForValue) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder addAllGraphInputNodeInfo(
        java.lang.Iterable<? extends org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo> values) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, graphInputNodeInfo_);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder clearGraphInputNodeInfo() {
      if (graphInputNodeInfoBuilder_ == null) {
        graphInputNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public Builder removeGraphInputNodeInfo(int index) {
      if (graphInputNodeInfoBuilder_ == null) {
        ensureGraphInputNodeInfoIsMutable();
        graphInputNodeInfo_.remove(index);
        onChanged();
      } else {
        graphInputNodeInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder getGraphInputNodeInfoBuilder(
        int index) {
      return getGraphInputNodeInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfoOrBuilder getGraphInputNodeInfoOrBuilder(
        int index) {
      if (graphInputNodeInfoBuilder_ == null) {
        return graphInputNodeInfo_.get(index);  } else {
        return graphInputNodeInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfoOrBuilder> 
         getGraphInputNodeInfoOrBuilderList() {
      if (graphInputNodeInfoBuilder_ != null) {
        return graphInputNodeInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(graphInputNodeInfo_);
      }
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder addGraphInputNodeInfoBuilder() {
      return getGraphInputNodeInfoFieldBuilder().addBuilder(
          org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder addGraphInputNodeInfoBuilder(
        int index) {
      return getGraphInputNodeInfoFieldBuilder().addBuilder(
          index, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.getDefaultInstance());
    }
    /**
     * <pre>
     * Input Node parameters of transferred graph
     * </pre>
     *
     * <code>repeated .tensorflow.GraphTransferInfo.GraphInputNodeInfo graph_input_node_info = 5;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder> 
         getGraphInputNodeInfoBuilderList() {
      return getGraphInputNodeInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfoOrBuilder> 
        getGraphInputNodeInfoFieldBuilder() {
      if (graphInputNodeInfoBuilder_ == null) {
        graphInputNodeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.GraphInputNodeInfoOrBuilder>(
                graphInputNodeInfo_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        graphInputNodeInfo_ = null;
      }
      return graphInputNodeInfoBuilder_;
    }

    private java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo> graphOutputNodeInfo_ =
      java.util.Collections.emptyList();
    private void ensureGraphOutputNodeInfoIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        graphOutputNodeInfo_ = new java.util.ArrayList<org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo>(graphOutputNodeInfo_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfoOrBuilder> graphOutputNodeInfoBuilder_;

    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo> getGraphOutputNodeInfoList() {
      if (graphOutputNodeInfoBuilder_ == null) {
        return java.util.Collections.unmodifiableList(graphOutputNodeInfo_);
      } else {
        return graphOutputNodeInfoBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public int getGraphOutputNodeInfoCount() {
      if (graphOutputNodeInfoBuilder_ == null) {
        return graphOutputNodeInfo_.size();
      } else {
        return graphOutputNodeInfoBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo getGraphOutputNodeInfo(int index) {
      if (graphOutputNodeInfoBuilder_ == null) {
        return graphOutputNodeInfo_.get(index);
      } else {
        return graphOutputNodeInfoBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder setGraphOutputNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo value) {
      if (graphOutputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.set(index, value);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder setGraphOutputNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder builderForValue) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.set(index, builderForValue.build());
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addGraphOutputNodeInfo(org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo value) {
      if (graphOutputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.add(value);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addGraphOutputNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo value) {
      if (graphOutputNodeInfoBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.add(index, value);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addGraphOutputNodeInfo(
        org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder builderForValue) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.add(builderForValue.build());
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addGraphOutputNodeInfo(
        int index, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder builderForValue) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.add(index, builderForValue.build());
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder addAllGraphOutputNodeInfo(
        java.lang.Iterable<? extends org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo> values) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, graphOutputNodeInfo_);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder clearGraphOutputNodeInfo() {
      if (graphOutputNodeInfoBuilder_ == null) {
        graphOutputNodeInfo_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public Builder removeGraphOutputNodeInfo(int index) {
      if (graphOutputNodeInfoBuilder_ == null) {
        ensureGraphOutputNodeInfoIsMutable();
        graphOutputNodeInfo_.remove(index);
        onChanged();
      } else {
        graphOutputNodeInfoBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder getGraphOutputNodeInfoBuilder(
        int index) {
      return getGraphOutputNodeInfoFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfoOrBuilder getGraphOutputNodeInfoOrBuilder(
        int index) {
      if (graphOutputNodeInfoBuilder_ == null) {
        return graphOutputNodeInfo_.get(index);  } else {
        return graphOutputNodeInfoBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfoOrBuilder> 
         getGraphOutputNodeInfoOrBuilderList() {
      if (graphOutputNodeInfoBuilder_ != null) {
        return graphOutputNodeInfoBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(graphOutputNodeInfo_);
      }
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder addGraphOutputNodeInfoBuilder() {
      return getGraphOutputNodeInfoFieldBuilder().addBuilder(
          org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder addGraphOutputNodeInfoBuilder(
        int index) {
      return getGraphOutputNodeInfoFieldBuilder().addBuilder(
          index, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.getDefaultInstance());
    }
    /**
     * <code>repeated .tensorflow.GraphTransferInfo.GraphOutputNodeInfo graph_output_node_info = 6;</code>
     */
    public java.util.List<org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder> 
         getGraphOutputNodeInfoBuilderList() {
      return getGraphOutputNodeInfoFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfoOrBuilder> 
        getGraphOutputNodeInfoFieldBuilder() {
      if (graphOutputNodeInfoBuilder_ == null) {
        graphOutputNodeInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfo.Builder, org.tensorflow.framework.GraphTransferInfo.GraphOutputNodeInfoOrBuilder>(
                graphOutputNodeInfo_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        graphOutputNodeInfo_ = null;
      }
      return graphOutputNodeInfoBuilder_;
    }

    private int destination_ = 0;
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public int getDestinationValue() {
      return destination_;
    }
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public Builder setDestinationValue(int value) {
      destination_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public org.tensorflow.framework.GraphTransferInfo.Destination getDestination() {
      org.tensorflow.framework.GraphTransferInfo.Destination result = org.tensorflow.framework.GraphTransferInfo.Destination.valueOf(destination_);
      return result == null ? org.tensorflow.framework.GraphTransferInfo.Destination.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public Builder setDestination(org.tensorflow.framework.GraphTransferInfo.Destination value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      destination_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Destination of graph transfer
     * </pre>
     *
     * <code>.tensorflow.GraphTransferInfo.Destination destination = 7;</code>
     */
    public Builder clearDestination() {
      
      destination_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.GraphTransferInfo)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.GraphTransferInfo)
  private static final org.tensorflow.framework.GraphTransferInfo DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.framework.GraphTransferInfo();
  }

  public static org.tensorflow.framework.GraphTransferInfo getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GraphTransferInfo>
      PARSER = new com.google.protobuf.AbstractParser<GraphTransferInfo>() {
    public GraphTransferInfo parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new GraphTransferInfo(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GraphTransferInfo> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GraphTransferInfo> getParserForType() {
    return PARSER;
  }

  public org.tensorflow.framework.GraphTransferInfo getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

