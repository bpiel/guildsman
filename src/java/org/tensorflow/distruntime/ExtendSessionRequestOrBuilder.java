// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/master.proto

package org.tensorflow.distruntime;

public interface ExtendSessionRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.ExtendSessionRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * REQUIRED: session_handle must be returned by a CreateSession call
   * to the same master service.
   * </pre>
   *
   * <code>string session_handle = 1;</code>
   */
  java.lang.String getSessionHandle();
  /**
   * <pre>
   * REQUIRED: session_handle must be returned by a CreateSession call
   * to the same master service.
   * </pre>
   *
   * <code>string session_handle = 1;</code>
   */
  com.google.protobuf.ByteString
      getSessionHandleBytes();

  /**
   * <pre>
   * REQUIRED: The nodes to be added to the session's graph. If any node has
   * the same name as an existing node, the operation will fail with
   * ILLEGAL_ARGUMENT.
   * </pre>
   *
   * <code>.tensorflow.GraphDef graph_def = 2;</code>
   */
  boolean hasGraphDef();
  /**
   * <pre>
   * REQUIRED: The nodes to be added to the session's graph. If any node has
   * the same name as an existing node, the operation will fail with
   * ILLEGAL_ARGUMENT.
   * </pre>
   *
   * <code>.tensorflow.GraphDef graph_def = 2;</code>
   */
  org.tensorflow.framework.GraphDef getGraphDef();
  /**
   * <pre>
   * REQUIRED: The nodes to be added to the session's graph. If any node has
   * the same name as an existing node, the operation will fail with
   * ILLEGAL_ARGUMENT.
   * </pre>
   *
   * <code>.tensorflow.GraphDef graph_def = 2;</code>
   */
  org.tensorflow.framework.GraphDefOrBuilder getGraphDefOrBuilder();

  /**
   * <pre>
   * REQUIRED: The version number of the graph to be extended. This will be
   * tested against the current server-side version number, and the operation
   * will fail with FAILED_PRECONDITION if they do not match.
   * </pre>
   *
   * <code>int64 current_graph_version = 3;</code>
   */
  long getCurrentGraphVersion();
}
