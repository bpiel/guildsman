// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/protobuf/worker.proto

package org.tensorflow.distruntime;

/**
 * Protobuf type {@code tensorflow.RunGraphRequest}
 */
public  final class RunGraphRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.RunGraphRequest)
    RunGraphRequestOrBuilder {
  // Use RunGraphRequest.newBuilder() to construct.
  private RunGraphRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RunGraphRequest() {
    sessionHandle_ = "";
    graphHandle_ = "";
    stepId_ = 0L;
    send_ = java.util.Collections.emptyList();
    recvKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    isPartial_ = false;
    isLastPartialRun_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private RunGraphRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            graphHandle_ = s;
            break;
          }
          case 16: {

            stepId_ = input.readInt64();
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              send_ = new java.util.ArrayList<org.tensorflow.framework.NamedTensorProto>();
              mutable_bitField0_ |= 0x00000010;
            }
            send_.add(
                input.readMessage(org.tensorflow.framework.NamedTensorProto.parser(), extensionRegistry));
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              recvKey_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000020;
            }
            recvKey_.add(s);
            break;
          }
          case 42: {
            org.tensorflow.distruntime.ExecutorOpts.Builder subBuilder = null;
            if (execOpts_ != null) {
              subBuilder = execOpts_.toBuilder();
            }
            execOpts_ = input.readMessage(org.tensorflow.distruntime.ExecutorOpts.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(execOpts_);
              execOpts_ = subBuilder.buildPartial();
            }

            break;
          }
          case 48: {

            isPartial_ = input.readBool();
            break;
          }
          case 56: {

            isLastPartialRun_ = input.readBool();
            break;
          }
          case 66: {
            java.lang.String s = input.readStringRequireUtf8();

            sessionHandle_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        send_ = java.util.Collections.unmodifiableList(send_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        recvKey_ = recvKey_.getUnmodifiableView();
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.distruntime.WorkerProtos.internal_static_tensorflow_RunGraphRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.distruntime.WorkerProtos.internal_static_tensorflow_RunGraphRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.distruntime.RunGraphRequest.class, org.tensorflow.distruntime.RunGraphRequest.Builder.class);
  }

  private int bitField0_;
  public static final int SESSION_HANDLE_FIELD_NUMBER = 8;
  private volatile java.lang.Object sessionHandle_;
  /**
   * <pre>
   * session_handle is the the master-generated unique id for this session.
   * If session_handle is non-empty, it must be the same as used when
   * registering the graph. If it is empty, a single global namespace is used to
   * search for the graph_handle.
   * </pre>
   *
   * <code>string session_handle = 8;</code>
   */
  public java.lang.String getSessionHandle() {
    java.lang.Object ref = sessionHandle_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      sessionHandle_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * session_handle is the the master-generated unique id for this session.
   * If session_handle is non-empty, it must be the same as used when
   * registering the graph. If it is empty, a single global namespace is used to
   * search for the graph_handle.
   * </pre>
   *
   * <code>string session_handle = 8;</code>
   */
  public com.google.protobuf.ByteString
      getSessionHandleBytes() {
    java.lang.Object ref = sessionHandle_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      sessionHandle_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GRAPH_HANDLE_FIELD_NUMBER = 1;
  private volatile java.lang.Object graphHandle_;
  /**
   * <pre>
   * REQUIRED: graph_handle must be returned by a RegisterGraph call
   * to the same WorkerService.
   * </pre>
   *
   * <code>string graph_handle = 1;</code>
   */
  public java.lang.String getGraphHandle() {
    java.lang.Object ref = graphHandle_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      graphHandle_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * REQUIRED: graph_handle must be returned by a RegisterGraph call
   * to the same WorkerService.
   * </pre>
   *
   * <code>string graph_handle = 1;</code>
   */
  public com.google.protobuf.ByteString
      getGraphHandleBytes() {
    java.lang.Object ref = graphHandle_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      graphHandle_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int STEP_ID_FIELD_NUMBER = 2;
  private long stepId_;
  /**
   * <pre>
   * A unique ID to distinguish different runs of the same graph.
   * The master generates a global unique `step_id` to distinguish
   * different runs of the graph computation. Subgraphs communicate
   * (e.g., send/recv ops) with each other using `step_id` to
   * distinguish tensors generated by different runs.
   * </pre>
   *
   * <code>int64 step_id = 2;</code>
   */
  public long getStepId() {
    return stepId_;
  }

  public static final int EXEC_OPTS_FIELD_NUMBER = 5;
  private org.tensorflow.distruntime.ExecutorOpts execOpts_;
  /**
   * <pre>
   * Options for this step.
   * </pre>
   *
   * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
   */
  public boolean hasExecOpts() {
    return execOpts_ != null;
  }
  /**
   * <pre>
   * Options for this step.
   * </pre>
   *
   * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
   */
  public org.tensorflow.distruntime.ExecutorOpts getExecOpts() {
    return execOpts_ == null ? org.tensorflow.distruntime.ExecutorOpts.getDefaultInstance() : execOpts_;
  }
  /**
   * <pre>
   * Options for this step.
   * </pre>
   *
   * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
   */
  public org.tensorflow.distruntime.ExecutorOptsOrBuilder getExecOptsOrBuilder() {
    return getExecOpts();
  }

  public static final int SEND_FIELD_NUMBER = 3;
  private java.util.List<org.tensorflow.framework.NamedTensorProto> send_;
  /**
   * <pre>
   * Runs the graph.
   * Sends the tensors in "send" into the graph before the run and
   * fetches the keys into `RunGraphResponse.recv` after the run.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
   */
  public java.util.List<org.tensorflow.framework.NamedTensorProto> getSendList() {
    return send_;
  }
  /**
   * <pre>
   * Runs the graph.
   * Sends the tensors in "send" into the graph before the run and
   * fetches the keys into `RunGraphResponse.recv` after the run.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
   */
  public java.util.List<? extends org.tensorflow.framework.NamedTensorProtoOrBuilder> 
      getSendOrBuilderList() {
    return send_;
  }
  /**
   * <pre>
   * Runs the graph.
   * Sends the tensors in "send" into the graph before the run and
   * fetches the keys into `RunGraphResponse.recv` after the run.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
   */
  public int getSendCount() {
    return send_.size();
  }
  /**
   * <pre>
   * Runs the graph.
   * Sends the tensors in "send" into the graph before the run and
   * fetches the keys into `RunGraphResponse.recv` after the run.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
   */
  public org.tensorflow.framework.NamedTensorProto getSend(int index) {
    return send_.get(index);
  }
  /**
   * <pre>
   * Runs the graph.
   * Sends the tensors in "send" into the graph before the run and
   * fetches the keys into `RunGraphResponse.recv` after the run.
   * </pre>
   *
   * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
   */
  public org.tensorflow.framework.NamedTensorProtoOrBuilder getSendOrBuilder(
      int index) {
    return send_.get(index);
  }

  public static final int RECV_KEY_FIELD_NUMBER = 4;
  private com.google.protobuf.LazyStringList recvKey_;
  /**
   * <code>repeated string recv_key = 4;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getRecvKeyList() {
    return recvKey_;
  }
  /**
   * <code>repeated string recv_key = 4;</code>
   */
  public int getRecvKeyCount() {
    return recvKey_.size();
  }
  /**
   * <code>repeated string recv_key = 4;</code>
   */
  public java.lang.String getRecvKey(int index) {
    return recvKey_.get(index);
  }
  /**
   * <code>repeated string recv_key = 4;</code>
   */
  public com.google.protobuf.ByteString
      getRecvKeyBytes(int index) {
    return recvKey_.getByteString(index);
  }

  public static final int IS_PARTIAL_FIELD_NUMBER = 6;
  private boolean isPartial_;
  /**
   * <pre>
   * True if the RunGraphRequest is a partial run request.
   * </pre>
   *
   * <code>bool is_partial = 6;</code>
   */
  public boolean getIsPartial() {
    return isPartial_;
  }

  public static final int IS_LAST_PARTIAL_RUN_FIELD_NUMBER = 7;
  private boolean isLastPartialRun_;
  /**
   * <pre>
   * True if this is the last partial run request in a sequence of requests.
   * </pre>
   *
   * <code>bool is_last_partial_run = 7;</code>
   */
  public boolean getIsLastPartialRun() {
    return isLastPartialRun_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getGraphHandleBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, graphHandle_);
    }
    if (stepId_ != 0L) {
      output.writeInt64(2, stepId_);
    }
    for (int i = 0; i < send_.size(); i++) {
      output.writeMessage(3, send_.get(i));
    }
    for (int i = 0; i < recvKey_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, recvKey_.getRaw(i));
    }
    if (execOpts_ != null) {
      output.writeMessage(5, getExecOpts());
    }
    if (isPartial_ != false) {
      output.writeBool(6, isPartial_);
    }
    if (isLastPartialRun_ != false) {
      output.writeBool(7, isLastPartialRun_);
    }
    if (!getSessionHandleBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, sessionHandle_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getGraphHandleBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, graphHandle_);
    }
    if (stepId_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, stepId_);
    }
    for (int i = 0; i < send_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, send_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < recvKey_.size(); i++) {
        dataSize += computeStringSizeNoTag(recvKey_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRecvKeyList().size();
    }
    if (execOpts_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getExecOpts());
    }
    if (isPartial_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, isPartial_);
    }
    if (isLastPartialRun_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, isLastPartialRun_);
    }
    if (!getSessionHandleBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, sessionHandle_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.distruntime.RunGraphRequest)) {
      return super.equals(obj);
    }
    org.tensorflow.distruntime.RunGraphRequest other = (org.tensorflow.distruntime.RunGraphRequest) obj;

    boolean result = true;
    result = result && getSessionHandle()
        .equals(other.getSessionHandle());
    result = result && getGraphHandle()
        .equals(other.getGraphHandle());
    result = result && (getStepId()
        == other.getStepId());
    result = result && (hasExecOpts() == other.hasExecOpts());
    if (hasExecOpts()) {
      result = result && getExecOpts()
          .equals(other.getExecOpts());
    }
    result = result && getSendList()
        .equals(other.getSendList());
    result = result && getRecvKeyList()
        .equals(other.getRecvKeyList());
    result = result && (getIsPartial()
        == other.getIsPartial());
    result = result && (getIsLastPartialRun()
        == other.getIsLastPartialRun());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + SESSION_HANDLE_FIELD_NUMBER;
    hash = (53 * hash) + getSessionHandle().hashCode();
    hash = (37 * hash) + GRAPH_HANDLE_FIELD_NUMBER;
    hash = (53 * hash) + getGraphHandle().hashCode();
    hash = (37 * hash) + STEP_ID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getStepId());
    if (hasExecOpts()) {
      hash = (37 * hash) + EXEC_OPTS_FIELD_NUMBER;
      hash = (53 * hash) + getExecOpts().hashCode();
    }
    if (getSendCount() > 0) {
      hash = (37 * hash) + SEND_FIELD_NUMBER;
      hash = (53 * hash) + getSendList().hashCode();
    }
    if (getRecvKeyCount() > 0) {
      hash = (37 * hash) + RECV_KEY_FIELD_NUMBER;
      hash = (53 * hash) + getRecvKeyList().hashCode();
    }
    hash = (37 * hash) + IS_PARTIAL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsPartial());
    hash = (37 * hash) + IS_LAST_PARTIAL_RUN_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getIsLastPartialRun());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.distruntime.RunGraphRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.distruntime.RunGraphRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code tensorflow.RunGraphRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.RunGraphRequest)
      org.tensorflow.distruntime.RunGraphRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.distruntime.WorkerProtos.internal_static_tensorflow_RunGraphRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.distruntime.WorkerProtos.internal_static_tensorflow_RunGraphRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.distruntime.RunGraphRequest.class, org.tensorflow.distruntime.RunGraphRequest.Builder.class);
    }

    // Construct using org.tensorflow.distruntime.RunGraphRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getSendFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      sessionHandle_ = "";

      graphHandle_ = "";

      stepId_ = 0L;

      if (execOptsBuilder_ == null) {
        execOpts_ = null;
      } else {
        execOpts_ = null;
        execOptsBuilder_ = null;
      }
      if (sendBuilder_ == null) {
        send_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        sendBuilder_.clear();
      }
      recvKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      isPartial_ = false;

      isLastPartialRun_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.distruntime.WorkerProtos.internal_static_tensorflow_RunGraphRequest_descriptor;
    }

    public org.tensorflow.distruntime.RunGraphRequest getDefaultInstanceForType() {
      return org.tensorflow.distruntime.RunGraphRequest.getDefaultInstance();
    }

    public org.tensorflow.distruntime.RunGraphRequest build() {
      org.tensorflow.distruntime.RunGraphRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.tensorflow.distruntime.RunGraphRequest buildPartial() {
      org.tensorflow.distruntime.RunGraphRequest result = new org.tensorflow.distruntime.RunGraphRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.sessionHandle_ = sessionHandle_;
      result.graphHandle_ = graphHandle_;
      result.stepId_ = stepId_;
      if (execOptsBuilder_ == null) {
        result.execOpts_ = execOpts_;
      } else {
        result.execOpts_ = execOptsBuilder_.build();
      }
      if (sendBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          send_ = java.util.Collections.unmodifiableList(send_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.send_ = send_;
      } else {
        result.send_ = sendBuilder_.build();
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        recvKey_ = recvKey_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.recvKey_ = recvKey_;
      result.isPartial_ = isPartial_;
      result.isLastPartialRun_ = isLastPartialRun_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.distruntime.RunGraphRequest) {
        return mergeFrom((org.tensorflow.distruntime.RunGraphRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.distruntime.RunGraphRequest other) {
      if (other == org.tensorflow.distruntime.RunGraphRequest.getDefaultInstance()) return this;
      if (!other.getSessionHandle().isEmpty()) {
        sessionHandle_ = other.sessionHandle_;
        onChanged();
      }
      if (!other.getGraphHandle().isEmpty()) {
        graphHandle_ = other.graphHandle_;
        onChanged();
      }
      if (other.getStepId() != 0L) {
        setStepId(other.getStepId());
      }
      if (other.hasExecOpts()) {
        mergeExecOpts(other.getExecOpts());
      }
      if (sendBuilder_ == null) {
        if (!other.send_.isEmpty()) {
          if (send_.isEmpty()) {
            send_ = other.send_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSendIsMutable();
            send_.addAll(other.send_);
          }
          onChanged();
        }
      } else {
        if (!other.send_.isEmpty()) {
          if (sendBuilder_.isEmpty()) {
            sendBuilder_.dispose();
            sendBuilder_ = null;
            send_ = other.send_;
            bitField0_ = (bitField0_ & ~0x00000010);
            sendBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSendFieldBuilder() : null;
          } else {
            sendBuilder_.addAllMessages(other.send_);
          }
        }
      }
      if (!other.recvKey_.isEmpty()) {
        if (recvKey_.isEmpty()) {
          recvKey_ = other.recvKey_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureRecvKeyIsMutable();
          recvKey_.addAll(other.recvKey_);
        }
        onChanged();
      }
      if (other.getIsPartial() != false) {
        setIsPartial(other.getIsPartial());
      }
      if (other.getIsLastPartialRun() != false) {
        setIsLastPartialRun(other.getIsLastPartialRun());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.distruntime.RunGraphRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.distruntime.RunGraphRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object sessionHandle_ = "";
    /**
     * <pre>
     * session_handle is the the master-generated unique id for this session.
     * If session_handle is non-empty, it must be the same as used when
     * registering the graph. If it is empty, a single global namespace is used to
     * search for the graph_handle.
     * </pre>
     *
     * <code>string session_handle = 8;</code>
     */
    public java.lang.String getSessionHandle() {
      java.lang.Object ref = sessionHandle_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        sessionHandle_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * session_handle is the the master-generated unique id for this session.
     * If session_handle is non-empty, it must be the same as used when
     * registering the graph. If it is empty, a single global namespace is used to
     * search for the graph_handle.
     * </pre>
     *
     * <code>string session_handle = 8;</code>
     */
    public com.google.protobuf.ByteString
        getSessionHandleBytes() {
      java.lang.Object ref = sessionHandle_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sessionHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * session_handle is the the master-generated unique id for this session.
     * If session_handle is non-empty, it must be the same as used when
     * registering the graph. If it is empty, a single global namespace is used to
     * search for the graph_handle.
     * </pre>
     *
     * <code>string session_handle = 8;</code>
     */
    public Builder setSessionHandle(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      sessionHandle_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * session_handle is the the master-generated unique id for this session.
     * If session_handle is non-empty, it must be the same as used when
     * registering the graph. If it is empty, a single global namespace is used to
     * search for the graph_handle.
     * </pre>
     *
     * <code>string session_handle = 8;</code>
     */
    public Builder clearSessionHandle() {
      
      sessionHandle_ = getDefaultInstance().getSessionHandle();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * session_handle is the the master-generated unique id for this session.
     * If session_handle is non-empty, it must be the same as used when
     * registering the graph. If it is empty, a single global namespace is used to
     * search for the graph_handle.
     * </pre>
     *
     * <code>string session_handle = 8;</code>
     */
    public Builder setSessionHandleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      sessionHandle_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object graphHandle_ = "";
    /**
     * <pre>
     * REQUIRED: graph_handle must be returned by a RegisterGraph call
     * to the same WorkerService.
     * </pre>
     *
     * <code>string graph_handle = 1;</code>
     */
    public java.lang.String getGraphHandle() {
      java.lang.Object ref = graphHandle_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        graphHandle_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * REQUIRED: graph_handle must be returned by a RegisterGraph call
     * to the same WorkerService.
     * </pre>
     *
     * <code>string graph_handle = 1;</code>
     */
    public com.google.protobuf.ByteString
        getGraphHandleBytes() {
      java.lang.Object ref = graphHandle_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        graphHandle_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * REQUIRED: graph_handle must be returned by a RegisterGraph call
     * to the same WorkerService.
     * </pre>
     *
     * <code>string graph_handle = 1;</code>
     */
    public Builder setGraphHandle(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      graphHandle_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * REQUIRED: graph_handle must be returned by a RegisterGraph call
     * to the same WorkerService.
     * </pre>
     *
     * <code>string graph_handle = 1;</code>
     */
    public Builder clearGraphHandle() {
      
      graphHandle_ = getDefaultInstance().getGraphHandle();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * REQUIRED: graph_handle must be returned by a RegisterGraph call
     * to the same WorkerService.
     * </pre>
     *
     * <code>string graph_handle = 1;</code>
     */
    public Builder setGraphHandleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      graphHandle_ = value;
      onChanged();
      return this;
    }

    private long stepId_ ;
    /**
     * <pre>
     * A unique ID to distinguish different runs of the same graph.
     * The master generates a global unique `step_id` to distinguish
     * different runs of the graph computation. Subgraphs communicate
     * (e.g., send/recv ops) with each other using `step_id` to
     * distinguish tensors generated by different runs.
     * </pre>
     *
     * <code>int64 step_id = 2;</code>
     */
    public long getStepId() {
      return stepId_;
    }
    /**
     * <pre>
     * A unique ID to distinguish different runs of the same graph.
     * The master generates a global unique `step_id` to distinguish
     * different runs of the graph computation. Subgraphs communicate
     * (e.g., send/recv ops) with each other using `step_id` to
     * distinguish tensors generated by different runs.
     * </pre>
     *
     * <code>int64 step_id = 2;</code>
     */
    public Builder setStepId(long value) {
      
      stepId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A unique ID to distinguish different runs of the same graph.
     * The master generates a global unique `step_id` to distinguish
     * different runs of the graph computation. Subgraphs communicate
     * (e.g., send/recv ops) with each other using `step_id` to
     * distinguish tensors generated by different runs.
     * </pre>
     *
     * <code>int64 step_id = 2;</code>
     */
    public Builder clearStepId() {
      
      stepId_ = 0L;
      onChanged();
      return this;
    }

    private org.tensorflow.distruntime.ExecutorOpts execOpts_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.distruntime.ExecutorOpts, org.tensorflow.distruntime.ExecutorOpts.Builder, org.tensorflow.distruntime.ExecutorOptsOrBuilder> execOptsBuilder_;
    /**
     * <pre>
     * Options for this step.
     * </pre>
     *
     * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
     */
    public boolean hasExecOpts() {
      return execOptsBuilder_ != null || execOpts_ != null;
    }
    /**
     * <pre>
     * Options for this step.
     * </pre>
     *
     * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
     */
    public org.tensorflow.distruntime.ExecutorOpts getExecOpts() {
      if (execOptsBuilder_ == null) {
        return execOpts_ == null ? org.tensorflow.distruntime.ExecutorOpts.getDefaultInstance() : execOpts_;
      } else {
        return execOptsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Options for this step.
     * </pre>
     *
     * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
     */
    public Builder setExecOpts(org.tensorflow.distruntime.ExecutorOpts value) {
      if (execOptsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        execOpts_ = value;
        onChanged();
      } else {
        execOptsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Options for this step.
     * </pre>
     *
     * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
     */
    public Builder setExecOpts(
        org.tensorflow.distruntime.ExecutorOpts.Builder builderForValue) {
      if (execOptsBuilder_ == null) {
        execOpts_ = builderForValue.build();
        onChanged();
      } else {
        execOptsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Options for this step.
     * </pre>
     *
     * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
     */
    public Builder mergeExecOpts(org.tensorflow.distruntime.ExecutorOpts value) {
      if (execOptsBuilder_ == null) {
        if (execOpts_ != null) {
          execOpts_ =
            org.tensorflow.distruntime.ExecutorOpts.newBuilder(execOpts_).mergeFrom(value).buildPartial();
        } else {
          execOpts_ = value;
        }
        onChanged();
      } else {
        execOptsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Options for this step.
     * </pre>
     *
     * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
     */
    public Builder clearExecOpts() {
      if (execOptsBuilder_ == null) {
        execOpts_ = null;
        onChanged();
      } else {
        execOpts_ = null;
        execOptsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Options for this step.
     * </pre>
     *
     * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
     */
    public org.tensorflow.distruntime.ExecutorOpts.Builder getExecOptsBuilder() {
      
      onChanged();
      return getExecOptsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Options for this step.
     * </pre>
     *
     * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
     */
    public org.tensorflow.distruntime.ExecutorOptsOrBuilder getExecOptsOrBuilder() {
      if (execOptsBuilder_ != null) {
        return execOptsBuilder_.getMessageOrBuilder();
      } else {
        return execOpts_ == null ?
            org.tensorflow.distruntime.ExecutorOpts.getDefaultInstance() : execOpts_;
      }
    }
    /**
     * <pre>
     * Options for this step.
     * </pre>
     *
     * <code>.tensorflow.ExecutorOpts exec_opts = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.distruntime.ExecutorOpts, org.tensorflow.distruntime.ExecutorOpts.Builder, org.tensorflow.distruntime.ExecutorOptsOrBuilder> 
        getExecOptsFieldBuilder() {
      if (execOptsBuilder_ == null) {
        execOptsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.distruntime.ExecutorOpts, org.tensorflow.distruntime.ExecutorOpts.Builder, org.tensorflow.distruntime.ExecutorOptsOrBuilder>(
                getExecOpts(),
                getParentForChildren(),
                isClean());
        execOpts_ = null;
      }
      return execOptsBuilder_;
    }

    private java.util.List<org.tensorflow.framework.NamedTensorProto> send_ =
      java.util.Collections.emptyList();
    private void ensureSendIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        send_ = new java.util.ArrayList<org.tensorflow.framework.NamedTensorProto>(send_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.NamedTensorProto, org.tensorflow.framework.NamedTensorProto.Builder, org.tensorflow.framework.NamedTensorProtoOrBuilder> sendBuilder_;

    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public java.util.List<org.tensorflow.framework.NamedTensorProto> getSendList() {
      if (sendBuilder_ == null) {
        return java.util.Collections.unmodifiableList(send_);
      } else {
        return sendBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public int getSendCount() {
      if (sendBuilder_ == null) {
        return send_.size();
      } else {
        return sendBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public org.tensorflow.framework.NamedTensorProto getSend(int index) {
      if (sendBuilder_ == null) {
        return send_.get(index);
      } else {
        return sendBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public Builder setSend(
        int index, org.tensorflow.framework.NamedTensorProto value) {
      if (sendBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSendIsMutable();
        send_.set(index, value);
        onChanged();
      } else {
        sendBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public Builder setSend(
        int index, org.tensorflow.framework.NamedTensorProto.Builder builderForValue) {
      if (sendBuilder_ == null) {
        ensureSendIsMutable();
        send_.set(index, builderForValue.build());
        onChanged();
      } else {
        sendBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public Builder addSend(org.tensorflow.framework.NamedTensorProto value) {
      if (sendBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSendIsMutable();
        send_.add(value);
        onChanged();
      } else {
        sendBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public Builder addSend(
        int index, org.tensorflow.framework.NamedTensorProto value) {
      if (sendBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSendIsMutable();
        send_.add(index, value);
        onChanged();
      } else {
        sendBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public Builder addSend(
        org.tensorflow.framework.NamedTensorProto.Builder builderForValue) {
      if (sendBuilder_ == null) {
        ensureSendIsMutable();
        send_.add(builderForValue.build());
        onChanged();
      } else {
        sendBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public Builder addSend(
        int index, org.tensorflow.framework.NamedTensorProto.Builder builderForValue) {
      if (sendBuilder_ == null) {
        ensureSendIsMutable();
        send_.add(index, builderForValue.build());
        onChanged();
      } else {
        sendBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public Builder addAllSend(
        java.lang.Iterable<? extends org.tensorflow.framework.NamedTensorProto> values) {
      if (sendBuilder_ == null) {
        ensureSendIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, send_);
        onChanged();
      } else {
        sendBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public Builder clearSend() {
      if (sendBuilder_ == null) {
        send_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        sendBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public Builder removeSend(int index) {
      if (sendBuilder_ == null) {
        ensureSendIsMutable();
        send_.remove(index);
        onChanged();
      } else {
        sendBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public org.tensorflow.framework.NamedTensorProto.Builder getSendBuilder(
        int index) {
      return getSendFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public org.tensorflow.framework.NamedTensorProtoOrBuilder getSendOrBuilder(
        int index) {
      if (sendBuilder_ == null) {
        return send_.get(index);  } else {
        return sendBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public java.util.List<? extends org.tensorflow.framework.NamedTensorProtoOrBuilder> 
         getSendOrBuilderList() {
      if (sendBuilder_ != null) {
        return sendBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(send_);
      }
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public org.tensorflow.framework.NamedTensorProto.Builder addSendBuilder() {
      return getSendFieldBuilder().addBuilder(
          org.tensorflow.framework.NamedTensorProto.getDefaultInstance());
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public org.tensorflow.framework.NamedTensorProto.Builder addSendBuilder(
        int index) {
      return getSendFieldBuilder().addBuilder(
          index, org.tensorflow.framework.NamedTensorProto.getDefaultInstance());
    }
    /**
     * <pre>
     * Runs the graph.
     * Sends the tensors in "send" into the graph before the run and
     * fetches the keys into `RunGraphResponse.recv` after the run.
     * </pre>
     *
     * <code>repeated .tensorflow.NamedTensorProto send = 3;</code>
     */
    public java.util.List<org.tensorflow.framework.NamedTensorProto.Builder> 
         getSendBuilderList() {
      return getSendFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.framework.NamedTensorProto, org.tensorflow.framework.NamedTensorProto.Builder, org.tensorflow.framework.NamedTensorProtoOrBuilder> 
        getSendFieldBuilder() {
      if (sendBuilder_ == null) {
        sendBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.framework.NamedTensorProto, org.tensorflow.framework.NamedTensorProto.Builder, org.tensorflow.framework.NamedTensorProtoOrBuilder>(
                send_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        send_ = null;
      }
      return sendBuilder_;
    }

    private com.google.protobuf.LazyStringList recvKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureRecvKeyIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        recvKey_ = new com.google.protobuf.LazyStringArrayList(recvKey_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <code>repeated string recv_key = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getRecvKeyList() {
      return recvKey_.getUnmodifiableView();
    }
    /**
     * <code>repeated string recv_key = 4;</code>
     */
    public int getRecvKeyCount() {
      return recvKey_.size();
    }
    /**
     * <code>repeated string recv_key = 4;</code>
     */
    public java.lang.String getRecvKey(int index) {
      return recvKey_.get(index);
    }
    /**
     * <code>repeated string recv_key = 4;</code>
     */
    public com.google.protobuf.ByteString
        getRecvKeyBytes(int index) {
      return recvKey_.getByteString(index);
    }
    /**
     * <code>repeated string recv_key = 4;</code>
     */
    public Builder setRecvKey(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureRecvKeyIsMutable();
      recvKey_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string recv_key = 4;</code>
     */
    public Builder addRecvKey(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureRecvKeyIsMutable();
      recvKey_.add(value);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string recv_key = 4;</code>
     */
    public Builder addAllRecvKey(
        java.lang.Iterable<java.lang.String> values) {
      ensureRecvKeyIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, recvKey_);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string recv_key = 4;</code>
     */
    public Builder clearRecvKey() {
      recvKey_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <code>repeated string recv_key = 4;</code>
     */
    public Builder addRecvKeyBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureRecvKeyIsMutable();
      recvKey_.add(value);
      onChanged();
      return this;
    }

    private boolean isPartial_ ;
    /**
     * <pre>
     * True if the RunGraphRequest is a partial run request.
     * </pre>
     *
     * <code>bool is_partial = 6;</code>
     */
    public boolean getIsPartial() {
      return isPartial_;
    }
    /**
     * <pre>
     * True if the RunGraphRequest is a partial run request.
     * </pre>
     *
     * <code>bool is_partial = 6;</code>
     */
    public Builder setIsPartial(boolean value) {
      
      isPartial_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if the RunGraphRequest is a partial run request.
     * </pre>
     *
     * <code>bool is_partial = 6;</code>
     */
    public Builder clearIsPartial() {
      
      isPartial_ = false;
      onChanged();
      return this;
    }

    private boolean isLastPartialRun_ ;
    /**
     * <pre>
     * True if this is the last partial run request in a sequence of requests.
     * </pre>
     *
     * <code>bool is_last_partial_run = 7;</code>
     */
    public boolean getIsLastPartialRun() {
      return isLastPartialRun_;
    }
    /**
     * <pre>
     * True if this is the last partial run request in a sequence of requests.
     * </pre>
     *
     * <code>bool is_last_partial_run = 7;</code>
     */
    public Builder setIsLastPartialRun(boolean value) {
      
      isLastPartialRun_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * True if this is the last partial run request in a sequence of requests.
     * </pre>
     *
     * <code>bool is_last_partial_run = 7;</code>
     */
    public Builder clearIsLastPartialRun() {
      
      isLastPartialRun_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.RunGraphRequest)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.RunGraphRequest)
  private static final org.tensorflow.distruntime.RunGraphRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.distruntime.RunGraphRequest();
  }

  public static org.tensorflow.distruntime.RunGraphRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RunGraphRequest>
      PARSER = new com.google.protobuf.AbstractParser<RunGraphRequest>() {
    public RunGraphRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new RunGraphRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RunGraphRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RunGraphRequest> getParserForType() {
    return PARSER;
  }

  public org.tensorflow.distruntime.RunGraphRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

