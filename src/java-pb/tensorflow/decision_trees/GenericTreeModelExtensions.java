// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/contrib/decision_trees/proto/generic_tree_model_extensions.proto

package tensorflow.decision_trees;

public final class GenericTreeModelExtensions {
  private GenericTreeModelExtensions() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MatchingValuesTestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.decision_trees.MatchingValuesTest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * When the feature is missing, the test's outcome is undefined.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
     */
    boolean hasFeatureId();
    /**
     * <pre>
     * When the feature is missing, the test's outcome is undefined.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
     */
    tensorflow.decision_trees.GenericTreeModel.FeatureId getFeatureId();
    /**
     * <pre>
     * When the feature is missing, the test's outcome is undefined.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
     */
    tensorflow.decision_trees.GenericTreeModel.FeatureIdOrBuilder getFeatureIdOrBuilder();

    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    java.util.List<tensorflow.decision_trees.GenericTreeModel.Value> 
        getValueList();
    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    tensorflow.decision_trees.GenericTreeModel.Value getValue(int index);
    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    java.util.List<? extends tensorflow.decision_trees.GenericTreeModel.ValueOrBuilder> 
        getValueOrBuilderList();
    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    tensorflow.decision_trees.GenericTreeModel.ValueOrBuilder getValueOrBuilder(
        int index);

    /**
     * <code>bool inverse = 3;</code>
     */
    boolean getInverse();
  }
  /**
   * <pre>
   * Used in generic_tree_model.BinaryNode.left_child_test.
   * Tests whether the feature's value belongs to the specified list,
   * (or does not belong if inverse=True).
   * </pre>
   *
   * Protobuf type {@code tensorflow.decision_trees.MatchingValuesTest}
   */
  public  static final class MatchingValuesTest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.decision_trees.MatchingValuesTest)
      MatchingValuesTestOrBuilder {
    // Use MatchingValuesTest.newBuilder() to construct.
    private MatchingValuesTest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MatchingValuesTest() {
      value_ = java.util.Collections.emptyList();
      inverse_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private MatchingValuesTest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tensorflow.decision_trees.GenericTreeModel.FeatureId.Builder subBuilder = null;
              if (featureId_ != null) {
                subBuilder = featureId_.toBuilder();
              }
              featureId_ = input.readMessage(tensorflow.decision_trees.GenericTreeModel.FeatureId.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(featureId_);
                featureId_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<tensorflow.decision_trees.GenericTreeModel.Value>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(
                  input.readMessage(tensorflow.decision_trees.GenericTreeModel.Value.parser(), extensionRegistry));
              break;
            }
            case 24: {

              inverse_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.decision_trees.GenericTreeModelExtensions.internal_static_tensorflow_decision_trees_MatchingValuesTest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.decision_trees.GenericTreeModelExtensions.internal_static_tensorflow_decision_trees_MatchingValuesTest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest.class, tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest.Builder.class);
    }

    private int bitField0_;
    public static final int FEATURE_ID_FIELD_NUMBER = 1;
    private tensorflow.decision_trees.GenericTreeModel.FeatureId featureId_;
    /**
     * <pre>
     * When the feature is missing, the test's outcome is undefined.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
     */
    public boolean hasFeatureId() {
      return featureId_ != null;
    }
    /**
     * <pre>
     * When the feature is missing, the test's outcome is undefined.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
     */
    public tensorflow.decision_trees.GenericTreeModel.FeatureId getFeatureId() {
      return featureId_ == null ? tensorflow.decision_trees.GenericTreeModel.FeatureId.getDefaultInstance() : featureId_;
    }
    /**
     * <pre>
     * When the feature is missing, the test's outcome is undefined.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
     */
    public tensorflow.decision_trees.GenericTreeModel.FeatureIdOrBuilder getFeatureIdOrBuilder() {
      return getFeatureId();
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<tensorflow.decision_trees.GenericTreeModel.Value> value_;
    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    public java.util.List<tensorflow.decision_trees.GenericTreeModel.Value> getValueList() {
      return value_;
    }
    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    public java.util.List<? extends tensorflow.decision_trees.GenericTreeModel.ValueOrBuilder> 
        getValueOrBuilderList() {
      return value_;
    }
    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    public tensorflow.decision_trees.GenericTreeModel.Value getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
     */
    public tensorflow.decision_trees.GenericTreeModel.ValueOrBuilder getValueOrBuilder(
        int index) {
      return value_.get(index);
    }

    public static final int INVERSE_FIELD_NUMBER = 3;
    private boolean inverse_;
    /**
     * <code>bool inverse = 3;</code>
     */
    public boolean getInverse() {
      return inverse_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (featureId_ != null) {
        output.writeMessage(1, getFeatureId());
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeMessage(2, value_.get(i));
      }
      if (inverse_ != false) {
        output.writeBool(3, inverse_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (featureId_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFeatureId());
      }
      for (int i = 0; i < value_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, value_.get(i));
      }
      if (inverse_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, inverse_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest)) {
        return super.equals(obj);
      }
      tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest other = (tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest) obj;

      boolean result = true;
      result = result && (hasFeatureId() == other.hasFeatureId());
      if (hasFeatureId()) {
        result = result && getFeatureId()
            .equals(other.getFeatureId());
      }
      result = result && getValueList()
          .equals(other.getValueList());
      result = result && (getInverse()
          == other.getInverse());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFeatureId()) {
        hash = (37 * hash) + FEATURE_ID_FIELD_NUMBER;
        hash = (53 * hash) + getFeatureId().hashCode();
      }
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (37 * hash) + INVERSE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInverse());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Used in generic_tree_model.BinaryNode.left_child_test.
     * Tests whether the feature's value belongs to the specified list,
     * (or does not belong if inverse=True).
     * </pre>
     *
     * Protobuf type {@code tensorflow.decision_trees.MatchingValuesTest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.decision_trees.MatchingValuesTest)
        tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.decision_trees.GenericTreeModelExtensions.internal_static_tensorflow_decision_trees_MatchingValuesTest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.decision_trees.GenericTreeModelExtensions.internal_static_tensorflow_decision_trees_MatchingValuesTest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest.class, tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest.Builder.class);
      }

      // Construct using tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getValueFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (featureIdBuilder_ == null) {
          featureId_ = null;
        } else {
          featureId_ = null;
          featureIdBuilder_ = null;
        }
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          valueBuilder_.clear();
        }
        inverse_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.decision_trees.GenericTreeModelExtensions.internal_static_tensorflow_decision_trees_MatchingValuesTest_descriptor;
      }

      public tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest getDefaultInstanceForType() {
        return tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest.getDefaultInstance();
      }

      public tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest build() {
        tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest buildPartial() {
        tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest result = new tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (featureIdBuilder_ == null) {
          result.featureId_ = featureId_;
        } else {
          result.featureId_ = featureIdBuilder_.build();
        }
        if (valueBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            value_ = java.util.Collections.unmodifiableList(value_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.value_ = value_;
        } else {
          result.value_ = valueBuilder_.build();
        }
        result.inverse_ = inverse_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest) {
          return mergeFrom((tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest other) {
        if (other == tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest.getDefaultInstance()) return this;
        if (other.hasFeatureId()) {
          mergeFeatureId(other.getFeatureId());
        }
        if (valueBuilder_ == null) {
          if (!other.value_.isEmpty()) {
            if (value_.isEmpty()) {
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureValueIsMutable();
              value_.addAll(other.value_);
            }
            onChanged();
          }
        } else {
          if (!other.value_.isEmpty()) {
            if (valueBuilder_.isEmpty()) {
              valueBuilder_.dispose();
              valueBuilder_ = null;
              value_ = other.value_;
              bitField0_ = (bitField0_ & ~0x00000002);
              valueBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getValueFieldBuilder() : null;
            } else {
              valueBuilder_.addAllMessages(other.value_);
            }
          }
        }
        if (other.getInverse() != false) {
          setInverse(other.getInverse());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private tensorflow.decision_trees.GenericTreeModel.FeatureId featureId_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.decision_trees.GenericTreeModel.FeatureId, tensorflow.decision_trees.GenericTreeModel.FeatureId.Builder, tensorflow.decision_trees.GenericTreeModel.FeatureIdOrBuilder> featureIdBuilder_;
      /**
       * <pre>
       * When the feature is missing, the test's outcome is undefined.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
       */
      public boolean hasFeatureId() {
        return featureIdBuilder_ != null || featureId_ != null;
      }
      /**
       * <pre>
       * When the feature is missing, the test's outcome is undefined.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.FeatureId getFeatureId() {
        if (featureIdBuilder_ == null) {
          return featureId_ == null ? tensorflow.decision_trees.GenericTreeModel.FeatureId.getDefaultInstance() : featureId_;
        } else {
          return featureIdBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * When the feature is missing, the test's outcome is undefined.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
       */
      public Builder setFeatureId(tensorflow.decision_trees.GenericTreeModel.FeatureId value) {
        if (featureIdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          featureId_ = value;
          onChanged();
        } else {
          featureIdBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * When the feature is missing, the test's outcome is undefined.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
       */
      public Builder setFeatureId(
          tensorflow.decision_trees.GenericTreeModel.FeatureId.Builder builderForValue) {
        if (featureIdBuilder_ == null) {
          featureId_ = builderForValue.build();
          onChanged();
        } else {
          featureIdBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * When the feature is missing, the test's outcome is undefined.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
       */
      public Builder mergeFeatureId(tensorflow.decision_trees.GenericTreeModel.FeatureId value) {
        if (featureIdBuilder_ == null) {
          if (featureId_ != null) {
            featureId_ =
              tensorflow.decision_trees.GenericTreeModel.FeatureId.newBuilder(featureId_).mergeFrom(value).buildPartial();
          } else {
            featureId_ = value;
          }
          onChanged();
        } else {
          featureIdBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * When the feature is missing, the test's outcome is undefined.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
       */
      public Builder clearFeatureId() {
        if (featureIdBuilder_ == null) {
          featureId_ = null;
          onChanged();
        } else {
          featureId_ = null;
          featureIdBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * When the feature is missing, the test's outcome is undefined.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.FeatureId.Builder getFeatureIdBuilder() {
        
        onChanged();
        return getFeatureIdFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * When the feature is missing, the test's outcome is undefined.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.FeatureIdOrBuilder getFeatureIdOrBuilder() {
        if (featureIdBuilder_ != null) {
          return featureIdBuilder_.getMessageOrBuilder();
        } else {
          return featureId_ == null ?
              tensorflow.decision_trees.GenericTreeModel.FeatureId.getDefaultInstance() : featureId_;
        }
      }
      /**
       * <pre>
       * When the feature is missing, the test's outcome is undefined.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.FeatureId feature_id = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.decision_trees.GenericTreeModel.FeatureId, tensorflow.decision_trees.GenericTreeModel.FeatureId.Builder, tensorflow.decision_trees.GenericTreeModel.FeatureIdOrBuilder> 
          getFeatureIdFieldBuilder() {
        if (featureIdBuilder_ == null) {
          featureIdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.decision_trees.GenericTreeModel.FeatureId, tensorflow.decision_trees.GenericTreeModel.FeatureId.Builder, tensorflow.decision_trees.GenericTreeModel.FeatureIdOrBuilder>(
                  getFeatureId(),
                  getParentForChildren(),
                  isClean());
          featureId_ = null;
        }
        return featureIdBuilder_;
      }

      private java.util.List<tensorflow.decision_trees.GenericTreeModel.Value> value_ =
        java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<tensorflow.decision_trees.GenericTreeModel.Value>(value_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.decision_trees.GenericTreeModel.Value, tensorflow.decision_trees.GenericTreeModel.Value.Builder, tensorflow.decision_trees.GenericTreeModel.ValueOrBuilder> valueBuilder_;

      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public java.util.List<tensorflow.decision_trees.GenericTreeModel.Value> getValueList() {
        if (valueBuilder_ == null) {
          return java.util.Collections.unmodifiableList(value_);
        } else {
          return valueBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public int getValueCount() {
        if (valueBuilder_ == null) {
          return value_.size();
        } else {
          return valueBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.Value getValue(int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);
        } else {
          return valueBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public Builder setValue(
          int index, tensorflow.decision_trees.GenericTreeModel.Value value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.set(index, value);
          onChanged();
        } else {
          valueBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public Builder setValue(
          int index, tensorflow.decision_trees.GenericTreeModel.Value.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.set(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public Builder addValue(tensorflow.decision_trees.GenericTreeModel.Value value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(value);
          onChanged();
        } else {
          valueBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public Builder addValue(
          int index, tensorflow.decision_trees.GenericTreeModel.Value value) {
        if (valueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureValueIsMutable();
          value_.add(index, value);
          onChanged();
        } else {
          valueBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public Builder addValue(
          tensorflow.decision_trees.GenericTreeModel.Value.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public Builder addValue(
          int index, tensorflow.decision_trees.GenericTreeModel.Value.Builder builderForValue) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.add(index, builderForValue.build());
          onChanged();
        } else {
          valueBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends tensorflow.decision_trees.GenericTreeModel.Value> values) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, value_);
          onChanged();
        } else {
          valueBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public Builder clearValue() {
        if (valueBuilder_ == null) {
          value_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          valueBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public Builder removeValue(int index) {
        if (valueBuilder_ == null) {
          ensureValueIsMutable();
          value_.remove(index);
          onChanged();
        } else {
          valueBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.Value.Builder getValueBuilder(
          int index) {
        return getValueFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.ValueOrBuilder getValueOrBuilder(
          int index) {
        if (valueBuilder_ == null) {
          return value_.get(index);  } else {
          return valueBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public java.util.List<? extends tensorflow.decision_trees.GenericTreeModel.ValueOrBuilder> 
           getValueOrBuilderList() {
        if (valueBuilder_ != null) {
          return valueBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(value_);
        }
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.Value.Builder addValueBuilder() {
        return getValueFieldBuilder().addBuilder(
            tensorflow.decision_trees.GenericTreeModel.Value.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.Value.Builder addValueBuilder(
          int index) {
        return getValueFieldBuilder().addBuilder(
            index, tensorflow.decision_trees.GenericTreeModel.Value.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.decision_trees.Value value = 2;</code>
       */
      public java.util.List<tensorflow.decision_trees.GenericTreeModel.Value.Builder> 
           getValueBuilderList() {
        return getValueFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.decision_trees.GenericTreeModel.Value, tensorflow.decision_trees.GenericTreeModel.Value.Builder, tensorflow.decision_trees.GenericTreeModel.ValueOrBuilder> 
          getValueFieldBuilder() {
        if (valueBuilder_ == null) {
          valueBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.decision_trees.GenericTreeModel.Value, tensorflow.decision_trees.GenericTreeModel.Value.Builder, tensorflow.decision_trees.GenericTreeModel.ValueOrBuilder>(
                  value_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          value_ = null;
        }
        return valueBuilder_;
      }

      private boolean inverse_ ;
      /**
       * <code>bool inverse = 3;</code>
       */
      public boolean getInverse() {
        return inverse_;
      }
      /**
       * <code>bool inverse = 3;</code>
       */
      public Builder setInverse(boolean value) {
        
        inverse_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool inverse = 3;</code>
       */
      public Builder clearInverse() {
        
        inverse_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.decision_trees.MatchingValuesTest)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.decision_trees.MatchingValuesTest)
    private static final tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest();
    }

    public static tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MatchingValuesTest>
        PARSER = new com.google.protobuf.AbstractParser<MatchingValuesTest>() {
      public MatchingValuesTest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new MatchingValuesTest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<MatchingValuesTest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MatchingValuesTest> getParserForType() {
      return PARSER;
    }

    public tensorflow.decision_trees.GenericTreeModelExtensions.MatchingValuesTest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_decision_trees_MatchingValuesTest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_decision_trees_MatchingValuesTest_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nKtensorflow/contrib/decision_trees/prot" +
      "o/generic_tree_model_extensions.proto\022\031t" +
      "ensorflow.decision_trees\032@tensorflow/con" +
      "trib/decision_trees/proto/generic_tree_m" +
      "odel.proto\"\220\001\n\022MatchingValuesTest\0228\n\nfea" +
      "ture_id\030\001 \001(\0132$.tensorflow.decision_tree" +
      "s.FeatureId\022/\n\005value\030\002 \003(\0132 .tensorflow." +
      "decision_trees.Value\022\017\n\007inverse\030\003 \001(\010b\006p" +
      "roto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          tensorflow.decision_trees.GenericTreeModel.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_decision_trees_MatchingValuesTest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_decision_trees_MatchingValuesTest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_decision_trees_MatchingValuesTest_descriptor,
        new java.lang.String[] { "FeatureId", "Value", "Inverse", });
    tensorflow.decision_trees.GenericTreeModel.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
