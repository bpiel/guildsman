// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/python/framework/cpp_shape_inference.proto

package tensorflow;

public final class CppShapeInference {
  private CppShapeInference() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CppShapeInferenceResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.CppShapeInferenceResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    boolean hasShape();
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    org.tensorflow.framework.TensorShapeProto getShape();
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder();

    /**
     * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     */
    boolean hasHandleData();
    /**
     * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     */
    tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData getHandleData();
    /**
     * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     */
    tensorflow.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder getHandleDataOrBuilder();
  }
  /**
   * Protobuf type {@code tensorflow.CppShapeInferenceResult}
   */
  public  static final class CppShapeInferenceResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.CppShapeInferenceResult)
      CppShapeInferenceResultOrBuilder {
    // Use CppShapeInferenceResult.newBuilder() to construct.
    private CppShapeInferenceResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CppShapeInferenceResult() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CppShapeInferenceResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              org.tensorflow.framework.TensorShapeProto.Builder subBuilder = null;
              if (shape_ != null) {
                subBuilder = shape_.toBuilder();
              }
              shape_ = input.readMessage(org.tensorflow.framework.TensorShapeProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(shape_);
                shape_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.Builder subBuilder = null;
              if (handleData_ != null) {
                subBuilder = handleData_.toBuilder();
              }
              handleData_ = input.readMessage(tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(handleData_);
                handleData_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.CppShapeInference.CppShapeInferenceResult.class, tensorflow.CppShapeInference.CppShapeInferenceResult.Builder.class);
    }

    public interface HandleShapeAndTypeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.CppShapeInferenceResult.HandleShapeAndType)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      boolean hasShape();
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      org.tensorflow.framework.TensorShapeProto getShape();
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder();

      /**
       * <code>.tensorflow.DataType dtype = 2;</code>
       */
      int getDtypeValue();
      /**
       * <code>.tensorflow.DataType dtype = 2;</code>
       */
      org.tensorflow.framework.DataType getDtype();
    }
    /**
     * Protobuf type {@code tensorflow.CppShapeInferenceResult.HandleShapeAndType}
     */
    public  static final class HandleShapeAndType extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.CppShapeInferenceResult.HandleShapeAndType)
        HandleShapeAndTypeOrBuilder {
      // Use HandleShapeAndType.newBuilder() to construct.
      private HandleShapeAndType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HandleShapeAndType() {
        dtype_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private HandleShapeAndType(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                org.tensorflow.framework.TensorShapeProto.Builder subBuilder = null;
                if (shape_ != null) {
                  subBuilder = shape_.toBuilder();
                }
                shape_ = input.readMessage(org.tensorflow.framework.TensorShapeProto.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(shape_);
                  shape_ = subBuilder.buildPartial();
                }

                break;
              }
              case 16: {
                int rawValue = input.readEnum();

                dtype_ = rawValue;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.class, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder.class);
      }

      public static final int SHAPE_FIELD_NUMBER = 1;
      private org.tensorflow.framework.TensorShapeProto shape_;
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public boolean hasShape() {
        return shape_ != null;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.framework.TensorShapeProto getShape() {
        return shape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder() {
        return getShape();
      }

      public static final int DTYPE_FIELD_NUMBER = 2;
      private int dtype_;
      /**
       * <code>.tensorflow.DataType dtype = 2;</code>
       */
      public int getDtypeValue() {
        return dtype_;
      }
      /**
       * <code>.tensorflow.DataType dtype = 2;</code>
       */
      public org.tensorflow.framework.DataType getDtype() {
        org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
        return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (shape_ != null) {
          output.writeMessage(1, getShape());
        }
        if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
          output.writeEnum(2, dtype_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (shape_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getShape());
        }
        if (dtype_ != org.tensorflow.framework.DataType.DT_INVALID.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(2, dtype_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType)) {
          return super.equals(obj);
        }
        tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType other = (tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType) obj;

        boolean result = true;
        result = result && (hasShape() == other.hasShape());
        if (hasShape()) {
          result = result && getShape()
              .equals(other.getShape());
        }
        result = result && dtype_ == other.dtype_;
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasShape()) {
          hash = (37 * hash) + SHAPE_FIELD_NUMBER;
          hash = (53 * hash) + getShape().hashCode();
        }
        hash = (37 * hash) + DTYPE_FIELD_NUMBER;
        hash = (53 * hash) + dtype_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.CppShapeInferenceResult.HandleShapeAndType}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.CppShapeInferenceResult.HandleShapeAndType)
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.class, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder.class);
        }

        // Construct using tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          if (shapeBuilder_ == null) {
            shape_ = null;
          } else {
            shape_ = null;
            shapeBuilder_ = null;
          }
          dtype_ = 0;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_descriptor;
        }

        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getDefaultInstanceForType() {
          return tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.getDefaultInstance();
        }

        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType build() {
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType buildPartial() {
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType result = new tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType(this);
          if (shapeBuilder_ == null) {
            result.shape_ = shape_;
          } else {
            result.shape_ = shapeBuilder_.build();
          }
          result.dtype_ = dtype_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType) {
            return mergeFrom((tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType other) {
          if (other == tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.getDefaultInstance()) return this;
          if (other.hasShape()) {
            mergeShape(other.getShape());
          }
          if (other.dtype_ != 0) {
            setDtypeValue(other.getDtypeValue());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private org.tensorflow.framework.TensorShapeProto shape_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> shapeBuilder_;
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public boolean hasShape() {
          return shapeBuilder_ != null || shape_ != null;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public org.tensorflow.framework.TensorShapeProto getShape() {
          if (shapeBuilder_ == null) {
            return shape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
          } else {
            return shapeBuilder_.getMessage();
          }
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public Builder setShape(org.tensorflow.framework.TensorShapeProto value) {
          if (shapeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            shape_ = value;
            onChanged();
          } else {
            shapeBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public Builder setShape(
            org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
          if (shapeBuilder_ == null) {
            shape_ = builderForValue.build();
            onChanged();
          } else {
            shapeBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public Builder mergeShape(org.tensorflow.framework.TensorShapeProto value) {
          if (shapeBuilder_ == null) {
            if (shape_ != null) {
              shape_ =
                org.tensorflow.framework.TensorShapeProto.newBuilder(shape_).mergeFrom(value).buildPartial();
            } else {
              shape_ = value;
            }
            onChanged();
          } else {
            shapeBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public Builder clearShape() {
          if (shapeBuilder_ == null) {
            shape_ = null;
            onChanged();
          } else {
            shape_ = null;
            shapeBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public org.tensorflow.framework.TensorShapeProto.Builder getShapeBuilder() {
          
          onChanged();
          return getShapeFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder() {
          if (shapeBuilder_ != null) {
            return shapeBuilder_.getMessageOrBuilder();
          } else {
            return shape_ == null ?
                org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
          }
        }
        /**
         * <code>.tensorflow.TensorShapeProto shape = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> 
            getShapeFieldBuilder() {
          if (shapeBuilder_ == null) {
            shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder>(
                    getShape(),
                    getParentForChildren(),
                    isClean());
            shape_ = null;
          }
          return shapeBuilder_;
        }

        private int dtype_ = 0;
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         */
        public int getDtypeValue() {
          return dtype_;
        }
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         */
        public Builder setDtypeValue(int value) {
          dtype_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         */
        public org.tensorflow.framework.DataType getDtype() {
          org.tensorflow.framework.DataType result = org.tensorflow.framework.DataType.valueOf(dtype_);
          return result == null ? org.tensorflow.framework.DataType.UNRECOGNIZED : result;
        }
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         */
        public Builder setDtype(org.tensorflow.framework.DataType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          dtype_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>.tensorflow.DataType dtype = 2;</code>
         */
        public Builder clearDtype() {
          
          dtype_ = 0;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.CppShapeInferenceResult.HandleShapeAndType)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.CppShapeInferenceResult.HandleShapeAndType)
      private static final tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType();
      }

      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HandleShapeAndType>
          PARSER = new com.google.protobuf.AbstractParser<HandleShapeAndType>() {
        public HandleShapeAndType parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new HandleShapeAndType(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HandleShapeAndType> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HandleShapeAndType> getParserForType() {
        return PARSER;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface HandleDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.CppShapeInferenceResult.HandleData)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>bool is_set = 1;</code>
       */
      boolean getIsSet();

      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      java.util.List<tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> 
          getShapeAndTypeList();
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getShapeAndType(int index);
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      int getShapeAndTypeCount();
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      java.util.List<? extends tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> 
          getShapeAndTypeOrBuilderList();
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder getShapeAndTypeOrBuilder(
          int index);
    }
    /**
     * Protobuf type {@code tensorflow.CppShapeInferenceResult.HandleData}
     */
    public  static final class HandleData extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.CppShapeInferenceResult.HandleData)
        HandleDataOrBuilder {
      // Use HandleData.newBuilder() to construct.
      private HandleData(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private HandleData() {
        isSet_ = false;
        shapeAndType_ = java.util.Collections.emptyList();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private HandleData(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 8: {

                isSet_ = input.readBool();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  shapeAndType_ = new java.util.ArrayList<tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType>();
                  mutable_bitField0_ |= 0x00000002;
                }
                shapeAndType_.add(
                    input.readMessage(tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.parser(), extensionRegistry));
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            shapeAndType_ = java.util.Collections.unmodifiableList(shapeAndType_);
          }
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleData_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.class, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.Builder.class);
      }

      private int bitField0_;
      public static final int IS_SET_FIELD_NUMBER = 1;
      private boolean isSet_;
      /**
       * <code>bool is_set = 1;</code>
       */
      public boolean getIsSet() {
        return isSet_;
      }

      public static final int SHAPE_AND_TYPE_FIELD_NUMBER = 2;
      private java.util.List<tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> shapeAndType_;
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      public java.util.List<tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> getShapeAndTypeList() {
        return shapeAndType_;
      }
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      public java.util.List<? extends tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> 
          getShapeAndTypeOrBuilderList() {
        return shapeAndType_;
      }
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      public int getShapeAndTypeCount() {
        return shapeAndType_.size();
      }
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getShapeAndType(int index) {
        return shapeAndType_.get(index);
      }
      /**
       * <pre>
       * Only valid if &lt;is_set&gt;.
       * </pre>
       *
       * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
       */
      public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder getShapeAndTypeOrBuilder(
          int index) {
        return shapeAndType_.get(index);
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (isSet_ != false) {
          output.writeBool(1, isSet_);
        }
        for (int i = 0; i < shapeAndType_.size(); i++) {
          output.writeMessage(2, shapeAndType_.get(i));
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (isSet_ != false) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, isSet_);
        }
        for (int i = 0; i < shapeAndType_.size(); i++) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, shapeAndType_.get(i));
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData)) {
          return super.equals(obj);
        }
        tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData other = (tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData) obj;

        boolean result = true;
        result = result && (getIsSet()
            == other.getIsSet());
        result = result && getShapeAndTypeList()
            .equals(other.getShapeAndTypeList());
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + IS_SET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getIsSet());
        if (getShapeAndTypeCount() > 0) {
          hash = (37 * hash) + SHAPE_AND_TYPE_FIELD_NUMBER;
          hash = (53 * hash) + getShapeAndTypeList().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.CppShapeInferenceResult.HandleData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.CppShapeInferenceResult.HandleData)
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleData_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleData_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.class, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.Builder.class);
        }

        // Construct using tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
            getShapeAndTypeFieldBuilder();
          }
        }
        public Builder clear() {
          super.clear();
          isSet_ = false;

          if (shapeAndTypeBuilder_ == null) {
            shapeAndType_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            shapeAndTypeBuilder_.clear();
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_HandleData_descriptor;
        }

        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData getDefaultInstanceForType() {
          return tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance();
        }

        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData build() {
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData buildPartial() {
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData result = new tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          result.isSet_ = isSet_;
          if (shapeAndTypeBuilder_ == null) {
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
              shapeAndType_ = java.util.Collections.unmodifiableList(shapeAndType_);
              bitField0_ = (bitField0_ & ~0x00000002);
            }
            result.shapeAndType_ = shapeAndType_;
          } else {
            result.shapeAndType_ = shapeAndTypeBuilder_.build();
          }
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData) {
            return mergeFrom((tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData other) {
          if (other == tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance()) return this;
          if (other.getIsSet() != false) {
            setIsSet(other.getIsSet());
          }
          if (shapeAndTypeBuilder_ == null) {
            if (!other.shapeAndType_.isEmpty()) {
              if (shapeAndType_.isEmpty()) {
                shapeAndType_ = other.shapeAndType_;
                bitField0_ = (bitField0_ & ~0x00000002);
              } else {
                ensureShapeAndTypeIsMutable();
                shapeAndType_.addAll(other.shapeAndType_);
              }
              onChanged();
            }
          } else {
            if (!other.shapeAndType_.isEmpty()) {
              if (shapeAndTypeBuilder_.isEmpty()) {
                shapeAndTypeBuilder_.dispose();
                shapeAndTypeBuilder_ = null;
                shapeAndType_ = other.shapeAndType_;
                bitField0_ = (bitField0_ & ~0x00000002);
                shapeAndTypeBuilder_ = 
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                     getShapeAndTypeFieldBuilder() : null;
              } else {
                shapeAndTypeBuilder_.addAllMessages(other.shapeAndType_);
              }
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean isSet_ ;
        /**
         * <code>bool is_set = 1;</code>
         */
        public boolean getIsSet() {
          return isSet_;
        }
        /**
         * <code>bool is_set = 1;</code>
         */
        public Builder setIsSet(boolean value) {
          
          isSet_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>bool is_set = 1;</code>
         */
        public Builder clearIsSet() {
          
          isSet_ = false;
          onChanged();
          return this;
        }

        private java.util.List<tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> shapeAndType_ =
          java.util.Collections.emptyList();
        private void ensureShapeAndTypeIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            shapeAndType_ = new java.util.ArrayList<tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType>(shapeAndType_);
            bitField0_ |= 0x00000002;
           }
        }

        private com.google.protobuf.RepeatedFieldBuilderV3<
            tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> shapeAndTypeBuilder_;

        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public java.util.List<tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> getShapeAndTypeList() {
          if (shapeAndTypeBuilder_ == null) {
            return java.util.Collections.unmodifiableList(shapeAndType_);
          } else {
            return shapeAndTypeBuilder_.getMessageList();
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public int getShapeAndTypeCount() {
          if (shapeAndTypeBuilder_ == null) {
            return shapeAndType_.size();
          } else {
            return shapeAndTypeBuilder_.getCount();
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType getShapeAndType(int index) {
          if (shapeAndTypeBuilder_ == null) {
            return shapeAndType_.get(index);
          } else {
            return shapeAndTypeBuilder_.getMessage(index);
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder setShapeAndType(
            int index, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType value) {
          if (shapeAndTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureShapeAndTypeIsMutable();
            shapeAndType_.set(index, value);
            onChanged();
          } else {
            shapeAndTypeBuilder_.setMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder setShapeAndType(
            int index, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder builderForValue) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            shapeAndType_.set(index, builderForValue.build());
            onChanged();
          } else {
            shapeAndTypeBuilder_.setMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addShapeAndType(tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType value) {
          if (shapeAndTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureShapeAndTypeIsMutable();
            shapeAndType_.add(value);
            onChanged();
          } else {
            shapeAndTypeBuilder_.addMessage(value);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addShapeAndType(
            int index, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType value) {
          if (shapeAndTypeBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            ensureShapeAndTypeIsMutable();
            shapeAndType_.add(index, value);
            onChanged();
          } else {
            shapeAndTypeBuilder_.addMessage(index, value);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addShapeAndType(
            tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder builderForValue) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            shapeAndType_.add(builderForValue.build());
            onChanged();
          } else {
            shapeAndTypeBuilder_.addMessage(builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addShapeAndType(
            int index, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder builderForValue) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            shapeAndType_.add(index, builderForValue.build());
            onChanged();
          } else {
            shapeAndTypeBuilder_.addMessage(index, builderForValue.build());
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder addAllShapeAndType(
            java.lang.Iterable<? extends tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType> values) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            com.google.protobuf.AbstractMessageLite.Builder.addAll(
                values, shapeAndType_);
            onChanged();
          } else {
            shapeAndTypeBuilder_.addAllMessages(values);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder clearShapeAndType() {
          if (shapeAndTypeBuilder_ == null) {
            shapeAndType_ = java.util.Collections.emptyList();
            bitField0_ = (bitField0_ & ~0x00000002);
            onChanged();
          } else {
            shapeAndTypeBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public Builder removeShapeAndType(int index) {
          if (shapeAndTypeBuilder_ == null) {
            ensureShapeAndTypeIsMutable();
            shapeAndType_.remove(index);
            onChanged();
          } else {
            shapeAndTypeBuilder_.remove(index);
          }
          return this;
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder getShapeAndTypeBuilder(
            int index) {
          return getShapeAndTypeFieldBuilder().getBuilder(index);
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder getShapeAndTypeOrBuilder(
            int index) {
          if (shapeAndTypeBuilder_ == null) {
            return shapeAndType_.get(index);  } else {
            return shapeAndTypeBuilder_.getMessageOrBuilder(index);
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public java.util.List<? extends tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> 
             getShapeAndTypeOrBuilderList() {
          if (shapeAndTypeBuilder_ != null) {
            return shapeAndTypeBuilder_.getMessageOrBuilderList();
          } else {
            return java.util.Collections.unmodifiableList(shapeAndType_);
          }
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder addShapeAndTypeBuilder() {
          return getShapeAndTypeFieldBuilder().addBuilder(
              tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.getDefaultInstance());
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder addShapeAndTypeBuilder(
            int index) {
          return getShapeAndTypeFieldBuilder().addBuilder(
              index, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.getDefaultInstance());
        }
        /**
         * <pre>
         * Only valid if &lt;is_set&gt;.
         * </pre>
         *
         * <code>repeated .tensorflow.CppShapeInferenceResult.HandleShapeAndType shape_and_type = 2;</code>
         */
        public java.util.List<tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder> 
             getShapeAndTypeBuilderList() {
          return getShapeAndTypeFieldBuilder().getBuilderList();
        }
        private com.google.protobuf.RepeatedFieldBuilderV3<
            tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder> 
            getShapeAndTypeFieldBuilder() {
          if (shapeAndTypeBuilder_ == null) {
            shapeAndTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndType.Builder, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleShapeAndTypeOrBuilder>(
                    shapeAndType_,
                    ((bitField0_ & 0x00000002) == 0x00000002),
                    getParentForChildren(),
                    isClean());
            shapeAndType_ = null;
          }
          return shapeAndTypeBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.CppShapeInferenceResult.HandleData)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.CppShapeInferenceResult.HandleData)
      private static final tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData();
      }

      public static tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<HandleData>
          PARSER = new com.google.protobuf.AbstractParser<HandleData>() {
        public HandleData parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new HandleData(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<HandleData> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<HandleData> getParserForType() {
        return PARSER;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int SHAPE_FIELD_NUMBER = 1;
    private org.tensorflow.framework.TensorShapeProto shape_;
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    public boolean hasShape() {
      return shape_ != null;
    }
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    public org.tensorflow.framework.TensorShapeProto getShape() {
      return shape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
    }
    /**
     * <code>.tensorflow.TensorShapeProto shape = 1;</code>
     */
    public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder() {
      return getShape();
    }

    public static final int HANDLE_DATA_FIELD_NUMBER = 4;
    private tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData handleData_;
    /**
     * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     */
    public boolean hasHandleData() {
      return handleData_ != null;
    }
    /**
     * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     */
    public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData getHandleData() {
      return handleData_ == null ? tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance() : handleData_;
    }
    /**
     * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
     */
    public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder getHandleDataOrBuilder() {
      return getHandleData();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (shape_ != null) {
        output.writeMessage(1, getShape());
      }
      if (handleData_ != null) {
        output.writeMessage(4, getHandleData());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (shape_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getShape());
      }
      if (handleData_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getHandleData());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.CppShapeInference.CppShapeInferenceResult)) {
        return super.equals(obj);
      }
      tensorflow.CppShapeInference.CppShapeInferenceResult other = (tensorflow.CppShapeInference.CppShapeInferenceResult) obj;

      boolean result = true;
      result = result && (hasShape() == other.hasShape());
      if (hasShape()) {
        result = result && getShape()
            .equals(other.getShape());
      }
      result = result && (hasHandleData() == other.hasHandleData());
      if (hasHandleData()) {
        result = result && getHandleData()
            .equals(other.getHandleData());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasShape()) {
        hash = (37 * hash) + SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getShape().hashCode();
      }
      if (hasHandleData()) {
        hash = (37 * hash) + HANDLE_DATA_FIELD_NUMBER;
        hash = (53 * hash) + getHandleData().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.CppShapeInference.CppShapeInferenceResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.CppShapeInferenceResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.CppShapeInferenceResult)
        tensorflow.CppShapeInference.CppShapeInferenceResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.CppShapeInference.CppShapeInferenceResult.class, tensorflow.CppShapeInference.CppShapeInferenceResult.Builder.class);
      }

      // Construct using tensorflow.CppShapeInference.CppShapeInferenceResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (shapeBuilder_ == null) {
          shape_ = null;
        } else {
          shape_ = null;
          shapeBuilder_ = null;
        }
        if (handleDataBuilder_ == null) {
          handleData_ = null;
        } else {
          handleData_ = null;
          handleDataBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceResult_descriptor;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceResult getDefaultInstanceForType() {
        return tensorflow.CppShapeInference.CppShapeInferenceResult.getDefaultInstance();
      }

      public tensorflow.CppShapeInference.CppShapeInferenceResult build() {
        tensorflow.CppShapeInference.CppShapeInferenceResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceResult buildPartial() {
        tensorflow.CppShapeInference.CppShapeInferenceResult result = new tensorflow.CppShapeInference.CppShapeInferenceResult(this);
        if (shapeBuilder_ == null) {
          result.shape_ = shape_;
        } else {
          result.shape_ = shapeBuilder_.build();
        }
        if (handleDataBuilder_ == null) {
          result.handleData_ = handleData_;
        } else {
          result.handleData_ = handleDataBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.CppShapeInference.CppShapeInferenceResult) {
          return mergeFrom((tensorflow.CppShapeInference.CppShapeInferenceResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.CppShapeInference.CppShapeInferenceResult other) {
        if (other == tensorflow.CppShapeInference.CppShapeInferenceResult.getDefaultInstance()) return this;
        if (other.hasShape()) {
          mergeShape(other.getShape());
        }
        if (other.hasHandleData()) {
          mergeHandleData(other.getHandleData());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.CppShapeInference.CppShapeInferenceResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.CppShapeInference.CppShapeInferenceResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private org.tensorflow.framework.TensorShapeProto shape_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> shapeBuilder_;
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public boolean hasShape() {
        return shapeBuilder_ != null || shape_ != null;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.framework.TensorShapeProto getShape() {
        if (shapeBuilder_ == null) {
          return shape_ == null ? org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
        } else {
          return shapeBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder setShape(org.tensorflow.framework.TensorShapeProto value) {
        if (shapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          shape_ = value;
          onChanged();
        } else {
          shapeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder setShape(
          org.tensorflow.framework.TensorShapeProto.Builder builderForValue) {
        if (shapeBuilder_ == null) {
          shape_ = builderForValue.build();
          onChanged();
        } else {
          shapeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder mergeShape(org.tensorflow.framework.TensorShapeProto value) {
        if (shapeBuilder_ == null) {
          if (shape_ != null) {
            shape_ =
              org.tensorflow.framework.TensorShapeProto.newBuilder(shape_).mergeFrom(value).buildPartial();
          } else {
            shape_ = value;
          }
          onChanged();
        } else {
          shapeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public Builder clearShape() {
        if (shapeBuilder_ == null) {
          shape_ = null;
          onChanged();
        } else {
          shape_ = null;
          shapeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.framework.TensorShapeProto.Builder getShapeBuilder() {
        
        onChanged();
        return getShapeFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      public org.tensorflow.framework.TensorShapeProtoOrBuilder getShapeOrBuilder() {
        if (shapeBuilder_ != null) {
          return shapeBuilder_.getMessageOrBuilder();
        } else {
          return shape_ == null ?
              org.tensorflow.framework.TensorShapeProto.getDefaultInstance() : shape_;
        }
      }
      /**
       * <code>.tensorflow.TensorShapeProto shape = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder> 
          getShapeFieldBuilder() {
        if (shapeBuilder_ == null) {
          shapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              org.tensorflow.framework.TensorShapeProto, org.tensorflow.framework.TensorShapeProto.Builder, org.tensorflow.framework.TensorShapeProtoOrBuilder>(
                  getShape(),
                  getParentForChildren(),
                  isClean());
          shape_ = null;
        }
        return shapeBuilder_;
      }

      private tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData handleData_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.Builder, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder> handleDataBuilder_;
      /**
       * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public boolean hasHandleData() {
        return handleDataBuilder_ != null || handleData_ != null;
      }
      /**
       * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData getHandleData() {
        if (handleDataBuilder_ == null) {
          return handleData_ == null ? tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance() : handleData_;
        } else {
          return handleDataBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public Builder setHandleData(tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData value) {
        if (handleDataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          handleData_ = value;
          onChanged();
        } else {
          handleDataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public Builder setHandleData(
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.Builder builderForValue) {
        if (handleDataBuilder_ == null) {
          handleData_ = builderForValue.build();
          onChanged();
        } else {
          handleDataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public Builder mergeHandleData(tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData value) {
        if (handleDataBuilder_ == null) {
          if (handleData_ != null) {
            handleData_ =
              tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.newBuilder(handleData_).mergeFrom(value).buildPartial();
          } else {
            handleData_ = value;
          }
          onChanged();
        } else {
          handleDataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public Builder clearHandleData() {
        if (handleDataBuilder_ == null) {
          handleData_ = null;
          onChanged();
        } else {
          handleData_ = null;
          handleDataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.Builder getHandleDataBuilder() {
        
        onChanged();
        return getHandleDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      public tensorflow.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder getHandleDataOrBuilder() {
        if (handleDataBuilder_ != null) {
          return handleDataBuilder_.getMessageOrBuilder();
        } else {
          return handleData_ == null ?
              tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.getDefaultInstance() : handleData_;
        }
      }
      /**
       * <code>.tensorflow.CppShapeInferenceResult.HandleData handle_data = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.Builder, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder> 
          getHandleDataFieldBuilder() {
        if (handleDataBuilder_ == null) {
          handleDataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleData.Builder, tensorflow.CppShapeInference.CppShapeInferenceResult.HandleDataOrBuilder>(
                  getHandleData(),
                  getParentForChildren(),
                  isClean());
          handleData_ = null;
        }
        return handleDataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.CppShapeInferenceResult)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.CppShapeInferenceResult)
    private static final tensorflow.CppShapeInference.CppShapeInferenceResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.CppShapeInference.CppShapeInferenceResult();
    }

    public static tensorflow.CppShapeInference.CppShapeInferenceResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CppShapeInferenceResult>
        PARSER = new com.google.protobuf.AbstractParser<CppShapeInferenceResult>() {
      public CppShapeInferenceResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CppShapeInferenceResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CppShapeInferenceResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CppShapeInferenceResult> getParserForType() {
      return PARSER;
    }

    public tensorflow.CppShapeInference.CppShapeInferenceResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CppShapeInferenceInputsNeededOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.CppShapeInferenceInputsNeeded)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    java.util.List<java.lang.Integer> getInputTensorsNeededList();
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    int getInputTensorsNeededCount();
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    int getInputTensorsNeeded(int index);

    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    java.util.List<java.lang.Integer> getInputTensorsAsShapesNeededList();
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    int getInputTensorsAsShapesNeededCount();
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    int getInputTensorsAsShapesNeeded(int index);
  }
  /**
   * Protobuf type {@code tensorflow.CppShapeInferenceInputsNeeded}
   */
  public  static final class CppShapeInferenceInputsNeeded extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.CppShapeInferenceInputsNeeded)
      CppShapeInferenceInputsNeededOrBuilder {
    // Use CppShapeInferenceInputsNeeded.newBuilder() to construct.
    private CppShapeInferenceInputsNeeded(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CppShapeInferenceInputsNeeded() {
      inputTensorsNeeded_ = java.util.Collections.emptyList();
      inputTensorsAsShapesNeeded_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CppShapeInferenceInputsNeeded(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                inputTensorsNeeded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              inputTensorsNeeded_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                inputTensorsNeeded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                inputTensorsNeeded_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                inputTensorsAsShapesNeeded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              inputTensorsAsShapesNeeded_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                inputTensorsAsShapesNeeded_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                inputTensorsAsShapesNeeded_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          inputTensorsNeeded_ = java.util.Collections.unmodifiableList(inputTensorsNeeded_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          inputTensorsAsShapesNeeded_ = java.util.Collections.unmodifiableList(inputTensorsAsShapesNeeded_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.class, tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.Builder.class);
    }

    public static final int INPUT_TENSORS_NEEDED_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> inputTensorsNeeded_;
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getInputTensorsNeededList() {
      return inputTensorsNeeded_;
    }
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    public int getInputTensorsNeededCount() {
      return inputTensorsNeeded_.size();
    }
    /**
     * <code>repeated int32 input_tensors_needed = 1;</code>
     */
    public int getInputTensorsNeeded(int index) {
      return inputTensorsNeeded_.get(index);
    }
    private int inputTensorsNeededMemoizedSerializedSize = -1;

    public static final int INPUT_TENSORS_AS_SHAPES_NEEDED_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> inputTensorsAsShapesNeeded_;
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getInputTensorsAsShapesNeededList() {
      return inputTensorsAsShapesNeeded_;
    }
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    public int getInputTensorsAsShapesNeededCount() {
      return inputTensorsAsShapesNeeded_.size();
    }
    /**
     * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
     */
    public int getInputTensorsAsShapesNeeded(int index) {
      return inputTensorsAsShapesNeeded_.get(index);
    }
    private int inputTensorsAsShapesNeededMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getInputTensorsNeededList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(inputTensorsNeededMemoizedSerializedSize);
      }
      for (int i = 0; i < inputTensorsNeeded_.size(); i++) {
        output.writeInt32NoTag(inputTensorsNeeded_.get(i));
      }
      if (getInputTensorsAsShapesNeededList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(inputTensorsAsShapesNeededMemoizedSerializedSize);
      }
      for (int i = 0; i < inputTensorsAsShapesNeeded_.size(); i++) {
        output.writeInt32NoTag(inputTensorsAsShapesNeeded_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < inputTensorsNeeded_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(inputTensorsNeeded_.get(i));
        }
        size += dataSize;
        if (!getInputTensorsNeededList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inputTensorsNeededMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < inputTensorsAsShapesNeeded_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(inputTensorsAsShapesNeeded_.get(i));
        }
        size += dataSize;
        if (!getInputTensorsAsShapesNeededList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inputTensorsAsShapesNeededMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded)) {
        return super.equals(obj);
      }
      tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded other = (tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded) obj;

      boolean result = true;
      result = result && getInputTensorsNeededList()
          .equals(other.getInputTensorsNeededList());
      result = result && getInputTensorsAsShapesNeededList()
          .equals(other.getInputTensorsAsShapesNeededList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getInputTensorsNeededCount() > 0) {
        hash = (37 * hash) + INPUT_TENSORS_NEEDED_FIELD_NUMBER;
        hash = (53 * hash) + getInputTensorsNeededList().hashCode();
      }
      if (getInputTensorsAsShapesNeededCount() > 0) {
        hash = (37 * hash) + INPUT_TENSORS_AS_SHAPES_NEEDED_FIELD_NUMBER;
        hash = (53 * hash) + getInputTensorsAsShapesNeededList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.CppShapeInferenceInputsNeeded}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.CppShapeInferenceInputsNeeded)
        tensorflow.CppShapeInference.CppShapeInferenceInputsNeededOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.class, tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.Builder.class);
      }

      // Construct using tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        inputTensorsNeeded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        inputTensorsAsShapesNeeded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.CppShapeInference.internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded getDefaultInstanceForType() {
        return tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.getDefaultInstance();
      }

      public tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded build() {
        tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded buildPartial() {
        tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded result = new tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          inputTensorsNeeded_ = java.util.Collections.unmodifiableList(inputTensorsNeeded_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.inputTensorsNeeded_ = inputTensorsNeeded_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          inputTensorsAsShapesNeeded_ = java.util.Collections.unmodifiableList(inputTensorsAsShapesNeeded_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.inputTensorsAsShapesNeeded_ = inputTensorsAsShapesNeeded_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded) {
          return mergeFrom((tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded other) {
        if (other == tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded.getDefaultInstance()) return this;
        if (!other.inputTensorsNeeded_.isEmpty()) {
          if (inputTensorsNeeded_.isEmpty()) {
            inputTensorsNeeded_ = other.inputTensorsNeeded_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureInputTensorsNeededIsMutable();
            inputTensorsNeeded_.addAll(other.inputTensorsNeeded_);
          }
          onChanged();
        }
        if (!other.inputTensorsAsShapesNeeded_.isEmpty()) {
          if (inputTensorsAsShapesNeeded_.isEmpty()) {
            inputTensorsAsShapesNeeded_ = other.inputTensorsAsShapesNeeded_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInputTensorsAsShapesNeededIsMutable();
            inputTensorsAsShapesNeeded_.addAll(other.inputTensorsAsShapesNeeded_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> inputTensorsNeeded_ = java.util.Collections.emptyList();
      private void ensureInputTensorsNeededIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          inputTensorsNeeded_ = new java.util.ArrayList<java.lang.Integer>(inputTensorsNeeded_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getInputTensorsNeededList() {
        return java.util.Collections.unmodifiableList(inputTensorsNeeded_);
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public int getInputTensorsNeededCount() {
        return inputTensorsNeeded_.size();
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public int getInputTensorsNeeded(int index) {
        return inputTensorsNeeded_.get(index);
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public Builder setInputTensorsNeeded(
          int index, int value) {
        ensureInputTensorsNeededIsMutable();
        inputTensorsNeeded_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public Builder addInputTensorsNeeded(int value) {
        ensureInputTensorsNeededIsMutable();
        inputTensorsNeeded_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public Builder addAllInputTensorsNeeded(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInputTensorsNeededIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputTensorsNeeded_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_needed = 1;</code>
       */
      public Builder clearInputTensorsNeeded() {
        inputTensorsNeeded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> inputTensorsAsShapesNeeded_ = java.util.Collections.emptyList();
      private void ensureInputTensorsAsShapesNeededIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          inputTensorsAsShapesNeeded_ = new java.util.ArrayList<java.lang.Integer>(inputTensorsAsShapesNeeded_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getInputTensorsAsShapesNeededList() {
        return java.util.Collections.unmodifiableList(inputTensorsAsShapesNeeded_);
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public int getInputTensorsAsShapesNeededCount() {
        return inputTensorsAsShapesNeeded_.size();
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public int getInputTensorsAsShapesNeeded(int index) {
        return inputTensorsAsShapesNeeded_.get(index);
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public Builder setInputTensorsAsShapesNeeded(
          int index, int value) {
        ensureInputTensorsAsShapesNeededIsMutable();
        inputTensorsAsShapesNeeded_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public Builder addInputTensorsAsShapesNeeded(int value) {
        ensureInputTensorsAsShapesNeededIsMutable();
        inputTensorsAsShapesNeeded_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public Builder addAllInputTensorsAsShapesNeeded(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInputTensorsAsShapesNeededIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inputTensorsAsShapesNeeded_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 input_tensors_as_shapes_needed = 2;</code>
       */
      public Builder clearInputTensorsAsShapesNeeded() {
        inputTensorsAsShapesNeeded_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.CppShapeInferenceInputsNeeded)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.CppShapeInferenceInputsNeeded)
    private static final tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded();
    }

    public static tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CppShapeInferenceInputsNeeded>
        PARSER = new com.google.protobuf.AbstractParser<CppShapeInferenceInputsNeeded>() {
      public CppShapeInferenceInputsNeeded parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CppShapeInferenceInputsNeeded(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CppShapeInferenceInputsNeeded> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CppShapeInferenceInputsNeeded> getParserForType() {
      return PARSER;
    }

    public tensorflow.CppShapeInference.CppShapeInferenceInputsNeeded getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CppShapeInferenceResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CppShapeInferenceResult_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CppShapeInferenceResult_HandleData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CppShapeInferenceResult_HandleData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_CppShapeInferenceInputsNeeded_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n5tensorflow/python/framework/cpp_shape_" +
      "inference.proto\022\ntensorflow\032%tensorflow/" +
      "core/framework/types.proto\032,tensorflow/c" +
      "ore/framework/tensor_shape.proto\"\355\002\n\027Cpp" +
      "ShapeInferenceResult\022+\n\005shape\030\001 \001(\0132\034.te" +
      "nsorflow.TensorShapeProto\022C\n\013handle_data" +
      "\030\004 \001(\0132..tensorflow.CppShapeInferenceRes" +
      "ult.HandleData\032f\n\022HandleShapeAndType\022+\n\005" +
      "shape\030\001 \001(\0132\034.tensorflow.TensorShapeProt" +
      "o\022#\n\005dtype\030\002 \001(\0162\024.tensorflow.DataType\032l",
      "\n\nHandleData\022\016\n\006is_set\030\001 \001(\010\022N\n\016shape_an" +
      "d_type\030\002 \003(\01326.tensorflow.CppShapeInfere" +
      "nceResult.HandleShapeAndTypeJ\004\010\002\020\003J\004\010\003\020\004" +
      "\"e\n\035CppShapeInferenceInputsNeeded\022\034\n\024inp" +
      "ut_tensors_needed\030\001 \003(\005\022&\n\036input_tensors" +
      "_as_shapes_needed\030\002 \003(\005B\003\370\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.tensorflow.framework.TypesProtos.getDescriptor(),
          org.tensorflow.framework.TensorShapeProtos.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_CppShapeInferenceResult_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_CppShapeInferenceResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CppShapeInferenceResult_descriptor,
        new java.lang.String[] { "Shape", "HandleData", });
    internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_descriptor =
      internal_static_tensorflow_CppShapeInferenceResult_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CppShapeInferenceResult_HandleShapeAndType_descriptor,
        new java.lang.String[] { "Shape", "Dtype", });
    internal_static_tensorflow_CppShapeInferenceResult_HandleData_descriptor =
      internal_static_tensorflow_CppShapeInferenceResult_descriptor.getNestedTypes().get(1);
    internal_static_tensorflow_CppShapeInferenceResult_HandleData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CppShapeInferenceResult_HandleData_descriptor,
        new java.lang.String[] { "IsSet", "ShapeAndType", });
    internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_CppShapeInferenceInputsNeeded_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_CppShapeInferenceInputsNeeded_descriptor,
        new java.lang.String[] { "InputTensorsNeeded", "InputTensorsAsShapesNeeded", });
    org.tensorflow.framework.TypesProtos.getDescriptor();
    org.tensorflow.framework.TensorShapeProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
