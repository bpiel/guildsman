// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/contrib/tensorboard/plugins/projector/projector_config.proto

package tensorflow;

public final class ProjectorConfigOuterClass {
  private ProjectorConfigOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface SpriteMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.SpriteMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string image_path = 1;</code>
     */
    java.lang.String getImagePath();
    /**
     * <code>string image_path = 1;</code>
     */
    com.google.protobuf.ByteString
        getImagePathBytes();

    /**
     * <pre>
     * [width, height] of a single image in the sprite.
     * </pre>
     *
     * <code>repeated uint32 single_image_dim = 2;</code>
     */
    java.util.List<java.lang.Integer> getSingleImageDimList();
    /**
     * <pre>
     * [width, height] of a single image in the sprite.
     * </pre>
     *
     * <code>repeated uint32 single_image_dim = 2;</code>
     */
    int getSingleImageDimCount();
    /**
     * <pre>
     * [width, height] of a single image in the sprite.
     * </pre>
     *
     * <code>repeated uint32 single_image_dim = 2;</code>
     */
    int getSingleImageDim(int index);
  }
  /**
   * Protobuf type {@code tensorflow.SpriteMetadata}
   */
  public  static final class SpriteMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.SpriteMetadata)
      SpriteMetadataOrBuilder {
    // Use SpriteMetadata.newBuilder() to construct.
    private SpriteMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SpriteMetadata() {
      imagePath_ = "";
      singleImageDim_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SpriteMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              imagePath_ = s;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                singleImageDim_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              singleImageDim_.add(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                singleImageDim_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                singleImageDim_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          singleImageDim_ = java.util.Collections.unmodifiableList(singleImageDim_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_SpriteMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_SpriteMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.ProjectorConfigOuterClass.SpriteMetadata.class, tensorflow.ProjectorConfigOuterClass.SpriteMetadata.Builder.class);
    }

    private int bitField0_;
    public static final int IMAGE_PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object imagePath_;
    /**
     * <code>string image_path = 1;</code>
     */
    public java.lang.String getImagePath() {
      java.lang.Object ref = imagePath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        imagePath_ = s;
        return s;
      }
    }
    /**
     * <code>string image_path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getImagePathBytes() {
      java.lang.Object ref = imagePath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        imagePath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SINGLE_IMAGE_DIM_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> singleImageDim_;
    /**
     * <pre>
     * [width, height] of a single image in the sprite.
     * </pre>
     *
     * <code>repeated uint32 single_image_dim = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getSingleImageDimList() {
      return singleImageDim_;
    }
    /**
     * <pre>
     * [width, height] of a single image in the sprite.
     * </pre>
     *
     * <code>repeated uint32 single_image_dim = 2;</code>
     */
    public int getSingleImageDimCount() {
      return singleImageDim_.size();
    }
    /**
     * <pre>
     * [width, height] of a single image in the sprite.
     * </pre>
     *
     * <code>repeated uint32 single_image_dim = 2;</code>
     */
    public int getSingleImageDim(int index) {
      return singleImageDim_.get(index);
    }
    private int singleImageDimMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getImagePathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, imagePath_);
      }
      if (getSingleImageDimList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(singleImageDimMemoizedSerializedSize);
      }
      for (int i = 0; i < singleImageDim_.size(); i++) {
        output.writeUInt32NoTag(singleImageDim_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getImagePathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, imagePath_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < singleImageDim_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(singleImageDim_.get(i));
        }
        size += dataSize;
        if (!getSingleImageDimList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        singleImageDimMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.ProjectorConfigOuterClass.SpriteMetadata)) {
        return super.equals(obj);
      }
      tensorflow.ProjectorConfigOuterClass.SpriteMetadata other = (tensorflow.ProjectorConfigOuterClass.SpriteMetadata) obj;

      boolean result = true;
      result = result && getImagePath()
          .equals(other.getImagePath());
      result = result && getSingleImageDimList()
          .equals(other.getSingleImageDimList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IMAGE_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getImagePath().hashCode();
      if (getSingleImageDimCount() > 0) {
        hash = (37 * hash) + SINGLE_IMAGE_DIM_FIELD_NUMBER;
        hash = (53 * hash) + getSingleImageDimList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.ProjectorConfigOuterClass.SpriteMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.SpriteMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.SpriteMetadata)
        tensorflow.ProjectorConfigOuterClass.SpriteMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_SpriteMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_SpriteMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.ProjectorConfigOuterClass.SpriteMetadata.class, tensorflow.ProjectorConfigOuterClass.SpriteMetadata.Builder.class);
      }

      // Construct using tensorflow.ProjectorConfigOuterClass.SpriteMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        imagePath_ = "";

        singleImageDim_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_SpriteMetadata_descriptor;
      }

      public tensorflow.ProjectorConfigOuterClass.SpriteMetadata getDefaultInstanceForType() {
        return tensorflow.ProjectorConfigOuterClass.SpriteMetadata.getDefaultInstance();
      }

      public tensorflow.ProjectorConfigOuterClass.SpriteMetadata build() {
        tensorflow.ProjectorConfigOuterClass.SpriteMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.ProjectorConfigOuterClass.SpriteMetadata buildPartial() {
        tensorflow.ProjectorConfigOuterClass.SpriteMetadata result = new tensorflow.ProjectorConfigOuterClass.SpriteMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.imagePath_ = imagePath_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          singleImageDim_ = java.util.Collections.unmodifiableList(singleImageDim_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.singleImageDim_ = singleImageDim_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.ProjectorConfigOuterClass.SpriteMetadata) {
          return mergeFrom((tensorflow.ProjectorConfigOuterClass.SpriteMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.ProjectorConfigOuterClass.SpriteMetadata other) {
        if (other == tensorflow.ProjectorConfigOuterClass.SpriteMetadata.getDefaultInstance()) return this;
        if (!other.getImagePath().isEmpty()) {
          imagePath_ = other.imagePath_;
          onChanged();
        }
        if (!other.singleImageDim_.isEmpty()) {
          if (singleImageDim_.isEmpty()) {
            singleImageDim_ = other.singleImageDim_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSingleImageDimIsMutable();
            singleImageDim_.addAll(other.singleImageDim_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.ProjectorConfigOuterClass.SpriteMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.ProjectorConfigOuterClass.SpriteMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object imagePath_ = "";
      /**
       * <code>string image_path = 1;</code>
       */
      public java.lang.String getImagePath() {
        java.lang.Object ref = imagePath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          imagePath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string image_path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getImagePathBytes() {
        java.lang.Object ref = imagePath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          imagePath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string image_path = 1;</code>
       */
      public Builder setImagePath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        imagePath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string image_path = 1;</code>
       */
      public Builder clearImagePath() {
        
        imagePath_ = getDefaultInstance().getImagePath();
        onChanged();
        return this;
      }
      /**
       * <code>string image_path = 1;</code>
       */
      public Builder setImagePathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        imagePath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> singleImageDim_ = java.util.Collections.emptyList();
      private void ensureSingleImageDimIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          singleImageDim_ = new java.util.ArrayList<java.lang.Integer>(singleImageDim_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * [width, height] of a single image in the sprite.
       * </pre>
       *
       * <code>repeated uint32 single_image_dim = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getSingleImageDimList() {
        return java.util.Collections.unmodifiableList(singleImageDim_);
      }
      /**
       * <pre>
       * [width, height] of a single image in the sprite.
       * </pre>
       *
       * <code>repeated uint32 single_image_dim = 2;</code>
       */
      public int getSingleImageDimCount() {
        return singleImageDim_.size();
      }
      /**
       * <pre>
       * [width, height] of a single image in the sprite.
       * </pre>
       *
       * <code>repeated uint32 single_image_dim = 2;</code>
       */
      public int getSingleImageDim(int index) {
        return singleImageDim_.get(index);
      }
      /**
       * <pre>
       * [width, height] of a single image in the sprite.
       * </pre>
       *
       * <code>repeated uint32 single_image_dim = 2;</code>
       */
      public Builder setSingleImageDim(
          int index, int value) {
        ensureSingleImageDimIsMutable();
        singleImageDim_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [width, height] of a single image in the sprite.
       * </pre>
       *
       * <code>repeated uint32 single_image_dim = 2;</code>
       */
      public Builder addSingleImageDim(int value) {
        ensureSingleImageDimIsMutable();
        singleImageDim_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [width, height] of a single image in the sprite.
       * </pre>
       *
       * <code>repeated uint32 single_image_dim = 2;</code>
       */
      public Builder addAllSingleImageDim(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSingleImageDimIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, singleImageDim_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * [width, height] of a single image in the sprite.
       * </pre>
       *
       * <code>repeated uint32 single_image_dim = 2;</code>
       */
      public Builder clearSingleImageDim() {
        singleImageDim_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.SpriteMetadata)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.SpriteMetadata)
    private static final tensorflow.ProjectorConfigOuterClass.SpriteMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.ProjectorConfigOuterClass.SpriteMetadata();
    }

    public static tensorflow.ProjectorConfigOuterClass.SpriteMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SpriteMetadata>
        PARSER = new com.google.protobuf.AbstractParser<SpriteMetadata>() {
      public SpriteMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SpriteMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SpriteMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SpriteMetadata> getParserForType() {
      return PARSER;
    }

    public tensorflow.ProjectorConfigOuterClass.SpriteMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EmbeddingInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.EmbeddingInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string tensor_name = 1;</code>
     */
    java.lang.String getTensorName();
    /**
     * <code>string tensor_name = 1;</code>
     */
    com.google.protobuf.ByteString
        getTensorNameBytes();

    /**
     * <code>string metadata_path = 2;</code>
     */
    java.lang.String getMetadataPath();
    /**
     * <code>string metadata_path = 2;</code>
     */
    com.google.protobuf.ByteString
        getMetadataPathBytes();

    /**
     * <code>string bookmarks_path = 3;</code>
     */
    java.lang.String getBookmarksPath();
    /**
     * <code>string bookmarks_path = 3;</code>
     */
    com.google.protobuf.ByteString
        getBookmarksPathBytes();

    /**
     * <pre>
     * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
     * model checkpoint.
     * </pre>
     *
     * <code>repeated uint32 tensor_shape = 4;</code>
     */
    java.util.List<java.lang.Integer> getTensorShapeList();
    /**
     * <pre>
     * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
     * model checkpoint.
     * </pre>
     *
     * <code>repeated uint32 tensor_shape = 4;</code>
     */
    int getTensorShapeCount();
    /**
     * <pre>
     * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
     * model checkpoint.
     * </pre>
     *
     * <code>repeated uint32 tensor_shape = 4;</code>
     */
    int getTensorShape(int index);

    /**
     * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
     */
    boolean hasSprite();
    /**
     * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
     */
    tensorflow.ProjectorConfigOuterClass.SpriteMetadata getSprite();
    /**
     * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
     */
    tensorflow.ProjectorConfigOuterClass.SpriteMetadataOrBuilder getSpriteOrBuilder();

    /**
     * <pre>
     * Path to the TSV file holding the tensor values. If missing, the tensor
     * is assumed to be stored in the model checkpoint.
     * </pre>
     *
     * <code>string tensor_path = 6;</code>
     */
    java.lang.String getTensorPath();
    /**
     * <pre>
     * Path to the TSV file holding the tensor values. If missing, the tensor
     * is assumed to be stored in the model checkpoint.
     * </pre>
     *
     * <code>string tensor_path = 6;</code>
     */
    com.google.protobuf.ByteString
        getTensorPathBytes();
  }
  /**
   * Protobuf type {@code tensorflow.EmbeddingInfo}
   */
  public  static final class EmbeddingInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.EmbeddingInfo)
      EmbeddingInfoOrBuilder {
    // Use EmbeddingInfo.newBuilder() to construct.
    private EmbeddingInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private EmbeddingInfo() {
      tensorName_ = "";
      metadataPath_ = "";
      bookmarksPath_ = "";
      tensorShape_ = java.util.Collections.emptyList();
      tensorPath_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private EmbeddingInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              tensorName_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              metadataPath_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              bookmarksPath_ = s;
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                tensorShape_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              tensorShape_.add(input.readUInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                tensorShape_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                tensorShape_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 42: {
              tensorflow.ProjectorConfigOuterClass.SpriteMetadata.Builder subBuilder = null;
              if (sprite_ != null) {
                subBuilder = sprite_.toBuilder();
              }
              sprite_ = input.readMessage(tensorflow.ProjectorConfigOuterClass.SpriteMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(sprite_);
                sprite_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              tensorPath_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          tensorShape_ = java.util.Collections.unmodifiableList(tensorShape_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_EmbeddingInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_EmbeddingInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.class, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder.class);
    }

    private int bitField0_;
    public static final int TENSOR_NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object tensorName_;
    /**
     * <code>string tensor_name = 1;</code>
     */
    public java.lang.String getTensorName() {
      java.lang.Object ref = tensorName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tensorName_ = s;
        return s;
      }
    }
    /**
     * <code>string tensor_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTensorNameBytes() {
      java.lang.Object ref = tensorName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tensorName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int METADATA_PATH_FIELD_NUMBER = 2;
    private volatile java.lang.Object metadataPath_;
    /**
     * <code>string metadata_path = 2;</code>
     */
    public java.lang.String getMetadataPath() {
      java.lang.Object ref = metadataPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        metadataPath_ = s;
        return s;
      }
    }
    /**
     * <code>string metadata_path = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMetadataPathBytes() {
      java.lang.Object ref = metadataPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        metadataPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BOOKMARKS_PATH_FIELD_NUMBER = 3;
    private volatile java.lang.Object bookmarksPath_;
    /**
     * <code>string bookmarks_path = 3;</code>
     */
    public java.lang.String getBookmarksPath() {
      java.lang.Object ref = bookmarksPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        bookmarksPath_ = s;
        return s;
      }
    }
    /**
     * <code>string bookmarks_path = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBookmarksPathBytes() {
      java.lang.Object ref = bookmarksPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        bookmarksPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TENSOR_SHAPE_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> tensorShape_;
    /**
     * <pre>
     * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
     * model checkpoint.
     * </pre>
     *
     * <code>repeated uint32 tensor_shape = 4;</code>
     */
    public java.util.List<java.lang.Integer>
        getTensorShapeList() {
      return tensorShape_;
    }
    /**
     * <pre>
     * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
     * model checkpoint.
     * </pre>
     *
     * <code>repeated uint32 tensor_shape = 4;</code>
     */
    public int getTensorShapeCount() {
      return tensorShape_.size();
    }
    /**
     * <pre>
     * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
     * model checkpoint.
     * </pre>
     *
     * <code>repeated uint32 tensor_shape = 4;</code>
     */
    public int getTensorShape(int index) {
      return tensorShape_.get(index);
    }
    private int tensorShapeMemoizedSerializedSize = -1;

    public static final int SPRITE_FIELD_NUMBER = 5;
    private tensorflow.ProjectorConfigOuterClass.SpriteMetadata sprite_;
    /**
     * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
     */
    public boolean hasSprite() {
      return sprite_ != null;
    }
    /**
     * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
     */
    public tensorflow.ProjectorConfigOuterClass.SpriteMetadata getSprite() {
      return sprite_ == null ? tensorflow.ProjectorConfigOuterClass.SpriteMetadata.getDefaultInstance() : sprite_;
    }
    /**
     * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
     */
    public tensorflow.ProjectorConfigOuterClass.SpriteMetadataOrBuilder getSpriteOrBuilder() {
      return getSprite();
    }

    public static final int TENSOR_PATH_FIELD_NUMBER = 6;
    private volatile java.lang.Object tensorPath_;
    /**
     * <pre>
     * Path to the TSV file holding the tensor values. If missing, the tensor
     * is assumed to be stored in the model checkpoint.
     * </pre>
     *
     * <code>string tensor_path = 6;</code>
     */
    public java.lang.String getTensorPath() {
      java.lang.Object ref = tensorPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        tensorPath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Path to the TSV file holding the tensor values. If missing, the tensor
     * is assumed to be stored in the model checkpoint.
     * </pre>
     *
     * <code>string tensor_path = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTensorPathBytes() {
      java.lang.Object ref = tensorPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tensorPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (!getTensorNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tensorName_);
      }
      if (!getMetadataPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, metadataPath_);
      }
      if (!getBookmarksPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, bookmarksPath_);
      }
      if (getTensorShapeList().size() > 0) {
        output.writeUInt32NoTag(34);
        output.writeUInt32NoTag(tensorShapeMemoizedSerializedSize);
      }
      for (int i = 0; i < tensorShape_.size(); i++) {
        output.writeUInt32NoTag(tensorShape_.get(i));
      }
      if (sprite_ != null) {
        output.writeMessage(5, getSprite());
      }
      if (!getTensorPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, tensorPath_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getTensorNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tensorName_);
      }
      if (!getMetadataPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, metadataPath_);
      }
      if (!getBookmarksPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, bookmarksPath_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tensorShape_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(tensorShape_.get(i));
        }
        size += dataSize;
        if (!getTensorShapeList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        tensorShapeMemoizedSerializedSize = dataSize;
      }
      if (sprite_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getSprite());
      }
      if (!getTensorPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, tensorPath_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.ProjectorConfigOuterClass.EmbeddingInfo)) {
        return super.equals(obj);
      }
      tensorflow.ProjectorConfigOuterClass.EmbeddingInfo other = (tensorflow.ProjectorConfigOuterClass.EmbeddingInfo) obj;

      boolean result = true;
      result = result && getTensorName()
          .equals(other.getTensorName());
      result = result && getMetadataPath()
          .equals(other.getMetadataPath());
      result = result && getBookmarksPath()
          .equals(other.getBookmarksPath());
      result = result && getTensorShapeList()
          .equals(other.getTensorShapeList());
      result = result && (hasSprite() == other.hasSprite());
      if (hasSprite()) {
        result = result && getSprite()
            .equals(other.getSprite());
      }
      result = result && getTensorPath()
          .equals(other.getTensorPath());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TENSOR_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getTensorName().hashCode();
      hash = (37 * hash) + METADATA_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getMetadataPath().hashCode();
      hash = (37 * hash) + BOOKMARKS_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getBookmarksPath().hashCode();
      if (getTensorShapeCount() > 0) {
        hash = (37 * hash) + TENSOR_SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getTensorShapeList().hashCode();
      }
      if (hasSprite()) {
        hash = (37 * hash) + SPRITE_FIELD_NUMBER;
        hash = (53 * hash) + getSprite().hashCode();
      }
      hash = (37 * hash) + TENSOR_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getTensorPath().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.ProjectorConfigOuterClass.EmbeddingInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.EmbeddingInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.EmbeddingInfo)
        tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_EmbeddingInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_EmbeddingInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.class, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder.class);
      }

      // Construct using tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        tensorName_ = "";

        metadataPath_ = "";

        bookmarksPath_ = "";

        tensorShape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        if (spriteBuilder_ == null) {
          sprite_ = null;
        } else {
          sprite_ = null;
          spriteBuilder_ = null;
        }
        tensorPath_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_EmbeddingInfo_descriptor;
      }

      public tensorflow.ProjectorConfigOuterClass.EmbeddingInfo getDefaultInstanceForType() {
        return tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.getDefaultInstance();
      }

      public tensorflow.ProjectorConfigOuterClass.EmbeddingInfo build() {
        tensorflow.ProjectorConfigOuterClass.EmbeddingInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.ProjectorConfigOuterClass.EmbeddingInfo buildPartial() {
        tensorflow.ProjectorConfigOuterClass.EmbeddingInfo result = new tensorflow.ProjectorConfigOuterClass.EmbeddingInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.tensorName_ = tensorName_;
        result.metadataPath_ = metadataPath_;
        result.bookmarksPath_ = bookmarksPath_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          tensorShape_ = java.util.Collections.unmodifiableList(tensorShape_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.tensorShape_ = tensorShape_;
        if (spriteBuilder_ == null) {
          result.sprite_ = sprite_;
        } else {
          result.sprite_ = spriteBuilder_.build();
        }
        result.tensorPath_ = tensorPath_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.ProjectorConfigOuterClass.EmbeddingInfo) {
          return mergeFrom((tensorflow.ProjectorConfigOuterClass.EmbeddingInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.ProjectorConfigOuterClass.EmbeddingInfo other) {
        if (other == tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.getDefaultInstance()) return this;
        if (!other.getTensorName().isEmpty()) {
          tensorName_ = other.tensorName_;
          onChanged();
        }
        if (!other.getMetadataPath().isEmpty()) {
          metadataPath_ = other.metadataPath_;
          onChanged();
        }
        if (!other.getBookmarksPath().isEmpty()) {
          bookmarksPath_ = other.bookmarksPath_;
          onChanged();
        }
        if (!other.tensorShape_.isEmpty()) {
          if (tensorShape_.isEmpty()) {
            tensorShape_ = other.tensorShape_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureTensorShapeIsMutable();
            tensorShape_.addAll(other.tensorShape_);
          }
          onChanged();
        }
        if (other.hasSprite()) {
          mergeSprite(other.getSprite());
        }
        if (!other.getTensorPath().isEmpty()) {
          tensorPath_ = other.tensorPath_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.ProjectorConfigOuterClass.EmbeddingInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.ProjectorConfigOuterClass.EmbeddingInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object tensorName_ = "";
      /**
       * <code>string tensor_name = 1;</code>
       */
      public java.lang.String getTensorName() {
        java.lang.Object ref = tensorName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tensorName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string tensor_name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTensorNameBytes() {
        java.lang.Object ref = tensorName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tensorName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string tensor_name = 1;</code>
       */
      public Builder setTensorName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tensorName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string tensor_name = 1;</code>
       */
      public Builder clearTensorName() {
        
        tensorName_ = getDefaultInstance().getTensorName();
        onChanged();
        return this;
      }
      /**
       * <code>string tensor_name = 1;</code>
       */
      public Builder setTensorNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tensorName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object metadataPath_ = "";
      /**
       * <code>string metadata_path = 2;</code>
       */
      public java.lang.String getMetadataPath() {
        java.lang.Object ref = metadataPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          metadataPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string metadata_path = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMetadataPathBytes() {
        java.lang.Object ref = metadataPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          metadataPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string metadata_path = 2;</code>
       */
      public Builder setMetadataPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        metadataPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string metadata_path = 2;</code>
       */
      public Builder clearMetadataPath() {
        
        metadataPath_ = getDefaultInstance().getMetadataPath();
        onChanged();
        return this;
      }
      /**
       * <code>string metadata_path = 2;</code>
       */
      public Builder setMetadataPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        metadataPath_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object bookmarksPath_ = "";
      /**
       * <code>string bookmarks_path = 3;</code>
       */
      public java.lang.String getBookmarksPath() {
        java.lang.Object ref = bookmarksPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          bookmarksPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string bookmarks_path = 3;</code>
       */
      public com.google.protobuf.ByteString
          getBookmarksPathBytes() {
        java.lang.Object ref = bookmarksPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          bookmarksPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string bookmarks_path = 3;</code>
       */
      public Builder setBookmarksPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        bookmarksPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string bookmarks_path = 3;</code>
       */
      public Builder clearBookmarksPath() {
        
        bookmarksPath_ = getDefaultInstance().getBookmarksPath();
        onChanged();
        return this;
      }
      /**
       * <code>string bookmarks_path = 3;</code>
       */
      public Builder setBookmarksPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        bookmarksPath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> tensorShape_ = java.util.Collections.emptyList();
      private void ensureTensorShapeIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          tensorShape_ = new java.util.ArrayList<java.lang.Integer>(tensorShape_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <pre>
       * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
       * model checkpoint.
       * </pre>
       *
       * <code>repeated uint32 tensor_shape = 4;</code>
       */
      public java.util.List<java.lang.Integer>
          getTensorShapeList() {
        return java.util.Collections.unmodifiableList(tensorShape_);
      }
      /**
       * <pre>
       * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
       * model checkpoint.
       * </pre>
       *
       * <code>repeated uint32 tensor_shape = 4;</code>
       */
      public int getTensorShapeCount() {
        return tensorShape_.size();
      }
      /**
       * <pre>
       * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
       * model checkpoint.
       * </pre>
       *
       * <code>repeated uint32 tensor_shape = 4;</code>
       */
      public int getTensorShape(int index) {
        return tensorShape_.get(index);
      }
      /**
       * <pre>
       * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
       * model checkpoint.
       * </pre>
       *
       * <code>repeated uint32 tensor_shape = 4;</code>
       */
      public Builder setTensorShape(
          int index, int value) {
        ensureTensorShapeIsMutable();
        tensorShape_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
       * model checkpoint.
       * </pre>
       *
       * <code>repeated uint32 tensor_shape = 4;</code>
       */
      public Builder addTensorShape(int value) {
        ensureTensorShapeIsMutable();
        tensorShape_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
       * model checkpoint.
       * </pre>
       *
       * <code>repeated uint32 tensor_shape = 4;</code>
       */
      public Builder addAllTensorShape(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTensorShapeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tensorShape_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Shape of the 2D tensor [N x D]. If missing, it will be inferred from the
       * model checkpoint.
       * </pre>
       *
       * <code>repeated uint32 tensor_shape = 4;</code>
       */
      public Builder clearTensorShape() {
        tensorShape_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private tensorflow.ProjectorConfigOuterClass.SpriteMetadata sprite_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.ProjectorConfigOuterClass.SpriteMetadata, tensorflow.ProjectorConfigOuterClass.SpriteMetadata.Builder, tensorflow.ProjectorConfigOuterClass.SpriteMetadataOrBuilder> spriteBuilder_;
      /**
       * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
       */
      public boolean hasSprite() {
        return spriteBuilder_ != null || sprite_ != null;
      }
      /**
       * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
       */
      public tensorflow.ProjectorConfigOuterClass.SpriteMetadata getSprite() {
        if (spriteBuilder_ == null) {
          return sprite_ == null ? tensorflow.ProjectorConfigOuterClass.SpriteMetadata.getDefaultInstance() : sprite_;
        } else {
          return spriteBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
       */
      public Builder setSprite(tensorflow.ProjectorConfigOuterClass.SpriteMetadata value) {
        if (spriteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          sprite_ = value;
          onChanged();
        } else {
          spriteBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
       */
      public Builder setSprite(
          tensorflow.ProjectorConfigOuterClass.SpriteMetadata.Builder builderForValue) {
        if (spriteBuilder_ == null) {
          sprite_ = builderForValue.build();
          onChanged();
        } else {
          spriteBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
       */
      public Builder mergeSprite(tensorflow.ProjectorConfigOuterClass.SpriteMetadata value) {
        if (spriteBuilder_ == null) {
          if (sprite_ != null) {
            sprite_ =
              tensorflow.ProjectorConfigOuterClass.SpriteMetadata.newBuilder(sprite_).mergeFrom(value).buildPartial();
          } else {
            sprite_ = value;
          }
          onChanged();
        } else {
          spriteBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
       */
      public Builder clearSprite() {
        if (spriteBuilder_ == null) {
          sprite_ = null;
          onChanged();
        } else {
          sprite_ = null;
          spriteBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
       */
      public tensorflow.ProjectorConfigOuterClass.SpriteMetadata.Builder getSpriteBuilder() {
        
        onChanged();
        return getSpriteFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
       */
      public tensorflow.ProjectorConfigOuterClass.SpriteMetadataOrBuilder getSpriteOrBuilder() {
        if (spriteBuilder_ != null) {
          return spriteBuilder_.getMessageOrBuilder();
        } else {
          return sprite_ == null ?
              tensorflow.ProjectorConfigOuterClass.SpriteMetadata.getDefaultInstance() : sprite_;
        }
      }
      /**
       * <code>.tensorflow.SpriteMetadata sprite = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.ProjectorConfigOuterClass.SpriteMetadata, tensorflow.ProjectorConfigOuterClass.SpriteMetadata.Builder, tensorflow.ProjectorConfigOuterClass.SpriteMetadataOrBuilder> 
          getSpriteFieldBuilder() {
        if (spriteBuilder_ == null) {
          spriteBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.ProjectorConfigOuterClass.SpriteMetadata, tensorflow.ProjectorConfigOuterClass.SpriteMetadata.Builder, tensorflow.ProjectorConfigOuterClass.SpriteMetadataOrBuilder>(
                  getSprite(),
                  getParentForChildren(),
                  isClean());
          sprite_ = null;
        }
        return spriteBuilder_;
      }

      private java.lang.Object tensorPath_ = "";
      /**
       * <pre>
       * Path to the TSV file holding the tensor values. If missing, the tensor
       * is assumed to be stored in the model checkpoint.
       * </pre>
       *
       * <code>string tensor_path = 6;</code>
       */
      public java.lang.String getTensorPath() {
        java.lang.Object ref = tensorPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          tensorPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Path to the TSV file holding the tensor values. If missing, the tensor
       * is assumed to be stored in the model checkpoint.
       * </pre>
       *
       * <code>string tensor_path = 6;</code>
       */
      public com.google.protobuf.ByteString
          getTensorPathBytes() {
        java.lang.Object ref = tensorPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tensorPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Path to the TSV file holding the tensor values. If missing, the tensor
       * is assumed to be stored in the model checkpoint.
       * </pre>
       *
       * <code>string tensor_path = 6;</code>
       */
      public Builder setTensorPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        tensorPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path to the TSV file holding the tensor values. If missing, the tensor
       * is assumed to be stored in the model checkpoint.
       * </pre>
       *
       * <code>string tensor_path = 6;</code>
       */
      public Builder clearTensorPath() {
        
        tensorPath_ = getDefaultInstance().getTensorPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path to the TSV file holding the tensor values. If missing, the tensor
       * is assumed to be stored in the model checkpoint.
       * </pre>
       *
       * <code>string tensor_path = 6;</code>
       */
      public Builder setTensorPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        tensorPath_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.EmbeddingInfo)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.EmbeddingInfo)
    private static final tensorflow.ProjectorConfigOuterClass.EmbeddingInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.ProjectorConfigOuterClass.EmbeddingInfo();
    }

    public static tensorflow.ProjectorConfigOuterClass.EmbeddingInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<EmbeddingInfo>
        PARSER = new com.google.protobuf.AbstractParser<EmbeddingInfo>() {
      public EmbeddingInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new EmbeddingInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<EmbeddingInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<EmbeddingInfo> getParserForType() {
      return PARSER;
    }

    public tensorflow.ProjectorConfigOuterClass.EmbeddingInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ProjectorConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.ProjectorConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Path to the checkpoint file. Use either this or model_checkpoint_dir.
     * </pre>
     *
     * <code>string model_checkpoint_path = 1;</code>
     */
    java.lang.String getModelCheckpointPath();
    /**
     * <pre>
     * Path to the checkpoint file. Use either this or model_checkpoint_dir.
     * </pre>
     *
     * <code>string model_checkpoint_path = 1;</code>
     */
    com.google.protobuf.ByteString
        getModelCheckpointPathBytes();

    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    java.util.List<tensorflow.ProjectorConfigOuterClass.EmbeddingInfo> 
        getEmbeddingsList();
    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    tensorflow.ProjectorConfigOuterClass.EmbeddingInfo getEmbeddings(int index);
    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    int getEmbeddingsCount();
    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    java.util.List<? extends tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder> 
        getEmbeddingsOrBuilderList();
    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder getEmbeddingsOrBuilder(
        int index);

    /**
     * <pre>
     * Path to the checkpoint directory. The directory will be scanned for the
     * latest checkpoint file.
     * </pre>
     *
     * <code>string model_checkpoint_dir = 3;</code>
     */
    java.lang.String getModelCheckpointDir();
    /**
     * <pre>
     * Path to the checkpoint directory. The directory will be scanned for the
     * latest checkpoint file.
     * </pre>
     *
     * <code>string model_checkpoint_dir = 3;</code>
     */
    com.google.protobuf.ByteString
        getModelCheckpointDirBytes();
  }
  /**
   * Protobuf type {@code tensorflow.ProjectorConfig}
   */
  public  static final class ProjectorConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.ProjectorConfig)
      ProjectorConfigOrBuilder {
    // Use ProjectorConfig.newBuilder() to construct.
    private ProjectorConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProjectorConfig() {
      modelCheckpointPath_ = "";
      embeddings_ = java.util.Collections.emptyList();
      modelCheckpointDir_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ProjectorConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              modelCheckpointPath_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                embeddings_ = new java.util.ArrayList<tensorflow.ProjectorConfigOuterClass.EmbeddingInfo>();
                mutable_bitField0_ |= 0x00000002;
              }
              embeddings_.add(
                  input.readMessage(tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.parser(), extensionRegistry));
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              modelCheckpointDir_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          embeddings_ = java.util.Collections.unmodifiableList(embeddings_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_ProjectorConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_ProjectorConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.ProjectorConfigOuterClass.ProjectorConfig.class, tensorflow.ProjectorConfigOuterClass.ProjectorConfig.Builder.class);
    }

    private int bitField0_;
    public static final int MODEL_CHECKPOINT_PATH_FIELD_NUMBER = 1;
    private volatile java.lang.Object modelCheckpointPath_;
    /**
     * <pre>
     * Path to the checkpoint file. Use either this or model_checkpoint_dir.
     * </pre>
     *
     * <code>string model_checkpoint_path = 1;</code>
     */
    public java.lang.String getModelCheckpointPath() {
      java.lang.Object ref = modelCheckpointPath_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelCheckpointPath_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Path to the checkpoint file. Use either this or model_checkpoint_dir.
     * </pre>
     *
     * <code>string model_checkpoint_path = 1;</code>
     */
    public com.google.protobuf.ByteString
        getModelCheckpointPathBytes() {
      java.lang.Object ref = modelCheckpointPath_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelCheckpointPath_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EMBEDDINGS_FIELD_NUMBER = 2;
    private java.util.List<tensorflow.ProjectorConfigOuterClass.EmbeddingInfo> embeddings_;
    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    public java.util.List<tensorflow.ProjectorConfigOuterClass.EmbeddingInfo> getEmbeddingsList() {
      return embeddings_;
    }
    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    public java.util.List<? extends tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder> 
        getEmbeddingsOrBuilderList() {
      return embeddings_;
    }
    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    public int getEmbeddingsCount() {
      return embeddings_.size();
    }
    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    public tensorflow.ProjectorConfigOuterClass.EmbeddingInfo getEmbeddings(int index) {
      return embeddings_.get(index);
    }
    /**
     * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
     */
    public tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder getEmbeddingsOrBuilder(
        int index) {
      return embeddings_.get(index);
    }

    public static final int MODEL_CHECKPOINT_DIR_FIELD_NUMBER = 3;
    private volatile java.lang.Object modelCheckpointDir_;
    /**
     * <pre>
     * Path to the checkpoint directory. The directory will be scanned for the
     * latest checkpoint file.
     * </pre>
     *
     * <code>string model_checkpoint_dir = 3;</code>
     */
    public java.lang.String getModelCheckpointDir() {
      java.lang.Object ref = modelCheckpointDir_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        modelCheckpointDir_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Path to the checkpoint directory. The directory will be scanned for the
     * latest checkpoint file.
     * </pre>
     *
     * <code>string model_checkpoint_dir = 3;</code>
     */
    public com.google.protobuf.ByteString
        getModelCheckpointDirBytes() {
      java.lang.Object ref = modelCheckpointDir_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        modelCheckpointDir_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getModelCheckpointPathBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, modelCheckpointPath_);
      }
      for (int i = 0; i < embeddings_.size(); i++) {
        output.writeMessage(2, embeddings_.get(i));
      }
      if (!getModelCheckpointDirBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, modelCheckpointDir_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getModelCheckpointPathBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, modelCheckpointPath_);
      }
      for (int i = 0; i < embeddings_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, embeddings_.get(i));
      }
      if (!getModelCheckpointDirBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, modelCheckpointDir_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.ProjectorConfigOuterClass.ProjectorConfig)) {
        return super.equals(obj);
      }
      tensorflow.ProjectorConfigOuterClass.ProjectorConfig other = (tensorflow.ProjectorConfigOuterClass.ProjectorConfig) obj;

      boolean result = true;
      result = result && getModelCheckpointPath()
          .equals(other.getModelCheckpointPath());
      result = result && getEmbeddingsList()
          .equals(other.getEmbeddingsList());
      result = result && getModelCheckpointDir()
          .equals(other.getModelCheckpointDir());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODEL_CHECKPOINT_PATH_FIELD_NUMBER;
      hash = (53 * hash) + getModelCheckpointPath().hashCode();
      if (getEmbeddingsCount() > 0) {
        hash = (37 * hash) + EMBEDDINGS_FIELD_NUMBER;
        hash = (53 * hash) + getEmbeddingsList().hashCode();
      }
      hash = (37 * hash) + MODEL_CHECKPOINT_DIR_FIELD_NUMBER;
      hash = (53 * hash) + getModelCheckpointDir().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.ProjectorConfigOuterClass.ProjectorConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.ProjectorConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.ProjectorConfig)
        tensorflow.ProjectorConfigOuterClass.ProjectorConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_ProjectorConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_ProjectorConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.ProjectorConfigOuterClass.ProjectorConfig.class, tensorflow.ProjectorConfigOuterClass.ProjectorConfig.Builder.class);
      }

      // Construct using tensorflow.ProjectorConfigOuterClass.ProjectorConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEmbeddingsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        modelCheckpointPath_ = "";

        if (embeddingsBuilder_ == null) {
          embeddings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          embeddingsBuilder_.clear();
        }
        modelCheckpointDir_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.ProjectorConfigOuterClass.internal_static_tensorflow_ProjectorConfig_descriptor;
      }

      public tensorflow.ProjectorConfigOuterClass.ProjectorConfig getDefaultInstanceForType() {
        return tensorflow.ProjectorConfigOuterClass.ProjectorConfig.getDefaultInstance();
      }

      public tensorflow.ProjectorConfigOuterClass.ProjectorConfig build() {
        tensorflow.ProjectorConfigOuterClass.ProjectorConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.ProjectorConfigOuterClass.ProjectorConfig buildPartial() {
        tensorflow.ProjectorConfigOuterClass.ProjectorConfig result = new tensorflow.ProjectorConfigOuterClass.ProjectorConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.modelCheckpointPath_ = modelCheckpointPath_;
        if (embeddingsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            embeddings_ = java.util.Collections.unmodifiableList(embeddings_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.embeddings_ = embeddings_;
        } else {
          result.embeddings_ = embeddingsBuilder_.build();
        }
        result.modelCheckpointDir_ = modelCheckpointDir_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.ProjectorConfigOuterClass.ProjectorConfig) {
          return mergeFrom((tensorflow.ProjectorConfigOuterClass.ProjectorConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.ProjectorConfigOuterClass.ProjectorConfig other) {
        if (other == tensorflow.ProjectorConfigOuterClass.ProjectorConfig.getDefaultInstance()) return this;
        if (!other.getModelCheckpointPath().isEmpty()) {
          modelCheckpointPath_ = other.modelCheckpointPath_;
          onChanged();
        }
        if (embeddingsBuilder_ == null) {
          if (!other.embeddings_.isEmpty()) {
            if (embeddings_.isEmpty()) {
              embeddings_ = other.embeddings_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEmbeddingsIsMutable();
              embeddings_.addAll(other.embeddings_);
            }
            onChanged();
          }
        } else {
          if (!other.embeddings_.isEmpty()) {
            if (embeddingsBuilder_.isEmpty()) {
              embeddingsBuilder_.dispose();
              embeddingsBuilder_ = null;
              embeddings_ = other.embeddings_;
              bitField0_ = (bitField0_ & ~0x00000002);
              embeddingsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEmbeddingsFieldBuilder() : null;
            } else {
              embeddingsBuilder_.addAllMessages(other.embeddings_);
            }
          }
        }
        if (!other.getModelCheckpointDir().isEmpty()) {
          modelCheckpointDir_ = other.modelCheckpointDir_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.ProjectorConfigOuterClass.ProjectorConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.ProjectorConfigOuterClass.ProjectorConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object modelCheckpointPath_ = "";
      /**
       * <pre>
       * Path to the checkpoint file. Use either this or model_checkpoint_dir.
       * </pre>
       *
       * <code>string model_checkpoint_path = 1;</code>
       */
      public java.lang.String getModelCheckpointPath() {
        java.lang.Object ref = modelCheckpointPath_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modelCheckpointPath_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Path to the checkpoint file. Use either this or model_checkpoint_dir.
       * </pre>
       *
       * <code>string model_checkpoint_path = 1;</code>
       */
      public com.google.protobuf.ByteString
          getModelCheckpointPathBytes() {
        java.lang.Object ref = modelCheckpointPath_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelCheckpointPath_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Path to the checkpoint file. Use either this or model_checkpoint_dir.
       * </pre>
       *
       * <code>string model_checkpoint_path = 1;</code>
       */
      public Builder setModelCheckpointPath(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modelCheckpointPath_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path to the checkpoint file. Use either this or model_checkpoint_dir.
       * </pre>
       *
       * <code>string model_checkpoint_path = 1;</code>
       */
      public Builder clearModelCheckpointPath() {
        
        modelCheckpointPath_ = getDefaultInstance().getModelCheckpointPath();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path to the checkpoint file. Use either this or model_checkpoint_dir.
       * </pre>
       *
       * <code>string model_checkpoint_path = 1;</code>
       */
      public Builder setModelCheckpointPathBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modelCheckpointPath_ = value;
        onChanged();
        return this;
      }

      private java.util.List<tensorflow.ProjectorConfigOuterClass.EmbeddingInfo> embeddings_ =
        java.util.Collections.emptyList();
      private void ensureEmbeddingsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          embeddings_ = new java.util.ArrayList<tensorflow.ProjectorConfigOuterClass.EmbeddingInfo>(embeddings_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.ProjectorConfigOuterClass.EmbeddingInfo, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder, tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder> embeddingsBuilder_;

      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public java.util.List<tensorflow.ProjectorConfigOuterClass.EmbeddingInfo> getEmbeddingsList() {
        if (embeddingsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(embeddings_);
        } else {
          return embeddingsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public int getEmbeddingsCount() {
        if (embeddingsBuilder_ == null) {
          return embeddings_.size();
        } else {
          return embeddingsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public tensorflow.ProjectorConfigOuterClass.EmbeddingInfo getEmbeddings(int index) {
        if (embeddingsBuilder_ == null) {
          return embeddings_.get(index);
        } else {
          return embeddingsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public Builder setEmbeddings(
          int index, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo value) {
        if (embeddingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEmbeddingsIsMutable();
          embeddings_.set(index, value);
          onChanged();
        } else {
          embeddingsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public Builder setEmbeddings(
          int index, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder builderForValue) {
        if (embeddingsBuilder_ == null) {
          ensureEmbeddingsIsMutable();
          embeddings_.set(index, builderForValue.build());
          onChanged();
        } else {
          embeddingsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public Builder addEmbeddings(tensorflow.ProjectorConfigOuterClass.EmbeddingInfo value) {
        if (embeddingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEmbeddingsIsMutable();
          embeddings_.add(value);
          onChanged();
        } else {
          embeddingsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public Builder addEmbeddings(
          int index, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo value) {
        if (embeddingsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEmbeddingsIsMutable();
          embeddings_.add(index, value);
          onChanged();
        } else {
          embeddingsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public Builder addEmbeddings(
          tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder builderForValue) {
        if (embeddingsBuilder_ == null) {
          ensureEmbeddingsIsMutable();
          embeddings_.add(builderForValue.build());
          onChanged();
        } else {
          embeddingsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public Builder addEmbeddings(
          int index, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder builderForValue) {
        if (embeddingsBuilder_ == null) {
          ensureEmbeddingsIsMutable();
          embeddings_.add(index, builderForValue.build());
          onChanged();
        } else {
          embeddingsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public Builder addAllEmbeddings(
          java.lang.Iterable<? extends tensorflow.ProjectorConfigOuterClass.EmbeddingInfo> values) {
        if (embeddingsBuilder_ == null) {
          ensureEmbeddingsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, embeddings_);
          onChanged();
        } else {
          embeddingsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public Builder clearEmbeddings() {
        if (embeddingsBuilder_ == null) {
          embeddings_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          embeddingsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public Builder removeEmbeddings(int index) {
        if (embeddingsBuilder_ == null) {
          ensureEmbeddingsIsMutable();
          embeddings_.remove(index);
          onChanged();
        } else {
          embeddingsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder getEmbeddingsBuilder(
          int index) {
        return getEmbeddingsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder getEmbeddingsOrBuilder(
          int index) {
        if (embeddingsBuilder_ == null) {
          return embeddings_.get(index);  } else {
          return embeddingsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public java.util.List<? extends tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder> 
           getEmbeddingsOrBuilderList() {
        if (embeddingsBuilder_ != null) {
          return embeddingsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(embeddings_);
        }
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder addEmbeddingsBuilder() {
        return getEmbeddingsFieldBuilder().addBuilder(
            tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder addEmbeddingsBuilder(
          int index) {
        return getEmbeddingsFieldBuilder().addBuilder(
            index, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.EmbeddingInfo embeddings = 2;</code>
       */
      public java.util.List<tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder> 
           getEmbeddingsBuilderList() {
        return getEmbeddingsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.ProjectorConfigOuterClass.EmbeddingInfo, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder, tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder> 
          getEmbeddingsFieldBuilder() {
        if (embeddingsBuilder_ == null) {
          embeddingsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.ProjectorConfigOuterClass.EmbeddingInfo, tensorflow.ProjectorConfigOuterClass.EmbeddingInfo.Builder, tensorflow.ProjectorConfigOuterClass.EmbeddingInfoOrBuilder>(
                  embeddings_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          embeddings_ = null;
        }
        return embeddingsBuilder_;
      }

      private java.lang.Object modelCheckpointDir_ = "";
      /**
       * <pre>
       * Path to the checkpoint directory. The directory will be scanned for the
       * latest checkpoint file.
       * </pre>
       *
       * <code>string model_checkpoint_dir = 3;</code>
       */
      public java.lang.String getModelCheckpointDir() {
        java.lang.Object ref = modelCheckpointDir_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          modelCheckpointDir_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Path to the checkpoint directory. The directory will be scanned for the
       * latest checkpoint file.
       * </pre>
       *
       * <code>string model_checkpoint_dir = 3;</code>
       */
      public com.google.protobuf.ByteString
          getModelCheckpointDirBytes() {
        java.lang.Object ref = modelCheckpointDir_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          modelCheckpointDir_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Path to the checkpoint directory. The directory will be scanned for the
       * latest checkpoint file.
       * </pre>
       *
       * <code>string model_checkpoint_dir = 3;</code>
       */
      public Builder setModelCheckpointDir(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        modelCheckpointDir_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path to the checkpoint directory. The directory will be scanned for the
       * latest checkpoint file.
       * </pre>
       *
       * <code>string model_checkpoint_dir = 3;</code>
       */
      public Builder clearModelCheckpointDir() {
        
        modelCheckpointDir_ = getDefaultInstance().getModelCheckpointDir();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Path to the checkpoint directory. The directory will be scanned for the
       * latest checkpoint file.
       * </pre>
       *
       * <code>string model_checkpoint_dir = 3;</code>
       */
      public Builder setModelCheckpointDirBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        modelCheckpointDir_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.ProjectorConfig)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.ProjectorConfig)
    private static final tensorflow.ProjectorConfigOuterClass.ProjectorConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.ProjectorConfigOuterClass.ProjectorConfig();
    }

    public static tensorflow.ProjectorConfigOuterClass.ProjectorConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ProjectorConfig>
        PARSER = new com.google.protobuf.AbstractParser<ProjectorConfig>() {
      public ProjectorConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ProjectorConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProjectorConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProjectorConfig> getParserForType() {
      return PARSER;
    }

    public tensorflow.ProjectorConfigOuterClass.ProjectorConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_SpriteMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_SpriteMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_EmbeddingInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_EmbeddingInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_ProjectorConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_ProjectorConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nGtensorflow/contrib/tensorboard/plugins" +
      "/projector/projector_config.proto\022\ntenso" +
      "rflow\">\n\016SpriteMetadata\022\022\n\nimage_path\030\001 " +
      "\001(\t\022\030\n\020single_image_dim\030\002 \003(\r\"\252\001\n\rEmbedd" +
      "ingInfo\022\023\n\013tensor_name\030\001 \001(\t\022\025\n\rmetadata" +
      "_path\030\002 \001(\t\022\026\n\016bookmarks_path\030\003 \001(\t\022\024\n\014t" +
      "ensor_shape\030\004 \003(\r\022*\n\006sprite\030\005 \001(\0132\032.tens" +
      "orflow.SpriteMetadata\022\023\n\013tensor_path\030\006 \001" +
      "(\t\"}\n\017ProjectorConfig\022\035\n\025model_checkpoin" +
      "t_path\030\001 \001(\t\022-\n\nembeddings\030\002 \003(\0132\031.tenso",
      "rflow.EmbeddingInfo\022\034\n\024model_checkpoint_" +
      "dir\030\003 \001(\tb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_tensorflow_SpriteMetadata_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_SpriteMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_SpriteMetadata_descriptor,
        new java.lang.String[] { "ImagePath", "SingleImageDim", });
    internal_static_tensorflow_EmbeddingInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_EmbeddingInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_EmbeddingInfo_descriptor,
        new java.lang.String[] { "TensorName", "MetadataPath", "BookmarksPath", "TensorShape", "Sprite", "TensorPath", });
    internal_static_tensorflow_ProjectorConfig_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_ProjectorConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_ProjectorConfig_descriptor,
        new java.lang.String[] { "ModelCheckpointPath", "Embeddings", "ModelCheckpointDir", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
