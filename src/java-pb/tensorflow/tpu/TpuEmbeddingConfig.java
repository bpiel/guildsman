// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/contrib/tpu/proto/tpu_embedding_config.proto

package tensorflow.tpu;

public final class TpuEmbeddingConfig {
  private TpuEmbeddingConfig() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TPUEmbeddingConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tpu.TPUEmbeddingConfiguration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;</code>
     */
    int getModelModeValue();
    /**
     * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;</code>
     */
    tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode getModelMode();

    /**
     * <pre>
     * num_hosts is the number of host CPU systems in the training/inference job.
     * Each embedding table must be sharded into num_hosts separate Variables,
     * placed separately on the num_hosts CPU devices in the cluster. Sharding
     * will be performed equivalently to the 'div' sharding_strategy option of
     * embedding_lookup() and embedding_lookup_sparse().
     * </pre>
     *
     * <code>int32 num_hosts = 2;</code>
     */
    int getNumHosts();

    /**
     * <pre>
     * The total number of TensorNodes. This is equal to num_hosts times the
     * number of TensorNodes attached to each host.
     * </pre>
     *
     * <code>int32 num_tensornodes = 3;</code>
     */
    int getNumTensornodes();

    /**
     * <pre>
     * The number of training examples per TensorNode.
     * </pre>
     *
     * <code>int32 batch_size = 4;</code>
     */
    int getBatchSize();

    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    java.util.List<tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable> 
        getTableConfigList();
    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable getTableConfig(int index);
    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    int getTableConfigCount();
    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    java.util.List<? extends tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder> 
        getTableConfigOrBuilderList();
    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder getTableConfigOrBuilder(
        int index);
  }
  /**
   * <pre>
   * The TPUEmbeddingConfiguration contains specification of TPU Embedding lookups
   * and gradient updates separate from the TF Graph.
   * </pre>
   *
   * Protobuf type {@code tensorflow.tpu.TPUEmbeddingConfiguration}
   */
  public  static final class TPUEmbeddingConfiguration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tpu.TPUEmbeddingConfiguration)
      TPUEmbeddingConfigurationOrBuilder {
    // Use TPUEmbeddingConfiguration.newBuilder() to construct.
    private TPUEmbeddingConfiguration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TPUEmbeddingConfiguration() {
      modelMode_ = 0;
      numHosts_ = 0;
      numTensornodes_ = 0;
      batchSize_ = 0;
      tableConfig_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TPUEmbeddingConfiguration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              modelMode_ = rawValue;
              break;
            }
            case 16: {

              numHosts_ = input.readInt32();
              break;
            }
            case 24: {

              numTensornodes_ = input.readInt32();
              break;
            }
            case 32: {

              batchSize_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                tableConfig_ = new java.util.ArrayList<tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable>();
                mutable_bitField0_ |= 0x00000010;
              }
              tableConfig_.add(
                  input.readMessage(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          tableConfig_ = java.util.Collections.unmodifiableList(tableConfig_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.class, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.Builder.class);
    }

    /**
     * <pre>
     * model_mode specifies whether the model is to be run in training or
     * inference. In inference mode, gradient updates to embedding tables are not
     * performed.
     * </pre>
     *
     * Protobuf enum {@code tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode}
     */
    public enum ModelMode
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INVALID = 0;</code>
       */
      INVALID(0),
      /**
       * <code>TRAINING = 1;</code>
       */
      TRAINING(1),
      /**
       * <code>INFERENCE = 2;</code>
       */
      INFERENCE(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>INVALID = 0;</code>
       */
      public static final int INVALID_VALUE = 0;
      /**
       * <code>TRAINING = 1;</code>
       */
      public static final int TRAINING_VALUE = 1;
      /**
       * <code>INFERENCE = 2;</code>
       */
      public static final int INFERENCE_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ModelMode valueOf(int value) {
        return forNumber(value);
      }

      public static ModelMode forNumber(int value) {
        switch (value) {
          case 0: return INVALID;
          case 1: return TRAINING;
          case 2: return INFERENCE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ModelMode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ModelMode> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ModelMode>() {
              public ModelMode findValueByNumber(int number) {
                return ModelMode.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.getDescriptor().getEnumTypes().get(0);
      }

      private static final ModelMode[] VALUES = values();

      public static ModelMode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ModelMode(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode)
    }

    public interface GradientDescentOptimizerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>float learning_rate = 1;</code>
       */
      float getLearningRate();
    }
    /**
     * Protobuf type {@code tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer}
     */
    public  static final class GradientDescentOptimizer extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
        GradientDescentOptimizerOrBuilder {
      // Use GradientDescentOptimizer.newBuilder() to construct.
      private GradientDescentOptimizer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GradientDescentOptimizer() {
        learningRate_ = 0F;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private GradientDescentOptimizer(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 13: {

                learningRate_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.class, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.Builder.class);
      }

      public static final int LEARNING_RATE_FIELD_NUMBER = 1;
      private float learningRate_;
      /**
       * <code>float learning_rate = 1;</code>
       */
      public float getLearningRate() {
        return learningRate_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (learningRate_ != 0F) {
          output.writeFloat(1, learningRate_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (learningRate_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, learningRate_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer)) {
          return super.equals(obj);
        }
        tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer other = (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) obj;

        boolean result = true;
        result = result && (
            java.lang.Float.floatToIntBits(getLearningRate())
            == java.lang.Float.floatToIntBits(
                other.getLearningRate()));
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + LEARNING_RATE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLearningRate());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.class, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.Builder.class);
        }

        // Construct using tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          learningRate_ = 0F;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_descriptor;
        }

        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer getDefaultInstanceForType() {
          return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.getDefaultInstance();
        }

        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer build() {
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer buildPartial() {
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer result = new tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer(this);
          result.learningRate_ = learningRate_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) {
            return mergeFrom((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer other) {
          if (other == tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.getDefaultInstance()) return this;
          if (other.getLearningRate() != 0F) {
            setLearningRate(other.getLearningRate());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private float learningRate_ ;
        /**
         * <code>float learning_rate = 1;</code>
         */
        public float getLearningRate() {
          return learningRate_;
        }
        /**
         * <code>float learning_rate = 1;</code>
         */
        public Builder setLearningRate(float value) {
          
          learningRate_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float learning_rate = 1;</code>
         */
        public Builder clearLearningRate() {
          
          learningRate_ = 0F;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer)
      private static final tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer();
      }

      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<GradientDescentOptimizer>
          PARSER = new com.google.protobuf.AbstractParser<GradientDescentOptimizer>() {
        public GradientDescentOptimizer parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new GradientDescentOptimizer(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<GradientDescentOptimizer> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GradientDescentOptimizer> getParserForType() {
        return PARSER;
      }

      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface AdagradOptimizerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>float learning_rate = 1;</code>
       */
      float getLearningRate();

      /**
       * <code>float initial_accumulator = 2;</code>
       */
      float getInitialAccumulator();
    }
    /**
     * Protobuf type {@code tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer}
     */
    public  static final class AdagradOptimizer extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
        AdagradOptimizerOrBuilder {
      // Use AdagradOptimizer.newBuilder() to construct.
      private AdagradOptimizer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private AdagradOptimizer() {
        learningRate_ = 0F;
        initialAccumulator_ = 0F;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private AdagradOptimizer(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 13: {

                learningRate_ = input.readFloat();
                break;
              }
              case 21: {

                initialAccumulator_ = input.readFloat();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.class, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.Builder.class);
      }

      public static final int LEARNING_RATE_FIELD_NUMBER = 1;
      private float learningRate_;
      /**
       * <code>float learning_rate = 1;</code>
       */
      public float getLearningRate() {
        return learningRate_;
      }

      public static final int INITIAL_ACCUMULATOR_FIELD_NUMBER = 2;
      private float initialAccumulator_;
      /**
       * <code>float initial_accumulator = 2;</code>
       */
      public float getInitialAccumulator() {
        return initialAccumulator_;
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (learningRate_ != 0F) {
          output.writeFloat(1, learningRate_);
        }
        if (initialAccumulator_ != 0F) {
          output.writeFloat(2, initialAccumulator_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (learningRate_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(1, learningRate_);
        }
        if (initialAccumulator_ != 0F) {
          size += com.google.protobuf.CodedOutputStream
            .computeFloatSize(2, initialAccumulator_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer)) {
          return super.equals(obj);
        }
        tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer other = (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) obj;

        boolean result = true;
        result = result && (
            java.lang.Float.floatToIntBits(getLearningRate())
            == java.lang.Float.floatToIntBits(
                other.getLearningRate()));
        result = result && (
            java.lang.Float.floatToIntBits(getInitialAccumulator())
            == java.lang.Float.floatToIntBits(
                other.getInitialAccumulator()));
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + LEARNING_RATE_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getLearningRate());
        hash = (37 * hash) + INITIAL_ACCUMULATOR_FIELD_NUMBER;
        hash = (53 * hash) + java.lang.Float.floatToIntBits(
            getInitialAccumulator());
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.class, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.Builder.class);
        }

        // Construct using tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          learningRate_ = 0F;

          initialAccumulator_ = 0F;

          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_descriptor;
        }

        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer getDefaultInstanceForType() {
          return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.getDefaultInstance();
        }

        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer build() {
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer buildPartial() {
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer result = new tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer(this);
          result.learningRate_ = learningRate_;
          result.initialAccumulator_ = initialAccumulator_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) {
            return mergeFrom((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer other) {
          if (other == tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.getDefaultInstance()) return this;
          if (other.getLearningRate() != 0F) {
            setLearningRate(other.getLearningRate());
          }
          if (other.getInitialAccumulator() != 0F) {
            setInitialAccumulator(other.getInitialAccumulator());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private float learningRate_ ;
        /**
         * <code>float learning_rate = 1;</code>
         */
        public float getLearningRate() {
          return learningRate_;
        }
        /**
         * <code>float learning_rate = 1;</code>
         */
        public Builder setLearningRate(float value) {
          
          learningRate_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float learning_rate = 1;</code>
         */
        public Builder clearLearningRate() {
          
          learningRate_ = 0F;
          onChanged();
          return this;
        }

        private float initialAccumulator_ ;
        /**
         * <code>float initial_accumulator = 2;</code>
         */
        public float getInitialAccumulator() {
          return initialAccumulator_;
        }
        /**
         * <code>float initial_accumulator = 2;</code>
         */
        public Builder setInitialAccumulator(float value) {
          
          initialAccumulator_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>float initial_accumulator = 2;</code>
         */
        public Builder clearInitialAccumulator() {
          
          initialAccumulator_ = 0F;
          onChanged();
          return this;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer)
      private static final tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer();
      }

      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<AdagradOptimizer>
          PARSER = new com.google.protobuf.AbstractParser<AdagradOptimizer>() {
        public AdagradOptimizer parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new AdagradOptimizer(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<AdagradOptimizer> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<AdagradOptimizer> getParserForType() {
        return PARSER;
      }

      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface TPUEmbeddingTableOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Name of the embedding table. This will be used to name Variables in the
       * Tensorflow Graph.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      java.lang.String getName();
      /**
       * <pre>
       * Name of the embedding table. This will be used to name Variables in the
       * Tensorflow Graph.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      com.google.protobuf.ByteString
          getNameBytes();

      /**
       * <pre>
       * Number of rows of the embedding table. The Variable created to hold the
       * learned embedding table values will have shape (num_rows, width).
       * </pre>
       *
       * <code>int32 num_rows = 3;</code>
       */
      int getNumRows();

      /**
       * <pre>
       * Width of the embedding table. The Variable created to hold the
       * learned embedding table values will have shape (num_rows, width).
       * </pre>
       *
       * <code>int32 width = 4;</code>
       */
      int getWidth();

      /**
       * <pre>
       * Number of distinct embedding activation vectors per training example
       * produced by lookups into this table during model evaluation. For each
       * table, the Graph will receive an activations Tensor of shape
       *   (batch_size * table.num_features, table.width).
       * For example, num_features = 1 produces equivalent behavior to a single
       * tf.nn.embedding_lookup() call. In the case of 'multivalent' embeddings,
       * (i.e. tf.nn.embedding_lookup_sparse()) which compute weighted averages of
       * embedding table rows, num_features is the number of vectors produced
       * after averaging. In sequence models num_features is typically equal
       * to the sequence length, since each sequence element must be represented
       * separately to the convolutional or recurrent network.
       * </pre>
       *
       * <code>int32 num_features = 5;</code>
       */
      int getNumFeatures();

      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
       */
      tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer getGradientDescent();
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
       */
      tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizerOrBuilder getGradientDescentOrBuilder();

      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
       */
      tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer getAdagrad();
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
       */
      tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizerOrBuilder getAdagradOrBuilder();

      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.OptimizerCase getOptimizerCase();
    }
    /**
     * <pre>
     * Each Embedding
     * </pre>
     *
     * Protobuf type {@code tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable}
     */
    public  static final class TPUEmbeddingTable extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
        TPUEmbeddingTableOrBuilder {
      // Use TPUEmbeddingTable.newBuilder() to construct.
      private TPUEmbeddingTable(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private TPUEmbeddingTable() {
        name_ = "";
        numRows_ = 0;
        width_ = 0;
        numFeatures_ = 0;
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private TPUEmbeddingTable(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                java.lang.String s = input.readStringRequireUtf8();

                name_ = s;
                break;
              }
              case 24: {

                numRows_ = input.readInt32();
                break;
              }
              case 32: {

                width_ = input.readInt32();
                break;
              }
              case 40: {

                numFeatures_ = input.readInt32();
                break;
              }
              case 50: {
                tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.Builder subBuilder = null;
                if (optimizerCase_ == 6) {
                  subBuilder = ((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_).toBuilder();
                }
                optimizer_ =
                    input.readMessage(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_);
                  optimizer_ = subBuilder.buildPartial();
                }
                optimizerCase_ = 6;
                break;
              }
              case 58: {
                tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.Builder subBuilder = null;
                if (optimizerCase_ == 7) {
                  subBuilder = ((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_).toBuilder();
                }
                optimizer_ =
                    input.readMessage(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_);
                  optimizer_ = subBuilder.buildPartial();
                }
                optimizerCase_ = 7;
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.class, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder.class);
      }

      private int optimizerCase_ = 0;
      private java.lang.Object optimizer_;
      public enum OptimizerCase
          implements com.google.protobuf.Internal.EnumLite {
        GRADIENT_DESCENT(6),
        ADAGRAD(7),
        OPTIMIZER_NOT_SET(0);
        private final int value;
        private OptimizerCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static OptimizerCase valueOf(int value) {
          return forNumber(value);
        }

        public static OptimizerCase forNumber(int value) {
          switch (value) {
            case 6: return GRADIENT_DESCENT;
            case 7: return ADAGRAD;
            case 0: return OPTIMIZER_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public OptimizerCase
      getOptimizerCase() {
        return OptimizerCase.forNumber(
            optimizerCase_);
      }

      public static final int NAME_FIELD_NUMBER = 1;
      private volatile java.lang.Object name_;
      /**
       * <pre>
       * Name of the embedding table. This will be used to name Variables in the
       * Tensorflow Graph.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        }
      }
      /**
       * <pre>
       * Name of the embedding table. This will be used to name Variables in the
       * Tensorflow Graph.
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int NUM_ROWS_FIELD_NUMBER = 3;
      private int numRows_;
      /**
       * <pre>
       * Number of rows of the embedding table. The Variable created to hold the
       * learned embedding table values will have shape (num_rows, width).
       * </pre>
       *
       * <code>int32 num_rows = 3;</code>
       */
      public int getNumRows() {
        return numRows_;
      }

      public static final int WIDTH_FIELD_NUMBER = 4;
      private int width_;
      /**
       * <pre>
       * Width of the embedding table. The Variable created to hold the
       * learned embedding table values will have shape (num_rows, width).
       * </pre>
       *
       * <code>int32 width = 4;</code>
       */
      public int getWidth() {
        return width_;
      }

      public static final int NUM_FEATURES_FIELD_NUMBER = 5;
      private int numFeatures_;
      /**
       * <pre>
       * Number of distinct embedding activation vectors per training example
       * produced by lookups into this table during model evaluation. For each
       * table, the Graph will receive an activations Tensor of shape
       *   (batch_size * table.num_features, table.width).
       * For example, num_features = 1 produces equivalent behavior to a single
       * tf.nn.embedding_lookup() call. In the case of 'multivalent' embeddings,
       * (i.e. tf.nn.embedding_lookup_sparse()) which compute weighted averages of
       * embedding table rows, num_features is the number of vectors produced
       * after averaging. In sequence models num_features is typically equal
       * to the sequence length, since each sequence element must be represented
       * separately to the convolutional or recurrent network.
       * </pre>
       *
       * <code>int32 num_features = 5;</code>
       */
      public int getNumFeatures() {
        return numFeatures_;
      }

      public static final int GRADIENT_DESCENT_FIELD_NUMBER = 6;
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer getGradientDescent() {
        if (optimizerCase_ == 6) {
           return (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_;
        }
        return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.getDefaultInstance();
      }
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizerOrBuilder getGradientDescentOrBuilder() {
        if (optimizerCase_ == 6) {
           return (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_;
        }
        return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.getDefaultInstance();
      }

      public static final int ADAGRAD_FIELD_NUMBER = 7;
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer getAdagrad() {
        if (optimizerCase_ == 7) {
           return (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_;
        }
        return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.getDefaultInstance();
      }
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizerOrBuilder getAdagradOrBuilder() {
        if (optimizerCase_ == 7) {
           return (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_;
        }
        return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!getNameBytes().isEmpty()) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
        }
        if (numRows_ != 0) {
          output.writeInt32(3, numRows_);
        }
        if (width_ != 0) {
          output.writeInt32(4, width_);
        }
        if (numFeatures_ != 0) {
          output.writeInt32(5, numFeatures_);
        }
        if (optimizerCase_ == 6) {
          output.writeMessage(6, (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_);
        }
        if (optimizerCase_ == 7) {
          output.writeMessage(7, (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_);
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!getNameBytes().isEmpty()) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
        }
        if (numRows_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(3, numRows_);
        }
        if (width_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(4, width_);
        }
        if (numFeatures_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(5, numFeatures_);
        }
        if (optimizerCase_ == 6) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_);
        }
        if (optimizerCase_ == 7) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(7, (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_);
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable)) {
          return super.equals(obj);
        }
        tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable other = (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable) obj;

        boolean result = true;
        result = result && getName()
            .equals(other.getName());
        result = result && (getNumRows()
            == other.getNumRows());
        result = result && (getWidth()
            == other.getWidth());
        result = result && (getNumFeatures()
            == other.getNumFeatures());
        result = result && getOptimizerCase().equals(
            other.getOptimizerCase());
        if (!result) return false;
        switch (optimizerCase_) {
          case 6:
            result = result && getGradientDescent()
                .equals(other.getGradientDescent());
            break;
          case 7:
            result = result && getAdagrad()
                .equals(other.getAdagrad());
            break;
          case 0:
          default:
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + NAME_FIELD_NUMBER;
        hash = (53 * hash) + getName().hashCode();
        hash = (37 * hash) + NUM_ROWS_FIELD_NUMBER;
        hash = (53 * hash) + getNumRows();
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
        hash = (37 * hash) + NUM_FEATURES_FIELD_NUMBER;
        hash = (53 * hash) + getNumFeatures();
        switch (optimizerCase_) {
          case 6:
            hash = (37 * hash) + GRADIENT_DESCENT_FIELD_NUMBER;
            hash = (53 * hash) + getGradientDescent().hashCode();
            break;
          case 7:
            hash = (37 * hash) + ADAGRAD_FIELD_NUMBER;
            hash = (53 * hash) + getAdagrad().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Each Embedding
       * </pre>
       *
       * Protobuf type {@code tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.class, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder.class);
        }

        // Construct using tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          name_ = "";

          numRows_ = 0;

          width_ = 0;

          numFeatures_ = 0;

          optimizerCase_ = 0;
          optimizer_ = null;
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_descriptor;
        }

        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable getDefaultInstanceForType() {
          return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.getDefaultInstance();
        }

        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable build() {
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable buildPartial() {
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable result = new tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable(this);
          result.name_ = name_;
          result.numRows_ = numRows_;
          result.width_ = width_;
          result.numFeatures_ = numFeatures_;
          if (optimizerCase_ == 6) {
            if (gradientDescentBuilder_ == null) {
              result.optimizer_ = optimizer_;
            } else {
              result.optimizer_ = gradientDescentBuilder_.build();
            }
          }
          if (optimizerCase_ == 7) {
            if (adagradBuilder_ == null) {
              result.optimizer_ = optimizer_;
            } else {
              result.optimizer_ = adagradBuilder_.build();
            }
          }
          result.optimizerCase_ = optimizerCase_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable) {
            return mergeFrom((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable other) {
          if (other == tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.getDefaultInstance()) return this;
          if (!other.getName().isEmpty()) {
            name_ = other.name_;
            onChanged();
          }
          if (other.getNumRows() != 0) {
            setNumRows(other.getNumRows());
          }
          if (other.getWidth() != 0) {
            setWidth(other.getWidth());
          }
          if (other.getNumFeatures() != 0) {
            setNumFeatures(other.getNumFeatures());
          }
          switch (other.getOptimizerCase()) {
            case GRADIENT_DESCENT: {
              mergeGradientDescent(other.getGradientDescent());
              break;
            }
            case ADAGRAD: {
              mergeAdagrad(other.getAdagrad());
              break;
            }
            case OPTIMIZER_NOT_SET: {
              break;
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int optimizerCase_ = 0;
        private java.lang.Object optimizer_;
        public OptimizerCase
            getOptimizerCase() {
          return OptimizerCase.forNumber(
              optimizerCase_);
        }

        public Builder clearOptimizer() {
          optimizerCase_ = 0;
          optimizer_ = null;
          onChanged();
          return this;
        }


        private java.lang.Object name_ = "";
        /**
         * <pre>
         * Name of the embedding table. This will be used to name Variables in the
         * Tensorflow Graph.
         * </pre>
         *
         * <code>string name = 1;</code>
         */
        public java.lang.String getName() {
          java.lang.Object ref = name_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            name_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <pre>
         * Name of the embedding table. This will be used to name Variables in the
         * Tensorflow Graph.
         * </pre>
         *
         * <code>string name = 1;</code>
         */
        public com.google.protobuf.ByteString
            getNameBytes() {
          java.lang.Object ref = name_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            name_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <pre>
         * Name of the embedding table. This will be used to name Variables in the
         * Tensorflow Graph.
         * </pre>
         *
         * <code>string name = 1;</code>
         */
        public Builder setName(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          name_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the embedding table. This will be used to name Variables in the
         * Tensorflow Graph.
         * </pre>
         *
         * <code>string name = 1;</code>
         */
        public Builder clearName() {
          
          name_ = getDefaultInstance().getName();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Name of the embedding table. This will be used to name Variables in the
         * Tensorflow Graph.
         * </pre>
         *
         * <code>string name = 1;</code>
         */
        public Builder setNameBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
          
          name_ = value;
          onChanged();
          return this;
        }

        private int numRows_ ;
        /**
         * <pre>
         * Number of rows of the embedding table. The Variable created to hold the
         * learned embedding table values will have shape (num_rows, width).
         * </pre>
         *
         * <code>int32 num_rows = 3;</code>
         */
        public int getNumRows() {
          return numRows_;
        }
        /**
         * <pre>
         * Number of rows of the embedding table. The Variable created to hold the
         * learned embedding table values will have shape (num_rows, width).
         * </pre>
         *
         * <code>int32 num_rows = 3;</code>
         */
        public Builder setNumRows(int value) {
          
          numRows_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of rows of the embedding table. The Variable created to hold the
         * learned embedding table values will have shape (num_rows, width).
         * </pre>
         *
         * <code>int32 num_rows = 3;</code>
         */
        public Builder clearNumRows() {
          
          numRows_ = 0;
          onChanged();
          return this;
        }

        private int width_ ;
        /**
         * <pre>
         * Width of the embedding table. The Variable created to hold the
         * learned embedding table values will have shape (num_rows, width).
         * </pre>
         *
         * <code>int32 width = 4;</code>
         */
        public int getWidth() {
          return width_;
        }
        /**
         * <pre>
         * Width of the embedding table. The Variable created to hold the
         * learned embedding table values will have shape (num_rows, width).
         * </pre>
         *
         * <code>int32 width = 4;</code>
         */
        public Builder setWidth(int value) {
          
          width_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Width of the embedding table. The Variable created to hold the
         * learned embedding table values will have shape (num_rows, width).
         * </pre>
         *
         * <code>int32 width = 4;</code>
         */
        public Builder clearWidth() {
          
          width_ = 0;
          onChanged();
          return this;
        }

        private int numFeatures_ ;
        /**
         * <pre>
         * Number of distinct embedding activation vectors per training example
         * produced by lookups into this table during model evaluation. For each
         * table, the Graph will receive an activations Tensor of shape
         *   (batch_size * table.num_features, table.width).
         * For example, num_features = 1 produces equivalent behavior to a single
         * tf.nn.embedding_lookup() call. In the case of 'multivalent' embeddings,
         * (i.e. tf.nn.embedding_lookup_sparse()) which compute weighted averages of
         * embedding table rows, num_features is the number of vectors produced
         * after averaging. In sequence models num_features is typically equal
         * to the sequence length, since each sequence element must be represented
         * separately to the convolutional or recurrent network.
         * </pre>
         *
         * <code>int32 num_features = 5;</code>
         */
        public int getNumFeatures() {
          return numFeatures_;
        }
        /**
         * <pre>
         * Number of distinct embedding activation vectors per training example
         * produced by lookups into this table during model evaluation. For each
         * table, the Graph will receive an activations Tensor of shape
         *   (batch_size * table.num_features, table.width).
         * For example, num_features = 1 produces equivalent behavior to a single
         * tf.nn.embedding_lookup() call. In the case of 'multivalent' embeddings,
         * (i.e. tf.nn.embedding_lookup_sparse()) which compute weighted averages of
         * embedding table rows, num_features is the number of vectors produced
         * after averaging. In sequence models num_features is typically equal
         * to the sequence length, since each sequence element must be represented
         * separately to the convolutional or recurrent network.
         * </pre>
         *
         * <code>int32 num_features = 5;</code>
         */
        public Builder setNumFeatures(int value) {
          
          numFeatures_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Number of distinct embedding activation vectors per training example
         * produced by lookups into this table during model evaluation. For each
         * table, the Graph will receive an activations Tensor of shape
         *   (batch_size * table.num_features, table.width).
         * For example, num_features = 1 produces equivalent behavior to a single
         * tf.nn.embedding_lookup() call. In the case of 'multivalent' embeddings,
         * (i.e. tf.nn.embedding_lookup_sparse()) which compute weighted averages of
         * embedding table rows, num_features is the number of vectors produced
         * after averaging. In sequence models num_features is typically equal
         * to the sequence length, since each sequence element must be represented
         * separately to the convolutional or recurrent network.
         * </pre>
         *
         * <code>int32 num_features = 5;</code>
         */
        public Builder clearNumFeatures() {
          
          numFeatures_ = 0;
          onChanged();
          return this;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.Builder, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizerOrBuilder> gradientDescentBuilder_;
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
         */
        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer getGradientDescent() {
          if (gradientDescentBuilder_ == null) {
            if (optimizerCase_ == 6) {
              return (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_;
            }
            return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.getDefaultInstance();
          } else {
            if (optimizerCase_ == 6) {
              return gradientDescentBuilder_.getMessage();
            }
            return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.getDefaultInstance();
          }
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
         */
        public Builder setGradientDescent(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer value) {
          if (gradientDescentBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            optimizer_ = value;
            onChanged();
          } else {
            gradientDescentBuilder_.setMessage(value);
          }
          optimizerCase_ = 6;
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
         */
        public Builder setGradientDescent(
            tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.Builder builderForValue) {
          if (gradientDescentBuilder_ == null) {
            optimizer_ = builderForValue.build();
            onChanged();
          } else {
            gradientDescentBuilder_.setMessage(builderForValue.build());
          }
          optimizerCase_ = 6;
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
         */
        public Builder mergeGradientDescent(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer value) {
          if (gradientDescentBuilder_ == null) {
            if (optimizerCase_ == 6 &&
                optimizer_ != tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.getDefaultInstance()) {
              optimizer_ = tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.newBuilder((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_)
                  .mergeFrom(value).buildPartial();
            } else {
              optimizer_ = value;
            }
            onChanged();
          } else {
            if (optimizerCase_ == 6) {
              gradientDescentBuilder_.mergeFrom(value);
            }
            gradientDescentBuilder_.setMessage(value);
          }
          optimizerCase_ = 6;
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
         */
        public Builder clearGradientDescent() {
          if (gradientDescentBuilder_ == null) {
            if (optimizerCase_ == 6) {
              optimizerCase_ = 0;
              optimizer_ = null;
              onChanged();
            }
          } else {
            if (optimizerCase_ == 6) {
              optimizerCase_ = 0;
              optimizer_ = null;
            }
            gradientDescentBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
         */
        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.Builder getGradientDescentBuilder() {
          return getGradientDescentFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
         */
        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizerOrBuilder getGradientDescentOrBuilder() {
          if ((optimizerCase_ == 6) && (gradientDescentBuilder_ != null)) {
            return gradientDescentBuilder_.getMessageOrBuilder();
          } else {
            if (optimizerCase_ == 6) {
              return (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_;
            }
            return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.getDefaultInstance();
          }
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.GradientDescentOptimizer gradient_descent = 6;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.Builder, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizerOrBuilder> 
            getGradientDescentFieldBuilder() {
          if (gradientDescentBuilder_ == null) {
            if (!(optimizerCase_ == 6)) {
              optimizer_ = tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.getDefaultInstance();
            }
            gradientDescentBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer.Builder, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizerOrBuilder>(
                    (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.GradientDescentOptimizer) optimizer_,
                    getParentForChildren(),
                    isClean());
            optimizer_ = null;
          }
          optimizerCase_ = 6;
          onChanged();;
          return gradientDescentBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.Builder, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizerOrBuilder> adagradBuilder_;
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
         */
        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer getAdagrad() {
          if (adagradBuilder_ == null) {
            if (optimizerCase_ == 7) {
              return (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_;
            }
            return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.getDefaultInstance();
          } else {
            if (optimizerCase_ == 7) {
              return adagradBuilder_.getMessage();
            }
            return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.getDefaultInstance();
          }
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
         */
        public Builder setAdagrad(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer value) {
          if (adagradBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            optimizer_ = value;
            onChanged();
          } else {
            adagradBuilder_.setMessage(value);
          }
          optimizerCase_ = 7;
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
         */
        public Builder setAdagrad(
            tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.Builder builderForValue) {
          if (adagradBuilder_ == null) {
            optimizer_ = builderForValue.build();
            onChanged();
          } else {
            adagradBuilder_.setMessage(builderForValue.build());
          }
          optimizerCase_ = 7;
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
         */
        public Builder mergeAdagrad(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer value) {
          if (adagradBuilder_ == null) {
            if (optimizerCase_ == 7 &&
                optimizer_ != tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.getDefaultInstance()) {
              optimizer_ = tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.newBuilder((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_)
                  .mergeFrom(value).buildPartial();
            } else {
              optimizer_ = value;
            }
            onChanged();
          } else {
            if (optimizerCase_ == 7) {
              adagradBuilder_.mergeFrom(value);
            }
            adagradBuilder_.setMessage(value);
          }
          optimizerCase_ = 7;
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
         */
        public Builder clearAdagrad() {
          if (adagradBuilder_ == null) {
            if (optimizerCase_ == 7) {
              optimizerCase_ = 0;
              optimizer_ = null;
              onChanged();
            }
          } else {
            if (optimizerCase_ == 7) {
              optimizerCase_ = 0;
              optimizer_ = null;
            }
            adagradBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
         */
        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.Builder getAdagradBuilder() {
          return getAdagradFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
         */
        public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizerOrBuilder getAdagradOrBuilder() {
          if ((optimizerCase_ == 7) && (adagradBuilder_ != null)) {
            return adagradBuilder_.getMessageOrBuilder();
          } else {
            if (optimizerCase_ == 7) {
              return (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_;
            }
            return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.getDefaultInstance();
          }
        }
        /**
         * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.AdagradOptimizer adagrad = 7;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.Builder, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizerOrBuilder> 
            getAdagradFieldBuilder() {
          if (adagradBuilder_ == null) {
            if (!(optimizerCase_ == 7)) {
              optimizer_ = tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.getDefaultInstance();
            }
            adagradBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer.Builder, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizerOrBuilder>(
                    (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.AdagradOptimizer) optimizer_,
                    getParentForChildren(),
                    isClean());
            optimizer_ = null;
          }
          optimizerCase_ = 7;
          onChanged();;
          return adagradBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable)
      private static final tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable();
      }

      public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<TPUEmbeddingTable>
          PARSER = new com.google.protobuf.AbstractParser<TPUEmbeddingTable>() {
        public TPUEmbeddingTable parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new TPUEmbeddingTable(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<TPUEmbeddingTable> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<TPUEmbeddingTable> getParserForType() {
        return PARSER;
      }

      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int MODEL_MODE_FIELD_NUMBER = 1;
    private int modelMode_;
    /**
     * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;</code>
     */
    public int getModelModeValue() {
      return modelMode_;
    }
    /**
     * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;</code>
     */
    public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode getModelMode() {
      tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode result = tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode.valueOf(modelMode_);
      return result == null ? tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode.UNRECOGNIZED : result;
    }

    public static final int NUM_HOSTS_FIELD_NUMBER = 2;
    private int numHosts_;
    /**
     * <pre>
     * num_hosts is the number of host CPU systems in the training/inference job.
     * Each embedding table must be sharded into num_hosts separate Variables,
     * placed separately on the num_hosts CPU devices in the cluster. Sharding
     * will be performed equivalently to the 'div' sharding_strategy option of
     * embedding_lookup() and embedding_lookup_sparse().
     * </pre>
     *
     * <code>int32 num_hosts = 2;</code>
     */
    public int getNumHosts() {
      return numHosts_;
    }

    public static final int NUM_TENSORNODES_FIELD_NUMBER = 3;
    private int numTensornodes_;
    /**
     * <pre>
     * The total number of TensorNodes. This is equal to num_hosts times the
     * number of TensorNodes attached to each host.
     * </pre>
     *
     * <code>int32 num_tensornodes = 3;</code>
     */
    public int getNumTensornodes() {
      return numTensornodes_;
    }

    public static final int BATCH_SIZE_FIELD_NUMBER = 4;
    private int batchSize_;
    /**
     * <pre>
     * The number of training examples per TensorNode.
     * </pre>
     *
     * <code>int32 batch_size = 4;</code>
     */
    public int getBatchSize() {
      return batchSize_;
    }

    public static final int TABLE_CONFIG_FIELD_NUMBER = 5;
    private java.util.List<tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable> tableConfig_;
    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    public java.util.List<tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable> getTableConfigList() {
      return tableConfig_;
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    public java.util.List<? extends tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder> 
        getTableConfigOrBuilderList() {
      return tableConfig_;
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    public int getTableConfigCount() {
      return tableConfig_.size();
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable getTableConfig(int index) {
      return tableConfig_.get(index);
    }
    /**
     * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
     */
    public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder getTableConfigOrBuilder(
        int index) {
      return tableConfig_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (modelMode_ != tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode.INVALID.getNumber()) {
        output.writeEnum(1, modelMode_);
      }
      if (numHosts_ != 0) {
        output.writeInt32(2, numHosts_);
      }
      if (numTensornodes_ != 0) {
        output.writeInt32(3, numTensornodes_);
      }
      if (batchSize_ != 0) {
        output.writeInt32(4, batchSize_);
      }
      for (int i = 0; i < tableConfig_.size(); i++) {
        output.writeMessage(5, tableConfig_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (modelMode_ != tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode.INVALID.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, modelMode_);
      }
      if (numHosts_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numHosts_);
      }
      if (numTensornodes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, numTensornodes_);
      }
      if (batchSize_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, batchSize_);
      }
      for (int i = 0; i < tableConfig_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, tableConfig_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration)) {
        return super.equals(obj);
      }
      tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration other = (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration) obj;

      boolean result = true;
      result = result && modelMode_ == other.modelMode_;
      result = result && (getNumHosts()
          == other.getNumHosts());
      result = result && (getNumTensornodes()
          == other.getNumTensornodes());
      result = result && (getBatchSize()
          == other.getBatchSize());
      result = result && getTableConfigList()
          .equals(other.getTableConfigList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MODEL_MODE_FIELD_NUMBER;
      hash = (53 * hash) + modelMode_;
      hash = (37 * hash) + NUM_HOSTS_FIELD_NUMBER;
      hash = (53 * hash) + getNumHosts();
      hash = (37 * hash) + NUM_TENSORNODES_FIELD_NUMBER;
      hash = (53 * hash) + getNumTensornodes();
      hash = (37 * hash) + BATCH_SIZE_FIELD_NUMBER;
      hash = (53 * hash) + getBatchSize();
      if (getTableConfigCount() > 0) {
        hash = (37 * hash) + TABLE_CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getTableConfigList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * The TPUEmbeddingConfiguration contains specification of TPU Embedding lookups
     * and gradient updates separate from the TF Graph.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tpu.TPUEmbeddingConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tpu.TPUEmbeddingConfiguration)
        tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.class, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.Builder.class);
      }

      // Construct using tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTableConfigFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        modelMode_ = 0;

        numHosts_ = 0;

        numTensornodes_ = 0;

        batchSize_ = 0;

        if (tableConfigBuilder_ == null) {
          tableConfig_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          tableConfigBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tpu.TpuEmbeddingConfig.internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_descriptor;
      }

      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration getDefaultInstanceForType() {
        return tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.getDefaultInstance();
      }

      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration build() {
        tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration buildPartial() {
        tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration result = new tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.modelMode_ = modelMode_;
        result.numHosts_ = numHosts_;
        result.numTensornodes_ = numTensornodes_;
        result.batchSize_ = batchSize_;
        if (tableConfigBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            tableConfig_ = java.util.Collections.unmodifiableList(tableConfig_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.tableConfig_ = tableConfig_;
        } else {
          result.tableConfig_ = tableConfigBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration) {
          return mergeFrom((tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration other) {
        if (other == tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.getDefaultInstance()) return this;
        if (other.modelMode_ != 0) {
          setModelModeValue(other.getModelModeValue());
        }
        if (other.getNumHosts() != 0) {
          setNumHosts(other.getNumHosts());
        }
        if (other.getNumTensornodes() != 0) {
          setNumTensornodes(other.getNumTensornodes());
        }
        if (other.getBatchSize() != 0) {
          setBatchSize(other.getBatchSize());
        }
        if (tableConfigBuilder_ == null) {
          if (!other.tableConfig_.isEmpty()) {
            if (tableConfig_.isEmpty()) {
              tableConfig_ = other.tableConfig_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureTableConfigIsMutable();
              tableConfig_.addAll(other.tableConfig_);
            }
            onChanged();
          }
        } else {
          if (!other.tableConfig_.isEmpty()) {
            if (tableConfigBuilder_.isEmpty()) {
              tableConfigBuilder_.dispose();
              tableConfigBuilder_ = null;
              tableConfig_ = other.tableConfig_;
              bitField0_ = (bitField0_ & ~0x00000010);
              tableConfigBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTableConfigFieldBuilder() : null;
            } else {
              tableConfigBuilder_.addAllMessages(other.tableConfig_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int modelMode_ = 0;
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;</code>
       */
      public int getModelModeValue() {
        return modelMode_;
      }
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;</code>
       */
      public Builder setModelModeValue(int value) {
        modelMode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode getModelMode() {
        tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode result = tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode.valueOf(modelMode_);
        return result == null ? tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;</code>
       */
      public Builder setModelMode(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.ModelMode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        modelMode_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tpu.TPUEmbeddingConfiguration.ModelMode model_mode = 1;</code>
       */
      public Builder clearModelMode() {
        
        modelMode_ = 0;
        onChanged();
        return this;
      }

      private int numHosts_ ;
      /**
       * <pre>
       * num_hosts is the number of host CPU systems in the training/inference job.
       * Each embedding table must be sharded into num_hosts separate Variables,
       * placed separately on the num_hosts CPU devices in the cluster. Sharding
       * will be performed equivalently to the 'div' sharding_strategy option of
       * embedding_lookup() and embedding_lookup_sparse().
       * </pre>
       *
       * <code>int32 num_hosts = 2;</code>
       */
      public int getNumHosts() {
        return numHosts_;
      }
      /**
       * <pre>
       * num_hosts is the number of host CPU systems in the training/inference job.
       * Each embedding table must be sharded into num_hosts separate Variables,
       * placed separately on the num_hosts CPU devices in the cluster. Sharding
       * will be performed equivalently to the 'div' sharding_strategy option of
       * embedding_lookup() and embedding_lookup_sparse().
       * </pre>
       *
       * <code>int32 num_hosts = 2;</code>
       */
      public Builder setNumHosts(int value) {
        
        numHosts_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * num_hosts is the number of host CPU systems in the training/inference job.
       * Each embedding table must be sharded into num_hosts separate Variables,
       * placed separately on the num_hosts CPU devices in the cluster. Sharding
       * will be performed equivalently to the 'div' sharding_strategy option of
       * embedding_lookup() and embedding_lookup_sparse().
       * </pre>
       *
       * <code>int32 num_hosts = 2;</code>
       */
      public Builder clearNumHosts() {
        
        numHosts_ = 0;
        onChanged();
        return this;
      }

      private int numTensornodes_ ;
      /**
       * <pre>
       * The total number of TensorNodes. This is equal to num_hosts times the
       * number of TensorNodes attached to each host.
       * </pre>
       *
       * <code>int32 num_tensornodes = 3;</code>
       */
      public int getNumTensornodes() {
        return numTensornodes_;
      }
      /**
       * <pre>
       * The total number of TensorNodes. This is equal to num_hosts times the
       * number of TensorNodes attached to each host.
       * </pre>
       *
       * <code>int32 num_tensornodes = 3;</code>
       */
      public Builder setNumTensornodes(int value) {
        
        numTensornodes_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The total number of TensorNodes. This is equal to num_hosts times the
       * number of TensorNodes attached to each host.
       * </pre>
       *
       * <code>int32 num_tensornodes = 3;</code>
       */
      public Builder clearNumTensornodes() {
        
        numTensornodes_ = 0;
        onChanged();
        return this;
      }

      private int batchSize_ ;
      /**
       * <pre>
       * The number of training examples per TensorNode.
       * </pre>
       *
       * <code>int32 batch_size = 4;</code>
       */
      public int getBatchSize() {
        return batchSize_;
      }
      /**
       * <pre>
       * The number of training examples per TensorNode.
       * </pre>
       *
       * <code>int32 batch_size = 4;</code>
       */
      public Builder setBatchSize(int value) {
        
        batchSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The number of training examples per TensorNode.
       * </pre>
       *
       * <code>int32 batch_size = 4;</code>
       */
      public Builder clearBatchSize() {
        
        batchSize_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable> tableConfig_ =
        java.util.Collections.emptyList();
      private void ensureTableConfigIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          tableConfig_ = new java.util.ArrayList<tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable>(tableConfig_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder> tableConfigBuilder_;

      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public java.util.List<tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable> getTableConfigList() {
        if (tableConfigBuilder_ == null) {
          return java.util.Collections.unmodifiableList(tableConfig_);
        } else {
          return tableConfigBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public int getTableConfigCount() {
        if (tableConfigBuilder_ == null) {
          return tableConfig_.size();
        } else {
          return tableConfigBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable getTableConfig(int index) {
        if (tableConfigBuilder_ == null) {
          return tableConfig_.get(index);
        } else {
          return tableConfigBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public Builder setTableConfig(
          int index, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable value) {
        if (tableConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableConfigIsMutable();
          tableConfig_.set(index, value);
          onChanged();
        } else {
          tableConfigBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public Builder setTableConfig(
          int index, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder builderForValue) {
        if (tableConfigBuilder_ == null) {
          ensureTableConfigIsMutable();
          tableConfig_.set(index, builderForValue.build());
          onChanged();
        } else {
          tableConfigBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public Builder addTableConfig(tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable value) {
        if (tableConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableConfigIsMutable();
          tableConfig_.add(value);
          onChanged();
        } else {
          tableConfigBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public Builder addTableConfig(
          int index, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable value) {
        if (tableConfigBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTableConfigIsMutable();
          tableConfig_.add(index, value);
          onChanged();
        } else {
          tableConfigBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public Builder addTableConfig(
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder builderForValue) {
        if (tableConfigBuilder_ == null) {
          ensureTableConfigIsMutable();
          tableConfig_.add(builderForValue.build());
          onChanged();
        } else {
          tableConfigBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public Builder addTableConfig(
          int index, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder builderForValue) {
        if (tableConfigBuilder_ == null) {
          ensureTableConfigIsMutable();
          tableConfig_.add(index, builderForValue.build());
          onChanged();
        } else {
          tableConfigBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public Builder addAllTableConfig(
          java.lang.Iterable<? extends tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable> values) {
        if (tableConfigBuilder_ == null) {
          ensureTableConfigIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, tableConfig_);
          onChanged();
        } else {
          tableConfigBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public Builder clearTableConfig() {
        if (tableConfigBuilder_ == null) {
          tableConfig_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          tableConfigBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public Builder removeTableConfig(int index) {
        if (tableConfigBuilder_ == null) {
          ensureTableConfigIsMutable();
          tableConfig_.remove(index);
          onChanged();
        } else {
          tableConfigBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder getTableConfigBuilder(
          int index) {
        return getTableConfigFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder getTableConfigOrBuilder(
          int index) {
        if (tableConfigBuilder_ == null) {
          return tableConfig_.get(index);  } else {
          return tableConfigBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public java.util.List<? extends tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder> 
           getTableConfigOrBuilderList() {
        if (tableConfigBuilder_ != null) {
          return tableConfigBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(tableConfig_);
        }
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder addTableConfigBuilder() {
        return getTableConfigFieldBuilder().addBuilder(
            tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder addTableConfigBuilder(
          int index) {
        return getTableConfigFieldBuilder().addBuilder(
            index, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tpu.TPUEmbeddingConfiguration.TPUEmbeddingTable table_config = 5;</code>
       */
      public java.util.List<tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder> 
           getTableConfigBuilderList() {
        return getTableConfigFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder> 
          getTableConfigFieldBuilder() {
        if (tableConfigBuilder_ == null) {
          tableConfigBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTable.Builder, tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration.TPUEmbeddingTableOrBuilder>(
                  tableConfig_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          tableConfig_ = null;
        }
        return tableConfigBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tpu.TPUEmbeddingConfiguration)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tpu.TPUEmbeddingConfiguration)
    private static final tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration();
    }

    public static tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TPUEmbeddingConfiguration>
        PARSER = new com.google.protobuf.AbstractParser<TPUEmbeddingConfiguration>() {
      public TPUEmbeddingConfiguration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TPUEmbeddingConfiguration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TPUEmbeddingConfiguration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TPUEmbeddingConfiguration> getParserForType() {
      return PARSER;
    }

    public tensorflow.tpu.TpuEmbeddingConfig.TPUEmbeddingConfiguration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n7tensorflow/contrib/tpu/proto/tpu_embed" +
      "ding_config.proto\022\016tensorflow.tpu\"\300\005\n\031TP" +
      "UEmbeddingConfiguration\022G\n\nmodel_mode\030\001 " +
      "\001(\01623.tensorflow.tpu.TPUEmbeddingConfigu" +
      "ration.ModelMode\022\021\n\tnum_hosts\030\002 \001(\005\022\027\n\017n" +
      "um_tensornodes\030\003 \001(\005\022\022\n\nbatch_size\030\004 \001(\005" +
      "\022Q\n\014table_config\030\005 \003(\0132;.tensorflow.tpu." +
      "TPUEmbeddingConfiguration.TPUEmbeddingTa" +
      "ble\0321\n\030GradientDescentOptimizer\022\025\n\rlearn" +
      "ing_rate\030\001 \001(\002\032F\n\020AdagradOptimizer\022\025\n\rle",
      "arning_rate\030\001 \001(\002\022\033\n\023initial_accumulator" +
      "\030\002 \001(\002\032\224\002\n\021TPUEmbeddingTable\022\014\n\004name\030\001 \001" +
      "(\t\022\020\n\010num_rows\030\003 \001(\005\022\r\n\005width\030\004 \001(\005\022\024\n\014n" +
      "um_features\030\005 \001(\005\022^\n\020gradient_descent\030\006 " +
      "\001(\0132B.tensorflow.tpu.TPUEmbeddingConfigu" +
      "ration.GradientDescentOptimizerH\000\022M\n\007ada" +
      "grad\030\007 \001(\0132:.tensorflow.tpu.TPUEmbedding" +
      "Configuration.AdagradOptimizerH\000B\013\n\topti" +
      "mizer\"5\n\tModelMode\022\013\n\007INVALID\020\000\022\014\n\010TRAIN" +
      "ING\020\001\022\r\n\tINFERENCE\020\002b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_descriptor,
        new java.lang.String[] { "ModelMode", "NumHosts", "NumTensornodes", "BatchSize", "TableConfig", });
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_descriptor =
      internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_GradientDescentOptimizer_descriptor,
        new java.lang.String[] { "LearningRate", });
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_descriptor =
      internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_descriptor.getNestedTypes().get(1);
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_AdagradOptimizer_descriptor,
        new java.lang.String[] { "LearningRate", "InitialAccumulator", });
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_descriptor =
      internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_descriptor.getNestedTypes().get(2);
    internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tpu_TPUEmbeddingConfiguration_TPUEmbeddingTable_descriptor,
        new java.lang.String[] { "Name", "NumRows", "Width", "NumFeatures", "GradientDescent", "Adagrad", "Optimizer", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
