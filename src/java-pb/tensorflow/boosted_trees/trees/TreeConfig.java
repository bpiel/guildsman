// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/contrib/boosted_trees/proto/tree_config.proto

package tensorflow.boosted_trees.trees;

public final class TreeConfig {
  private TreeConfig() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TreeNodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.TreeNode)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.Leaf getLeaf();
    /**
     * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getLeafOrBuilder();

    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getDenseFloatBinarySplit();
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder getDenseFloatBinarySplitOrBuilder();

    /**
     * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft getSparseFloatBinarySplitDefaultLeft();
    /**
     * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeftOrBuilder getSparseFloatBinarySplitDefaultLeftOrBuilder();

    /**
     * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight getSparseFloatBinarySplitDefaultRight();
    /**
     * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRightOrBuilder getSparseFloatBinarySplitDefaultRightOrBuilder();

    /**
     * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit getCategoricalIdBinarySplit();
    /**
     * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplitOrBuilder getCategoricalIdBinarySplitOrBuilder();

    /**
     * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit getCategoricalIdSetMembershipBinarySplit();
    /**
     * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplitOrBuilder getCategoricalIdSetMembershipBinarySplitOrBuilder();

    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
     */
    boolean hasNodeMetadata();
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata getNodeMetadata();
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadataOrBuilder getNodeMetadataOrBuilder();

    public tensorflow.boosted_trees.trees.TreeConfig.TreeNode.NodeCase getNodeCase();
  }
  /**
   * <pre>
   * TreeNode describes a node in a tree.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.TreeNode}
   */
  public  static final class TreeNode extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.TreeNode)
      TreeNodeOrBuilder {
    // Use TreeNode.newBuilder() to construct.
    private TreeNode(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TreeNode() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TreeNode(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder subBuilder = null;
              if (nodeCase_ == 1) {
                subBuilder = ((tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_).toBuilder();
              }
              node_ =
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.Leaf.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_);
                node_ = subBuilder.buildPartial();
              }
              nodeCase_ = 1;
              break;
            }
            case 18: {
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder subBuilder = null;
              if (nodeCase_ == 2) {
                subBuilder = ((tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_).toBuilder();
              }
              node_ =
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_);
                node_ = subBuilder.buildPartial();
              }
              nodeCase_ = 2;
              break;
            }
            case 26: {
              tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.Builder subBuilder = null;
              if (nodeCase_ == 3) {
                subBuilder = ((tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_).toBuilder();
              }
              node_ =
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_);
                node_ = subBuilder.buildPartial();
              }
              nodeCase_ = 3;
              break;
            }
            case 34: {
              tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.Builder subBuilder = null;
              if (nodeCase_ == 4) {
                subBuilder = ((tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_).toBuilder();
              }
              node_ =
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_);
                node_ = subBuilder.buildPartial();
              }
              nodeCase_ = 4;
              break;
            }
            case 42: {
              tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.Builder subBuilder = null;
              if (nodeCase_ == 5) {
                subBuilder = ((tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_).toBuilder();
              }
              node_ =
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_);
                node_ = subBuilder.buildPartial();
              }
              nodeCase_ = 5;
              break;
            }
            case 50: {
              tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.Builder subBuilder = null;
              if (nodeCase_ == 6) {
                subBuilder = ((tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_).toBuilder();
              }
              node_ =
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_);
                node_ = subBuilder.buildPartial();
              }
              nodeCase_ = 6;
              break;
            }
            case 6218: {
              tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.Builder subBuilder = null;
              if (nodeMetadata_ != null) {
                subBuilder = nodeMetadata_.toBuilder();
              }
              nodeMetadata_ = input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeMetadata_);
                nodeMetadata_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNode_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNode_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode.class, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder.class);
    }

    private int nodeCase_ = 0;
    private java.lang.Object node_;
    public enum NodeCase
        implements com.google.protobuf.Internal.EnumLite {
      LEAF(1),
      DENSE_FLOAT_BINARY_SPLIT(2),
      SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_LEFT(3),
      SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_RIGHT(4),
      CATEGORICAL_ID_BINARY_SPLIT(5),
      CATEGORICAL_ID_SET_MEMBERSHIP_BINARY_SPLIT(6),
      NODE_NOT_SET(0);
      private final int value;
      private NodeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static NodeCase valueOf(int value) {
        return forNumber(value);
      }

      public static NodeCase forNumber(int value) {
        switch (value) {
          case 1: return LEAF;
          case 2: return DENSE_FLOAT_BINARY_SPLIT;
          case 3: return SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_LEFT;
          case 4: return SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_RIGHT;
          case 5: return CATEGORICAL_ID_BINARY_SPLIT;
          case 6: return CATEGORICAL_ID_SET_MEMBERSHIP_BINARY_SPLIT;
          case 0: return NODE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public NodeCase
    getNodeCase() {
      return NodeCase.forNumber(
          nodeCase_);
    }

    public static final int LEAF_FIELD_NUMBER = 1;
    /**
     * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.Leaf getLeaf() {
      if (nodeCase_ == 1) {
         return (tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getLeafOrBuilder() {
      if (nodeCase_ == 1) {
         return (tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance();
    }

    public static final int DENSE_FLOAT_BINARY_SPLIT_FIELD_NUMBER = 2;
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getDenseFloatBinarySplit() {
      if (nodeCase_ == 2) {
         return (tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder getDenseFloatBinarySplitOrBuilder() {
      if (nodeCase_ == 2) {
         return (tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance();
    }

    public static final int SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_LEFT_FIELD_NUMBER = 3;
    /**
     * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft getSparseFloatBinarySplitDefaultLeft() {
      if (nodeCase_ == 3) {
         return (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeftOrBuilder getSparseFloatBinarySplitDefaultLeftOrBuilder() {
      if (nodeCase_ == 3) {
         return (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.getDefaultInstance();
    }

    public static final int SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_RIGHT_FIELD_NUMBER = 4;
    /**
     * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight getSparseFloatBinarySplitDefaultRight() {
      if (nodeCase_ == 4) {
         return (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRightOrBuilder getSparseFloatBinarySplitDefaultRightOrBuilder() {
      if (nodeCase_ == 4) {
         return (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.getDefaultInstance();
    }

    public static final int CATEGORICAL_ID_BINARY_SPLIT_FIELD_NUMBER = 5;
    /**
     * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit getCategoricalIdBinarySplit() {
      if (nodeCase_ == 5) {
         return (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplitOrBuilder getCategoricalIdBinarySplitOrBuilder() {
      if (nodeCase_ == 5) {
         return (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.getDefaultInstance();
    }

    public static final int CATEGORICAL_ID_SET_MEMBERSHIP_BINARY_SPLIT_FIELD_NUMBER = 6;
    /**
     * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit getCategoricalIdSetMembershipBinarySplit() {
      if (nodeCase_ == 6) {
         return (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplitOrBuilder getCategoricalIdSetMembershipBinarySplitOrBuilder() {
      if (nodeCase_ == 6) {
         return (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.getDefaultInstance();
    }

    public static final int NODE_METADATA_FIELD_NUMBER = 777;
    private tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata nodeMetadata_;
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
     */
    public boolean hasNodeMetadata() {
      return nodeMetadata_ != null;
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata getNodeMetadata() {
      return nodeMetadata_ == null ? tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.getDefaultInstance() : nodeMetadata_;
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadataOrBuilder getNodeMetadataOrBuilder() {
      return getNodeMetadata();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (nodeCase_ == 1) {
        output.writeMessage(1, (tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_);
      }
      if (nodeCase_ == 2) {
        output.writeMessage(2, (tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_);
      }
      if (nodeCase_ == 3) {
        output.writeMessage(3, (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_);
      }
      if (nodeCase_ == 4) {
        output.writeMessage(4, (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_);
      }
      if (nodeCase_ == 5) {
        output.writeMessage(5, (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_);
      }
      if (nodeCase_ == 6) {
        output.writeMessage(6, (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_);
      }
      if (nodeMetadata_ != null) {
        output.writeMessage(777, getNodeMetadata());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (nodeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_);
      }
      if (nodeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_);
      }
      if (nodeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_);
      }
      if (nodeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_);
      }
      if (nodeCase_ == 5) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_);
      }
      if (nodeCase_ == 6) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_);
      }
      if (nodeMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(777, getNodeMetadata());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.TreeNode)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.TreeNode other = (tensorflow.boosted_trees.trees.TreeConfig.TreeNode) obj;

      boolean result = true;
      result = result && (hasNodeMetadata() == other.hasNodeMetadata());
      if (hasNodeMetadata()) {
        result = result && getNodeMetadata()
            .equals(other.getNodeMetadata());
      }
      result = result && getNodeCase().equals(
          other.getNodeCase());
      if (!result) return false;
      switch (nodeCase_) {
        case 1:
          result = result && getLeaf()
              .equals(other.getLeaf());
          break;
        case 2:
          result = result && getDenseFloatBinarySplit()
              .equals(other.getDenseFloatBinarySplit());
          break;
        case 3:
          result = result && getSparseFloatBinarySplitDefaultLeft()
              .equals(other.getSparseFloatBinarySplitDefaultLeft());
          break;
        case 4:
          result = result && getSparseFloatBinarySplitDefaultRight()
              .equals(other.getSparseFloatBinarySplitDefaultRight());
          break;
        case 5:
          result = result && getCategoricalIdBinarySplit()
              .equals(other.getCategoricalIdBinarySplit());
          break;
        case 6:
          result = result && getCategoricalIdSetMembershipBinarySplit()
              .equals(other.getCategoricalIdSetMembershipBinarySplit());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasNodeMetadata()) {
        hash = (37 * hash) + NODE_METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getNodeMetadata().hashCode();
      }
      switch (nodeCase_) {
        case 1:
          hash = (37 * hash) + LEAF_FIELD_NUMBER;
          hash = (53 * hash) + getLeaf().hashCode();
          break;
        case 2:
          hash = (37 * hash) + DENSE_FLOAT_BINARY_SPLIT_FIELD_NUMBER;
          hash = (53 * hash) + getDenseFloatBinarySplit().hashCode();
          break;
        case 3:
          hash = (37 * hash) + SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_LEFT_FIELD_NUMBER;
          hash = (53 * hash) + getSparseFloatBinarySplitDefaultLeft().hashCode();
          break;
        case 4:
          hash = (37 * hash) + SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_RIGHT_FIELD_NUMBER;
          hash = (53 * hash) + getSparseFloatBinarySplitDefaultRight().hashCode();
          break;
        case 5:
          hash = (37 * hash) + CATEGORICAL_ID_BINARY_SPLIT_FIELD_NUMBER;
          hash = (53 * hash) + getCategoricalIdBinarySplit().hashCode();
          break;
        case 6:
          hash = (37 * hash) + CATEGORICAL_ID_SET_MEMBERSHIP_BINARY_SPLIT_FIELD_NUMBER;
          hash = (53 * hash) + getCategoricalIdSetMembershipBinarySplit().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.TreeNode prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TreeNode describes a node in a tree.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.TreeNode}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.TreeNode)
        tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNode_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNode_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.TreeNode.class, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.TreeNode.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeMetadataBuilder_ == null) {
          nodeMetadata_ = null;
        } else {
          nodeMetadata_ = null;
          nodeMetadataBuilder_ = null;
        }
        nodeCase_ = 0;
        node_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNode_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode build() {
        tensorflow.boosted_trees.trees.TreeConfig.TreeNode result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.TreeNode result = new tensorflow.boosted_trees.trees.TreeConfig.TreeNode(this);
        if (nodeCase_ == 1) {
          if (leafBuilder_ == null) {
            result.node_ = node_;
          } else {
            result.node_ = leafBuilder_.build();
          }
        }
        if (nodeCase_ == 2) {
          if (denseFloatBinarySplitBuilder_ == null) {
            result.node_ = node_;
          } else {
            result.node_ = denseFloatBinarySplitBuilder_.build();
          }
        }
        if (nodeCase_ == 3) {
          if (sparseFloatBinarySplitDefaultLeftBuilder_ == null) {
            result.node_ = node_;
          } else {
            result.node_ = sparseFloatBinarySplitDefaultLeftBuilder_.build();
          }
        }
        if (nodeCase_ == 4) {
          if (sparseFloatBinarySplitDefaultRightBuilder_ == null) {
            result.node_ = node_;
          } else {
            result.node_ = sparseFloatBinarySplitDefaultRightBuilder_.build();
          }
        }
        if (nodeCase_ == 5) {
          if (categoricalIdBinarySplitBuilder_ == null) {
            result.node_ = node_;
          } else {
            result.node_ = categoricalIdBinarySplitBuilder_.build();
          }
        }
        if (nodeCase_ == 6) {
          if (categoricalIdSetMembershipBinarySplitBuilder_ == null) {
            result.node_ = node_;
          } else {
            result.node_ = categoricalIdSetMembershipBinarySplitBuilder_.build();
          }
        }
        if (nodeMetadataBuilder_ == null) {
          result.nodeMetadata_ = nodeMetadata_;
        } else {
          result.nodeMetadata_ = nodeMetadataBuilder_.build();
        }
        result.nodeCase_ = nodeCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.TreeNode) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.TreeNode)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.TreeNode other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance()) return this;
        if (other.hasNodeMetadata()) {
          mergeNodeMetadata(other.getNodeMetadata());
        }
        switch (other.getNodeCase()) {
          case LEAF: {
            mergeLeaf(other.getLeaf());
            break;
          }
          case DENSE_FLOAT_BINARY_SPLIT: {
            mergeDenseFloatBinarySplit(other.getDenseFloatBinarySplit());
            break;
          }
          case SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_LEFT: {
            mergeSparseFloatBinarySplitDefaultLeft(other.getSparseFloatBinarySplitDefaultLeft());
            break;
          }
          case SPARSE_FLOAT_BINARY_SPLIT_DEFAULT_RIGHT: {
            mergeSparseFloatBinarySplitDefaultRight(other.getSparseFloatBinarySplitDefaultRight());
            break;
          }
          case CATEGORICAL_ID_BINARY_SPLIT: {
            mergeCategoricalIdBinarySplit(other.getCategoricalIdBinarySplit());
            break;
          }
          case CATEGORICAL_ID_SET_MEMBERSHIP_BINARY_SPLIT: {
            mergeCategoricalIdSetMembershipBinarySplit(other.getCategoricalIdSetMembershipBinarySplit());
            break;
          }
          case NODE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.TreeNode parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.TreeNode) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int nodeCase_ = 0;
      private java.lang.Object node_;
      public NodeCase
          getNodeCase() {
        return NodeCase.forNumber(
            nodeCase_);
      }

      public Builder clearNode() {
        nodeCase_ = 0;
        node_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> leafBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf getLeaf() {
        if (leafBuilder_ == null) {
          if (nodeCase_ == 1) {
            return (tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance();
        } else {
          if (nodeCase_ == 1) {
            return leafBuilder_.getMessage();
          }
          return tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
       */
      public Builder setLeaf(tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (leafBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          node_ = value;
          onChanged();
        } else {
          leafBuilder_.setMessage(value);
        }
        nodeCase_ = 1;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
       */
      public Builder setLeaf(
          tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder builderForValue) {
        if (leafBuilder_ == null) {
          node_ = builderForValue.build();
          onChanged();
        } else {
          leafBuilder_.setMessage(builderForValue.build());
        }
        nodeCase_ = 1;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
       */
      public Builder mergeLeaf(tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (leafBuilder_ == null) {
          if (nodeCase_ == 1 &&
              node_ != tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance()) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.Leaf.newBuilder((tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_)
                .mergeFrom(value).buildPartial();
          } else {
            node_ = value;
          }
          onChanged();
        } else {
          if (nodeCase_ == 1) {
            leafBuilder_.mergeFrom(value);
          }
          leafBuilder_.setMessage(value);
        }
        nodeCase_ = 1;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
       */
      public Builder clearLeaf() {
        if (leafBuilder_ == null) {
          if (nodeCase_ == 1) {
            nodeCase_ = 0;
            node_ = null;
            onChanged();
          }
        } else {
          if (nodeCase_ == 1) {
            nodeCase_ = 0;
            node_ = null;
          }
          leafBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder getLeafBuilder() {
        return getLeafFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getLeafOrBuilder() {
        if ((nodeCase_ == 1) && (leafBuilder_ != null)) {
          return leafBuilder_.getMessageOrBuilder();
        } else {
          if (nodeCase_ == 1) {
            return (tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.Leaf leaf = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> 
          getLeafFieldBuilder() {
        if (leafBuilder_ == null) {
          if (!(nodeCase_ == 1)) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance();
          }
          leafBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder>(
                  (tensorflow.boosted_trees.trees.TreeConfig.Leaf) node_,
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        nodeCase_ = 1;
        onChanged();;
        return leafBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder> denseFloatBinarySplitBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getDenseFloatBinarySplit() {
        if (denseFloatBinarySplitBuilder_ == null) {
          if (nodeCase_ == 2) {
            return (tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance();
        } else {
          if (nodeCase_ == 2) {
            return denseFloatBinarySplitBuilder_.getMessage();
          }
          return tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
       */
      public Builder setDenseFloatBinarySplit(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit value) {
        if (denseFloatBinarySplitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          node_ = value;
          onChanged();
        } else {
          denseFloatBinarySplitBuilder_.setMessage(value);
        }
        nodeCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
       */
      public Builder setDenseFloatBinarySplit(
          tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder builderForValue) {
        if (denseFloatBinarySplitBuilder_ == null) {
          node_ = builderForValue.build();
          onChanged();
        } else {
          denseFloatBinarySplitBuilder_.setMessage(builderForValue.build());
        }
        nodeCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
       */
      public Builder mergeDenseFloatBinarySplit(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit value) {
        if (denseFloatBinarySplitBuilder_ == null) {
          if (nodeCase_ == 2 &&
              node_ != tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance()) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.newBuilder((tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_)
                .mergeFrom(value).buildPartial();
          } else {
            node_ = value;
          }
          onChanged();
        } else {
          if (nodeCase_ == 2) {
            denseFloatBinarySplitBuilder_.mergeFrom(value);
          }
          denseFloatBinarySplitBuilder_.setMessage(value);
        }
        nodeCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
       */
      public Builder clearDenseFloatBinarySplit() {
        if (denseFloatBinarySplitBuilder_ == null) {
          if (nodeCase_ == 2) {
            nodeCase_ = 0;
            node_ = null;
            onChanged();
          }
        } else {
          if (nodeCase_ == 2) {
            nodeCase_ = 0;
            node_ = null;
          }
          denseFloatBinarySplitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder getDenseFloatBinarySplitBuilder() {
        return getDenseFloatBinarySplitFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder getDenseFloatBinarySplitOrBuilder() {
        if ((nodeCase_ == 2) && (denseFloatBinarySplitBuilder_ != null)) {
          return denseFloatBinarySplitBuilder_.getMessageOrBuilder();
        } else {
          if (nodeCase_ == 2) {
            return (tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit dense_float_binary_split = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder> 
          getDenseFloatBinarySplitFieldBuilder() {
        if (denseFloatBinarySplitBuilder_ == null) {
          if (!(nodeCase_ == 2)) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance();
          }
          denseFloatBinarySplitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder>(
                  (tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) node_,
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        nodeCase_ = 2;
        onChanged();;
        return denseFloatBinarySplitBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.Builder, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeftOrBuilder> sparseFloatBinarySplitDefaultLeftBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft getSparseFloatBinarySplitDefaultLeft() {
        if (sparseFloatBinarySplitDefaultLeftBuilder_ == null) {
          if (nodeCase_ == 3) {
            return (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.getDefaultInstance();
        } else {
          if (nodeCase_ == 3) {
            return sparseFloatBinarySplitDefaultLeftBuilder_.getMessage();
          }
          return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
       */
      public Builder setSparseFloatBinarySplitDefaultLeft(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft value) {
        if (sparseFloatBinarySplitDefaultLeftBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          node_ = value;
          onChanged();
        } else {
          sparseFloatBinarySplitDefaultLeftBuilder_.setMessage(value);
        }
        nodeCase_ = 3;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
       */
      public Builder setSparseFloatBinarySplitDefaultLeft(
          tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.Builder builderForValue) {
        if (sparseFloatBinarySplitDefaultLeftBuilder_ == null) {
          node_ = builderForValue.build();
          onChanged();
        } else {
          sparseFloatBinarySplitDefaultLeftBuilder_.setMessage(builderForValue.build());
        }
        nodeCase_ = 3;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
       */
      public Builder mergeSparseFloatBinarySplitDefaultLeft(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft value) {
        if (sparseFloatBinarySplitDefaultLeftBuilder_ == null) {
          if (nodeCase_ == 3 &&
              node_ != tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.getDefaultInstance()) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.newBuilder((tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_)
                .mergeFrom(value).buildPartial();
          } else {
            node_ = value;
          }
          onChanged();
        } else {
          if (nodeCase_ == 3) {
            sparseFloatBinarySplitDefaultLeftBuilder_.mergeFrom(value);
          }
          sparseFloatBinarySplitDefaultLeftBuilder_.setMessage(value);
        }
        nodeCase_ = 3;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
       */
      public Builder clearSparseFloatBinarySplitDefaultLeft() {
        if (sparseFloatBinarySplitDefaultLeftBuilder_ == null) {
          if (nodeCase_ == 3) {
            nodeCase_ = 0;
            node_ = null;
            onChanged();
          }
        } else {
          if (nodeCase_ == 3) {
            nodeCase_ = 0;
            node_ = null;
          }
          sparseFloatBinarySplitDefaultLeftBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.Builder getSparseFloatBinarySplitDefaultLeftBuilder() {
        return getSparseFloatBinarySplitDefaultLeftFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeftOrBuilder getSparseFloatBinarySplitDefaultLeftOrBuilder() {
        if ((nodeCase_ == 3) && (sparseFloatBinarySplitDefaultLeftBuilder_ != null)) {
          return sparseFloatBinarySplitDefaultLeftBuilder_.getMessageOrBuilder();
        } else {
          if (nodeCase_ == 3) {
            return (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft sparse_float_binary_split_default_left = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.Builder, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeftOrBuilder> 
          getSparseFloatBinarySplitDefaultLeftFieldBuilder() {
        if (sparseFloatBinarySplitDefaultLeftBuilder_ == null) {
          if (!(nodeCase_ == 3)) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.getDefaultInstance();
          }
          sparseFloatBinarySplitDefaultLeftBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.Builder, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeftOrBuilder>(
                  (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) node_,
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        nodeCase_ = 3;
        onChanged();;
        return sparseFloatBinarySplitDefaultLeftBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.Builder, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRightOrBuilder> sparseFloatBinarySplitDefaultRightBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight getSparseFloatBinarySplitDefaultRight() {
        if (sparseFloatBinarySplitDefaultRightBuilder_ == null) {
          if (nodeCase_ == 4) {
            return (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.getDefaultInstance();
        } else {
          if (nodeCase_ == 4) {
            return sparseFloatBinarySplitDefaultRightBuilder_.getMessage();
          }
          return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
       */
      public Builder setSparseFloatBinarySplitDefaultRight(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight value) {
        if (sparseFloatBinarySplitDefaultRightBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          node_ = value;
          onChanged();
        } else {
          sparseFloatBinarySplitDefaultRightBuilder_.setMessage(value);
        }
        nodeCase_ = 4;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
       */
      public Builder setSparseFloatBinarySplitDefaultRight(
          tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.Builder builderForValue) {
        if (sparseFloatBinarySplitDefaultRightBuilder_ == null) {
          node_ = builderForValue.build();
          onChanged();
        } else {
          sparseFloatBinarySplitDefaultRightBuilder_.setMessage(builderForValue.build());
        }
        nodeCase_ = 4;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
       */
      public Builder mergeSparseFloatBinarySplitDefaultRight(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight value) {
        if (sparseFloatBinarySplitDefaultRightBuilder_ == null) {
          if (nodeCase_ == 4 &&
              node_ != tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.getDefaultInstance()) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.newBuilder((tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_)
                .mergeFrom(value).buildPartial();
          } else {
            node_ = value;
          }
          onChanged();
        } else {
          if (nodeCase_ == 4) {
            sparseFloatBinarySplitDefaultRightBuilder_.mergeFrom(value);
          }
          sparseFloatBinarySplitDefaultRightBuilder_.setMessage(value);
        }
        nodeCase_ = 4;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
       */
      public Builder clearSparseFloatBinarySplitDefaultRight() {
        if (sparseFloatBinarySplitDefaultRightBuilder_ == null) {
          if (nodeCase_ == 4) {
            nodeCase_ = 0;
            node_ = null;
            onChanged();
          }
        } else {
          if (nodeCase_ == 4) {
            nodeCase_ = 0;
            node_ = null;
          }
          sparseFloatBinarySplitDefaultRightBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.Builder getSparseFloatBinarySplitDefaultRightBuilder() {
        return getSparseFloatBinarySplitDefaultRightFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRightOrBuilder getSparseFloatBinarySplitDefaultRightOrBuilder() {
        if ((nodeCase_ == 4) && (sparseFloatBinarySplitDefaultRightBuilder_ != null)) {
          return sparseFloatBinarySplitDefaultRightBuilder_.getMessageOrBuilder();
        } else {
          if (nodeCase_ == 4) {
            return (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight sparse_float_binary_split_default_right = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.Builder, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRightOrBuilder> 
          getSparseFloatBinarySplitDefaultRightFieldBuilder() {
        if (sparseFloatBinarySplitDefaultRightBuilder_ == null) {
          if (!(nodeCase_ == 4)) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.getDefaultInstance();
          }
          sparseFloatBinarySplitDefaultRightBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.Builder, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRightOrBuilder>(
                  (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) node_,
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        nodeCase_ = 4;
        onChanged();;
        return sparseFloatBinarySplitDefaultRightBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplitOrBuilder> categoricalIdBinarySplitBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit getCategoricalIdBinarySplit() {
        if (categoricalIdBinarySplitBuilder_ == null) {
          if (nodeCase_ == 5) {
            return (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.getDefaultInstance();
        } else {
          if (nodeCase_ == 5) {
            return categoricalIdBinarySplitBuilder_.getMessage();
          }
          return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
       */
      public Builder setCategoricalIdBinarySplit(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit value) {
        if (categoricalIdBinarySplitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          node_ = value;
          onChanged();
        } else {
          categoricalIdBinarySplitBuilder_.setMessage(value);
        }
        nodeCase_ = 5;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
       */
      public Builder setCategoricalIdBinarySplit(
          tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.Builder builderForValue) {
        if (categoricalIdBinarySplitBuilder_ == null) {
          node_ = builderForValue.build();
          onChanged();
        } else {
          categoricalIdBinarySplitBuilder_.setMessage(builderForValue.build());
        }
        nodeCase_ = 5;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
       */
      public Builder mergeCategoricalIdBinarySplit(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit value) {
        if (categoricalIdBinarySplitBuilder_ == null) {
          if (nodeCase_ == 5 &&
              node_ != tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.getDefaultInstance()) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.newBuilder((tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_)
                .mergeFrom(value).buildPartial();
          } else {
            node_ = value;
          }
          onChanged();
        } else {
          if (nodeCase_ == 5) {
            categoricalIdBinarySplitBuilder_.mergeFrom(value);
          }
          categoricalIdBinarySplitBuilder_.setMessage(value);
        }
        nodeCase_ = 5;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
       */
      public Builder clearCategoricalIdBinarySplit() {
        if (categoricalIdBinarySplitBuilder_ == null) {
          if (nodeCase_ == 5) {
            nodeCase_ = 0;
            node_ = null;
            onChanged();
          }
        } else {
          if (nodeCase_ == 5) {
            nodeCase_ = 0;
            node_ = null;
          }
          categoricalIdBinarySplitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.Builder getCategoricalIdBinarySplitBuilder() {
        return getCategoricalIdBinarySplitFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplitOrBuilder getCategoricalIdBinarySplitOrBuilder() {
        if ((nodeCase_ == 5) && (categoricalIdBinarySplitBuilder_ != null)) {
          return categoricalIdBinarySplitBuilder_.getMessageOrBuilder();
        } else {
          if (nodeCase_ == 5) {
            return (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdBinarySplit categorical_id_binary_split = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplitOrBuilder> 
          getCategoricalIdBinarySplitFieldBuilder() {
        if (categoricalIdBinarySplitBuilder_ == null) {
          if (!(nodeCase_ == 5)) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.getDefaultInstance();
          }
          categoricalIdBinarySplitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplitOrBuilder>(
                  (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) node_,
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        nodeCase_ = 5;
        onChanged();;
        return categoricalIdBinarySplitBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplitOrBuilder> categoricalIdSetMembershipBinarySplitBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit getCategoricalIdSetMembershipBinarySplit() {
        if (categoricalIdSetMembershipBinarySplitBuilder_ == null) {
          if (nodeCase_ == 6) {
            return (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.getDefaultInstance();
        } else {
          if (nodeCase_ == 6) {
            return categoricalIdSetMembershipBinarySplitBuilder_.getMessage();
          }
          return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
       */
      public Builder setCategoricalIdSetMembershipBinarySplit(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit value) {
        if (categoricalIdSetMembershipBinarySplitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          node_ = value;
          onChanged();
        } else {
          categoricalIdSetMembershipBinarySplitBuilder_.setMessage(value);
        }
        nodeCase_ = 6;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
       */
      public Builder setCategoricalIdSetMembershipBinarySplit(
          tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.Builder builderForValue) {
        if (categoricalIdSetMembershipBinarySplitBuilder_ == null) {
          node_ = builderForValue.build();
          onChanged();
        } else {
          categoricalIdSetMembershipBinarySplitBuilder_.setMessage(builderForValue.build());
        }
        nodeCase_ = 6;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
       */
      public Builder mergeCategoricalIdSetMembershipBinarySplit(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit value) {
        if (categoricalIdSetMembershipBinarySplitBuilder_ == null) {
          if (nodeCase_ == 6 &&
              node_ != tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.getDefaultInstance()) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.newBuilder((tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_)
                .mergeFrom(value).buildPartial();
          } else {
            node_ = value;
          }
          onChanged();
        } else {
          if (nodeCase_ == 6) {
            categoricalIdSetMembershipBinarySplitBuilder_.mergeFrom(value);
          }
          categoricalIdSetMembershipBinarySplitBuilder_.setMessage(value);
        }
        nodeCase_ = 6;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
       */
      public Builder clearCategoricalIdSetMembershipBinarySplit() {
        if (categoricalIdSetMembershipBinarySplitBuilder_ == null) {
          if (nodeCase_ == 6) {
            nodeCase_ = 0;
            node_ = null;
            onChanged();
          }
        } else {
          if (nodeCase_ == 6) {
            nodeCase_ = 0;
            node_ = null;
          }
          categoricalIdSetMembershipBinarySplitBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.Builder getCategoricalIdSetMembershipBinarySplitBuilder() {
        return getCategoricalIdSetMembershipBinarySplitFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplitOrBuilder getCategoricalIdSetMembershipBinarySplitOrBuilder() {
        if ((nodeCase_ == 6) && (categoricalIdSetMembershipBinarySplitBuilder_ != null)) {
          return categoricalIdSetMembershipBinarySplitBuilder_.getMessageOrBuilder();
        } else {
          if (nodeCase_ == 6) {
            return (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit categorical_id_set_membership_binary_split = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplitOrBuilder> 
          getCategoricalIdSetMembershipBinarySplitFieldBuilder() {
        if (categoricalIdSetMembershipBinarySplitBuilder_ == null) {
          if (!(nodeCase_ == 6)) {
            node_ = tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.getDefaultInstance();
          }
          categoricalIdSetMembershipBinarySplitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplitOrBuilder>(
                  (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) node_,
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        nodeCase_ = 6;
        onChanged();;
        return categoricalIdSetMembershipBinarySplitBuilder_;
      }

      private tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata nodeMetadata_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadataOrBuilder> nodeMetadataBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
       */
      public boolean hasNodeMetadata() {
        return nodeMetadataBuilder_ != null || nodeMetadata_ != null;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata getNodeMetadata() {
        if (nodeMetadataBuilder_ == null) {
          return nodeMetadata_ == null ? tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.getDefaultInstance() : nodeMetadata_;
        } else {
          return nodeMetadataBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
       */
      public Builder setNodeMetadata(tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata value) {
        if (nodeMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeMetadata_ = value;
          onChanged();
        } else {
          nodeMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
       */
      public Builder setNodeMetadata(
          tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.Builder builderForValue) {
        if (nodeMetadataBuilder_ == null) {
          nodeMetadata_ = builderForValue.build();
          onChanged();
        } else {
          nodeMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
       */
      public Builder mergeNodeMetadata(tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata value) {
        if (nodeMetadataBuilder_ == null) {
          if (nodeMetadata_ != null) {
            nodeMetadata_ =
              tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.newBuilder(nodeMetadata_).mergeFrom(value).buildPartial();
          } else {
            nodeMetadata_ = value;
          }
          onChanged();
        } else {
          nodeMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
       */
      public Builder clearNodeMetadata() {
        if (nodeMetadataBuilder_ == null) {
          nodeMetadata_ = null;
          onChanged();
        } else {
          nodeMetadata_ = null;
          nodeMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.Builder getNodeMetadataBuilder() {
        
        onChanged();
        return getNodeMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadataOrBuilder getNodeMetadataOrBuilder() {
        if (nodeMetadataBuilder_ != null) {
          return nodeMetadataBuilder_.getMessageOrBuilder();
        } else {
          return nodeMetadata_ == null ?
              tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.getDefaultInstance() : nodeMetadata_;
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.TreeNodeMetadata node_metadata = 777;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadataOrBuilder> 
          getNodeMetadataFieldBuilder() {
        if (nodeMetadataBuilder_ == null) {
          nodeMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadataOrBuilder>(
                  getNodeMetadata(),
                  getParentForChildren(),
                  isClean());
          nodeMetadata_ = null;
        }
        return nodeMetadataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.TreeNode)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.TreeNode)
    private static final tensorflow.boosted_trees.trees.TreeConfig.TreeNode DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.TreeNode();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNode getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TreeNode>
        PARSER = new com.google.protobuf.AbstractParser<TreeNode>() {
      public TreeNode parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TreeNode(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TreeNode> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TreeNode> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.TreeNode getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TreeNodeMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.TreeNodeMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The gain associated with this node.
     * </pre>
     *
     * <code>float gain = 1;</code>
     */
    float getGain();

    /**
     * <pre>
     * The original leaf node before this node was split.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
     */
    boolean hasOriginalLeaf();
    /**
     * <pre>
     * The original leaf node before this node was split.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.Leaf getOriginalLeaf();
    /**
     * <pre>
     * The original leaf node before this node was split.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getOriginalLeafOrBuilder();
  }
  /**
   * <pre>
   * TreeNodeMetadata encodes metadata associated with each node in a tree.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.TreeNodeMetadata}
   */
  public  static final class TreeNodeMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.TreeNodeMetadata)
      TreeNodeMetadataOrBuilder {
    // Use TreeNodeMetadata.newBuilder() to construct.
    private TreeNodeMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TreeNodeMetadata() {
      gain_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TreeNodeMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              gain_ = input.readFloat();
              break;
            }
            case 18: {
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder subBuilder = null;
              if (originalLeaf_ != null) {
                subBuilder = originalLeaf_.toBuilder();
              }
              originalLeaf_ = input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.Leaf.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(originalLeaf_);
                originalLeaf_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.class, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.Builder.class);
    }

    public static final int GAIN_FIELD_NUMBER = 1;
    private float gain_;
    /**
     * <pre>
     * The gain associated with this node.
     * </pre>
     *
     * <code>float gain = 1;</code>
     */
    public float getGain() {
      return gain_;
    }

    public static final int ORIGINAL_LEAF_FIELD_NUMBER = 2;
    private tensorflow.boosted_trees.trees.TreeConfig.Leaf originalLeaf_;
    /**
     * <pre>
     * The original leaf node before this node was split.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
     */
    public boolean hasOriginalLeaf() {
      return originalLeaf_ != null;
    }
    /**
     * <pre>
     * The original leaf node before this node was split.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.Leaf getOriginalLeaf() {
      return originalLeaf_ == null ? tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance() : originalLeaf_;
    }
    /**
     * <pre>
     * The original leaf node before this node was split.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getOriginalLeafOrBuilder() {
      return getOriginalLeaf();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (gain_ != 0F) {
        output.writeFloat(1, gain_);
      }
      if (originalLeaf_ != null) {
        output.writeMessage(2, getOriginalLeaf());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (gain_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, gain_);
      }
      if (originalLeaf_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOriginalLeaf());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata other = (tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getGain())
          == java.lang.Float.floatToIntBits(
              other.getGain()));
      result = result && (hasOriginalLeaf() == other.hasOriginalLeaf());
      if (hasOriginalLeaf()) {
        result = result && getOriginalLeaf()
            .equals(other.getOriginalLeaf());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + GAIN_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getGain());
      if (hasOriginalLeaf()) {
        hash = (37 * hash) + ORIGINAL_LEAF_FIELD_NUMBER;
        hash = (53 * hash) + getOriginalLeaf().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TreeNodeMetadata encodes metadata associated with each node in a tree.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.TreeNodeMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.TreeNodeMetadata)
        tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.class, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        gain_ = 0F;

        if (originalLeafBuilder_ == null) {
          originalLeaf_ = null;
        } else {
          originalLeaf_ = null;
          originalLeafBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata build() {
        tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata result = new tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata(this);
        result.gain_ = gain_;
        if (originalLeafBuilder_ == null) {
          result.originalLeaf_ = originalLeaf_;
        } else {
          result.originalLeaf_ = originalLeafBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata.getDefaultInstance()) return this;
        if (other.getGain() != 0F) {
          setGain(other.getGain());
        }
        if (other.hasOriginalLeaf()) {
          mergeOriginalLeaf(other.getOriginalLeaf());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float gain_ ;
      /**
       * <pre>
       * The gain associated with this node.
       * </pre>
       *
       * <code>float gain = 1;</code>
       */
      public float getGain() {
        return gain_;
      }
      /**
       * <pre>
       * The gain associated with this node.
       * </pre>
       *
       * <code>float gain = 1;</code>
       */
      public Builder setGain(float value) {
        
        gain_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The gain associated with this node.
       * </pre>
       *
       * <code>float gain = 1;</code>
       */
      public Builder clearGain() {
        
        gain_ = 0F;
        onChanged();
        return this;
      }

      private tensorflow.boosted_trees.trees.TreeConfig.Leaf originalLeaf_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> originalLeafBuilder_;
      /**
       * <pre>
       * The original leaf node before this node was split.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
       */
      public boolean hasOriginalLeaf() {
        return originalLeafBuilder_ != null || originalLeaf_ != null;
      }
      /**
       * <pre>
       * The original leaf node before this node was split.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf getOriginalLeaf() {
        if (originalLeafBuilder_ == null) {
          return originalLeaf_ == null ? tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance() : originalLeaf_;
        } else {
          return originalLeafBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The original leaf node before this node was split.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
       */
      public Builder setOriginalLeaf(tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (originalLeafBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          originalLeaf_ = value;
          onChanged();
        } else {
          originalLeafBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The original leaf node before this node was split.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
       */
      public Builder setOriginalLeaf(
          tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder builderForValue) {
        if (originalLeafBuilder_ == null) {
          originalLeaf_ = builderForValue.build();
          onChanged();
        } else {
          originalLeafBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The original leaf node before this node was split.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
       */
      public Builder mergeOriginalLeaf(tensorflow.boosted_trees.trees.TreeConfig.Leaf value) {
        if (originalLeafBuilder_ == null) {
          if (originalLeaf_ != null) {
            originalLeaf_ =
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.newBuilder(originalLeaf_).mergeFrom(value).buildPartial();
          } else {
            originalLeaf_ = value;
          }
          onChanged();
        } else {
          originalLeafBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The original leaf node before this node was split.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
       */
      public Builder clearOriginalLeaf() {
        if (originalLeafBuilder_ == null) {
          originalLeaf_ = null;
          onChanged();
        } else {
          originalLeaf_ = null;
          originalLeafBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The original leaf node before this node was split.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder getOriginalLeafBuilder() {
        
        onChanged();
        return getOriginalLeafFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The original leaf node before this node was split.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder getOriginalLeafOrBuilder() {
        if (originalLeafBuilder_ != null) {
          return originalLeafBuilder_.getMessageOrBuilder();
        } else {
          return originalLeaf_ == null ?
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance() : originalLeaf_;
        }
      }
      /**
       * <pre>
       * The original leaf node before this node was split.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Leaf original_leaf = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder> 
          getOriginalLeafFieldBuilder() {
        if (originalLeafBuilder_ == null) {
          originalLeafBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.Leaf, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder, tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder>(
                  getOriginalLeaf(),
                  getParentForChildren(),
                  isClean());
          originalLeaf_ = null;
        }
        return originalLeafBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.TreeNodeMetadata)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.TreeNodeMetadata)
    private static final tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TreeNodeMetadata>
        PARSER = new com.google.protobuf.AbstractParser<TreeNodeMetadata>() {
      public TreeNodeMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TreeNodeMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TreeNodeMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TreeNodeMetadata> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LeafOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.Leaf)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * See third_party/tensorflow/contrib/decision_trees/
     * proto/generic_tree_model.proto
     * for a description of how vector and sparse_vector might be used.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.Vector getVector();
    /**
     * <pre>
     * See third_party/tensorflow/contrib/decision_trees/
     * proto/generic_tree_model.proto
     * for a description of how vector and sparse_vector might be used.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.VectorOrBuilder getVectorOrBuilder();

    /**
     * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.SparseVector getSparseVector();
    /**
     * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.SparseVectorOrBuilder getSparseVectorOrBuilder();

    public tensorflow.boosted_trees.trees.TreeConfig.Leaf.LeafCase getLeafCase();
  }
  /**
   * <pre>
   * Leaves can either hold dense or sparse information.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.Leaf}
   */
  public  static final class Leaf extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.Leaf)
      LeafOrBuilder {
    // Use Leaf.newBuilder() to construct.
    private Leaf(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Leaf() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Leaf(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tensorflow.boosted_trees.trees.TreeConfig.Vector.Builder subBuilder = null;
              if (leafCase_ == 1) {
                subBuilder = ((tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_).toBuilder();
              }
              leaf_ =
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.Vector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_);
                leaf_ = subBuilder.buildPartial();
              }
              leafCase_ = 1;
              break;
            }
            case 18: {
              tensorflow.boosted_trees.trees.TreeConfig.SparseVector.Builder subBuilder = null;
              if (leafCase_ == 2) {
                subBuilder = ((tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_).toBuilder();
              }
              leaf_ =
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.SparseVector.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_);
                leaf_ = subBuilder.buildPartial();
              }
              leafCase_ = 2;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Leaf_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Leaf_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.Leaf.class, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder.class);
    }

    private int leafCase_ = 0;
    private java.lang.Object leaf_;
    public enum LeafCase
        implements com.google.protobuf.Internal.EnumLite {
      VECTOR(1),
      SPARSE_VECTOR(2),
      LEAF_NOT_SET(0);
      private final int value;
      private LeafCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LeafCase valueOf(int value) {
        return forNumber(value);
      }

      public static LeafCase forNumber(int value) {
        switch (value) {
          case 1: return VECTOR;
          case 2: return SPARSE_VECTOR;
          case 0: return LEAF_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public LeafCase
    getLeafCase() {
      return LeafCase.forNumber(
          leafCase_);
    }

    public static final int VECTOR_FIELD_NUMBER = 1;
    /**
     * <pre>
     * See third_party/tensorflow/contrib/decision_trees/
     * proto/generic_tree_model.proto
     * for a description of how vector and sparse_vector might be used.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.Vector getVector() {
      if (leafCase_ == 1) {
         return (tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.Vector.getDefaultInstance();
    }
    /**
     * <pre>
     * See third_party/tensorflow/contrib/decision_trees/
     * proto/generic_tree_model.proto
     * for a description of how vector and sparse_vector might be used.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.VectorOrBuilder getVectorOrBuilder() {
      if (leafCase_ == 1) {
         return (tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.Vector.getDefaultInstance();
    }

    public static final int SPARSE_VECTOR_FIELD_NUMBER = 2;
    /**
     * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.SparseVector getSparseVector() {
      if (leafCase_ == 2) {
         return (tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.SparseVector.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.SparseVectorOrBuilder getSparseVectorOrBuilder() {
      if (leafCase_ == 2) {
         return (tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_;
      }
      return tensorflow.boosted_trees.trees.TreeConfig.SparseVector.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (leafCase_ == 1) {
        output.writeMessage(1, (tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_);
      }
      if (leafCase_ == 2) {
        output.writeMessage(2, (tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (leafCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_);
      }
      if (leafCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.Leaf)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.Leaf other = (tensorflow.boosted_trees.trees.TreeConfig.Leaf) obj;

      boolean result = true;
      result = result && getLeafCase().equals(
          other.getLeafCase());
      if (!result) return false;
      switch (leafCase_) {
        case 1:
          result = result && getVector()
              .equals(other.getVector());
          break;
        case 2:
          result = result && getSparseVector()
              .equals(other.getSparseVector());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (leafCase_) {
        case 1:
          hash = (37 * hash) + VECTOR_FIELD_NUMBER;
          hash = (53 * hash) + getVector().hashCode();
          break;
        case 2:
          hash = (37 * hash) + SPARSE_VECTOR_FIELD_NUMBER;
          hash = (53 * hash) + getSparseVector().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.Leaf prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Leaves can either hold dense or sparse information.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.Leaf}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.Leaf)
        tensorflow.boosted_trees.trees.TreeConfig.LeafOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Leaf_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Leaf_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.Leaf.class, tensorflow.boosted_trees.trees.TreeConfig.Leaf.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.Leaf.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        leafCase_ = 0;
        leaf_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Leaf_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.Leaf getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.Leaf build() {
        tensorflow.boosted_trees.trees.TreeConfig.Leaf result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.Leaf buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.Leaf result = new tensorflow.boosted_trees.trees.TreeConfig.Leaf(this);
        if (leafCase_ == 1) {
          if (vectorBuilder_ == null) {
            result.leaf_ = leaf_;
          } else {
            result.leaf_ = vectorBuilder_.build();
          }
        }
        if (leafCase_ == 2) {
          if (sparseVectorBuilder_ == null) {
            result.leaf_ = leaf_;
          } else {
            result.leaf_ = sparseVectorBuilder_.build();
          }
        }
        result.leafCase_ = leafCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.Leaf) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.Leaf)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.Leaf other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.Leaf.getDefaultInstance()) return this;
        switch (other.getLeafCase()) {
          case VECTOR: {
            mergeVector(other.getVector());
            break;
          }
          case SPARSE_VECTOR: {
            mergeSparseVector(other.getSparseVector());
            break;
          }
          case LEAF_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.Leaf parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.Leaf) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int leafCase_ = 0;
      private java.lang.Object leaf_;
      public LeafCase
          getLeafCase() {
        return LeafCase.forNumber(
            leafCase_);
      }

      public Builder clearLeaf() {
        leafCase_ = 0;
        leaf_ = null;
        onChanged();
        return this;
      }


      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Vector, tensorflow.boosted_trees.trees.TreeConfig.Vector.Builder, tensorflow.boosted_trees.trees.TreeConfig.VectorOrBuilder> vectorBuilder_;
      /**
       * <pre>
       * See third_party/tensorflow/contrib/decision_trees/
       * proto/generic_tree_model.proto
       * for a description of how vector and sparse_vector might be used.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Vector getVector() {
        if (vectorBuilder_ == null) {
          if (leafCase_ == 1) {
            return (tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.Vector.getDefaultInstance();
        } else {
          if (leafCase_ == 1) {
            return vectorBuilder_.getMessage();
          }
          return tensorflow.boosted_trees.trees.TreeConfig.Vector.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * See third_party/tensorflow/contrib/decision_trees/
       * proto/generic_tree_model.proto
       * for a description of how vector and sparse_vector might be used.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
       */
      public Builder setVector(tensorflow.boosted_trees.trees.TreeConfig.Vector value) {
        if (vectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leaf_ = value;
          onChanged();
        } else {
          vectorBuilder_.setMessage(value);
        }
        leafCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * See third_party/tensorflow/contrib/decision_trees/
       * proto/generic_tree_model.proto
       * for a description of how vector and sparse_vector might be used.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
       */
      public Builder setVector(
          tensorflow.boosted_trees.trees.TreeConfig.Vector.Builder builderForValue) {
        if (vectorBuilder_ == null) {
          leaf_ = builderForValue.build();
          onChanged();
        } else {
          vectorBuilder_.setMessage(builderForValue.build());
        }
        leafCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * See third_party/tensorflow/contrib/decision_trees/
       * proto/generic_tree_model.proto
       * for a description of how vector and sparse_vector might be used.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
       */
      public Builder mergeVector(tensorflow.boosted_trees.trees.TreeConfig.Vector value) {
        if (vectorBuilder_ == null) {
          if (leafCase_ == 1 &&
              leaf_ != tensorflow.boosted_trees.trees.TreeConfig.Vector.getDefaultInstance()) {
            leaf_ = tensorflow.boosted_trees.trees.TreeConfig.Vector.newBuilder((tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_)
                .mergeFrom(value).buildPartial();
          } else {
            leaf_ = value;
          }
          onChanged();
        } else {
          if (leafCase_ == 1) {
            vectorBuilder_.mergeFrom(value);
          }
          vectorBuilder_.setMessage(value);
        }
        leafCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * See third_party/tensorflow/contrib/decision_trees/
       * proto/generic_tree_model.proto
       * for a description of how vector and sparse_vector might be used.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
       */
      public Builder clearVector() {
        if (vectorBuilder_ == null) {
          if (leafCase_ == 1) {
            leafCase_ = 0;
            leaf_ = null;
            onChanged();
          }
        } else {
          if (leafCase_ == 1) {
            leafCase_ = 0;
            leaf_ = null;
          }
          vectorBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * See third_party/tensorflow/contrib/decision_trees/
       * proto/generic_tree_model.proto
       * for a description of how vector and sparse_vector might be used.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.Vector.Builder getVectorBuilder() {
        return getVectorFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * See third_party/tensorflow/contrib/decision_trees/
       * proto/generic_tree_model.proto
       * for a description of how vector and sparse_vector might be used.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.VectorOrBuilder getVectorOrBuilder() {
        if ((leafCase_ == 1) && (vectorBuilder_ != null)) {
          return vectorBuilder_.getMessageOrBuilder();
        } else {
          if (leafCase_ == 1) {
            return (tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.Vector.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * See third_party/tensorflow/contrib/decision_trees/
       * proto/generic_tree_model.proto
       * for a description of how vector and sparse_vector might be used.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.Vector vector = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.Vector, tensorflow.boosted_trees.trees.TreeConfig.Vector.Builder, tensorflow.boosted_trees.trees.TreeConfig.VectorOrBuilder> 
          getVectorFieldBuilder() {
        if (vectorBuilder_ == null) {
          if (!(leafCase_ == 1)) {
            leaf_ = tensorflow.boosted_trees.trees.TreeConfig.Vector.getDefaultInstance();
          }
          vectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.Vector, tensorflow.boosted_trees.trees.TreeConfig.Vector.Builder, tensorflow.boosted_trees.trees.TreeConfig.VectorOrBuilder>(
                  (tensorflow.boosted_trees.trees.TreeConfig.Vector) leaf_,
                  getParentForChildren(),
                  isClean());
          leaf_ = null;
        }
        leafCase_ = 1;
        onChanged();;
        return vectorBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.SparseVector, tensorflow.boosted_trees.trees.TreeConfig.SparseVector.Builder, tensorflow.boosted_trees.trees.TreeConfig.SparseVectorOrBuilder> sparseVectorBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.SparseVector getSparseVector() {
        if (sparseVectorBuilder_ == null) {
          if (leafCase_ == 2) {
            return (tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.SparseVector.getDefaultInstance();
        } else {
          if (leafCase_ == 2) {
            return sparseVectorBuilder_.getMessage();
          }
          return tensorflow.boosted_trees.trees.TreeConfig.SparseVector.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
       */
      public Builder setSparseVector(tensorflow.boosted_trees.trees.TreeConfig.SparseVector value) {
        if (sparseVectorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leaf_ = value;
          onChanged();
        } else {
          sparseVectorBuilder_.setMessage(value);
        }
        leafCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
       */
      public Builder setSparseVector(
          tensorflow.boosted_trees.trees.TreeConfig.SparseVector.Builder builderForValue) {
        if (sparseVectorBuilder_ == null) {
          leaf_ = builderForValue.build();
          onChanged();
        } else {
          sparseVectorBuilder_.setMessage(builderForValue.build());
        }
        leafCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
       */
      public Builder mergeSparseVector(tensorflow.boosted_trees.trees.TreeConfig.SparseVector value) {
        if (sparseVectorBuilder_ == null) {
          if (leafCase_ == 2 &&
              leaf_ != tensorflow.boosted_trees.trees.TreeConfig.SparseVector.getDefaultInstance()) {
            leaf_ = tensorflow.boosted_trees.trees.TreeConfig.SparseVector.newBuilder((tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_)
                .mergeFrom(value).buildPartial();
          } else {
            leaf_ = value;
          }
          onChanged();
        } else {
          if (leafCase_ == 2) {
            sparseVectorBuilder_.mergeFrom(value);
          }
          sparseVectorBuilder_.setMessage(value);
        }
        leafCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
       */
      public Builder clearSparseVector() {
        if (sparseVectorBuilder_ == null) {
          if (leafCase_ == 2) {
            leafCase_ = 0;
            leaf_ = null;
            onChanged();
          }
        } else {
          if (leafCase_ == 2) {
            leafCase_ = 0;
            leaf_ = null;
          }
          sparseVectorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.SparseVector.Builder getSparseVectorBuilder() {
        return getSparseVectorFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.SparseVectorOrBuilder getSparseVectorOrBuilder() {
        if ((leafCase_ == 2) && (sparseVectorBuilder_ != null)) {
          return sparseVectorBuilder_.getMessageOrBuilder();
        } else {
          if (leafCase_ == 2) {
            return (tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_;
          }
          return tensorflow.boosted_trees.trees.TreeConfig.SparseVector.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.SparseVector sparse_vector = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.SparseVector, tensorflow.boosted_trees.trees.TreeConfig.SparseVector.Builder, tensorflow.boosted_trees.trees.TreeConfig.SparseVectorOrBuilder> 
          getSparseVectorFieldBuilder() {
        if (sparseVectorBuilder_ == null) {
          if (!(leafCase_ == 2)) {
            leaf_ = tensorflow.boosted_trees.trees.TreeConfig.SparseVector.getDefaultInstance();
          }
          sparseVectorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.SparseVector, tensorflow.boosted_trees.trees.TreeConfig.SparseVector.Builder, tensorflow.boosted_trees.trees.TreeConfig.SparseVectorOrBuilder>(
                  (tensorflow.boosted_trees.trees.TreeConfig.SparseVector) leaf_,
                  getParentForChildren(),
                  isClean());
          leaf_ = null;
        }
        leafCase_ = 2;
        onChanged();;
        return sparseVectorBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.Leaf)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.Leaf)
    private static final tensorflow.boosted_trees.trees.TreeConfig.Leaf DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.Leaf();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.Leaf getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Leaf>
        PARSER = new com.google.protobuf.AbstractParser<Leaf>() {
      public Leaf parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Leaf(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Leaf> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Leaf> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.Leaf getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface VectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.Vector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated float value = 1;</code>
     */
    java.util.List<java.lang.Float> getValueList();
    /**
     * <code>repeated float value = 1;</code>
     */
    int getValueCount();
    /**
     * <code>repeated float value = 1;</code>
     */
    float getValue(int index);
  }
  /**
   * Protobuf type {@code tensorflow.boosted_trees.trees.Vector}
   */
  public  static final class Vector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.Vector)
      VectorOrBuilder {
    // Use Vector.newBuilder() to construct.
    private Vector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Vector() {
      value_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Vector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                value_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              value_.add(input.readFloat());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Vector_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Vector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.Vector.class, tensorflow.boosted_trees.trees.TreeConfig.Vector.Builder.class);
    }

    public static final int VALUE_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Float> value_;
    /**
     * <code>repeated float value = 1;</code>
     */
    public java.util.List<java.lang.Float>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated float value = 1;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated float value = 1;</code>
     */
    public float getValue(int index) {
      return value_.get(index);
    }
    private int valueMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getValueList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(valueMemoizedSerializedSize);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeFloatNoTag(value_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        dataSize = 4 * getValueList().size();
        size += dataSize;
        if (!getValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.Vector)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.Vector other = (tensorflow.boosted_trees.trees.TreeConfig.Vector) obj;

      boolean result = true;
      result = result && getValueList()
          .equals(other.getValueList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.Vector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.Vector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.boosted_trees.trees.Vector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.Vector)
        tensorflow.boosted_trees.trees.TreeConfig.VectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Vector_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Vector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.Vector.class, tensorflow.boosted_trees.trees.TreeConfig.Vector.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.Vector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_Vector_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.Vector getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.Vector.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.Vector build() {
        tensorflow.boosted_trees.trees.TreeConfig.Vector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.Vector buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.Vector result = new tensorflow.boosted_trees.trees.TreeConfig.Vector(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.Vector) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.Vector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.Vector other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.Vector.getDefaultInstance()) return this;
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.Vector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.Vector) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Float> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          value_ = new java.util.ArrayList<java.lang.Float>(value_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated float value = 1;</code>
       */
      public java.util.List<java.lang.Float>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated float value = 1;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated float value = 1;</code>
       */
      public float getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated float value = 1;</code>
       */
      public Builder setValue(
          int index, float value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float value = 1;</code>
       */
      public Builder addValue(float value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float value = 1;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float value = 1;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.Vector)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.Vector)
    private static final tensorflow.boosted_trees.trees.TreeConfig.Vector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.Vector();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.Vector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Vector>
        PARSER = new com.google.protobuf.AbstractParser<Vector>() {
      public Vector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Vector(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Vector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Vector> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.Vector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SparseVectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.SparseVector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated int32 index = 1;</code>
     */
    java.util.List<java.lang.Integer> getIndexList();
    /**
     * <code>repeated int32 index = 1;</code>
     */
    int getIndexCount();
    /**
     * <code>repeated int32 index = 1;</code>
     */
    int getIndex(int index);

    /**
     * <code>repeated float value = 2;</code>
     */
    java.util.List<java.lang.Float> getValueList();
    /**
     * <code>repeated float value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated float value = 2;</code>
     */
    float getValue(int index);
  }
  /**
   * Protobuf type {@code tensorflow.boosted_trees.trees.SparseVector}
   */
  public  static final class SparseVector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.SparseVector)
      SparseVectorOrBuilder {
    // Use SparseVector.newBuilder() to construct.
    private SparseVector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SparseVector() {
      index_ = java.util.Collections.emptyList();
      value_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SparseVector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                index_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              index_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                index_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                index_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                value_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                value_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          index_ = java.util.Collections.unmodifiableList(index_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseVector_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseVector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.SparseVector.class, tensorflow.boosted_trees.trees.TreeConfig.SparseVector.Builder.class);
    }

    public static final int INDEX_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> index_;
    /**
     * <code>repeated int32 index = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getIndexList() {
      return index_;
    }
    /**
     * <code>repeated int32 index = 1;</code>
     */
    public int getIndexCount() {
      return index_.size();
    }
    /**
     * <code>repeated int32 index = 1;</code>
     */
    public int getIndex(int index) {
      return index_.get(index);
    }
    private int indexMemoizedSerializedSize = -1;

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> value_;
    /**
     * <code>repeated float value = 2;</code>
     */
    public java.util.List<java.lang.Float>
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated float value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated float value = 2;</code>
     */
    public float getValue(int index) {
      return value_.get(index);
    }
    private int valueMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getIndexList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(indexMemoizedSerializedSize);
      }
      for (int i = 0; i < index_.size(); i++) {
        output.writeInt32NoTag(index_.get(i));
      }
      if (getValueList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(valueMemoizedSerializedSize);
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeFloatNoTag(value_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < index_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(index_.get(i));
        }
        size += dataSize;
        if (!getIndexList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        indexMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        dataSize = 4 * getValueList().size();
        size += dataSize;
        if (!getValueList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        valueMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.SparseVector)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.SparseVector other = (tensorflow.boosted_trees.trees.TreeConfig.SparseVector) obj;

      boolean result = true;
      result = result && getIndexList()
          .equals(other.getIndexList());
      result = result && getValueList()
          .equals(other.getValueList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getIndexCount() > 0) {
        hash = (37 * hash) + INDEX_FIELD_NUMBER;
        hash = (53 * hash) + getIndexList().hashCode();
      }
      if (getValueCount() > 0) {
        hash = (37 * hash) + VALUE_FIELD_NUMBER;
        hash = (53 * hash) + getValueList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.SparseVector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.boosted_trees.trees.SparseVector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.SparseVector)
        tensorflow.boosted_trees.trees.TreeConfig.SparseVectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseVector_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseVector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.SparseVector.class, tensorflow.boosted_trees.trees.TreeConfig.SparseVector.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.SparseVector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        index_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseVector_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.SparseVector getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.SparseVector.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.SparseVector build() {
        tensorflow.boosted_trees.trees.TreeConfig.SparseVector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.SparseVector buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.SparseVector result = new tensorflow.boosted_trees.trees.TreeConfig.SparseVector(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          index_ = java.util.Collections.unmodifiableList(index_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.index_ = index_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = java.util.Collections.unmodifiableList(value_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.SparseVector) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.SparseVector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.SparseVector other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.SparseVector.getDefaultInstance()) return this;
        if (!other.index_.isEmpty()) {
          if (index_.isEmpty()) {
            index_ = other.index_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureIndexIsMutable();
            index_.addAll(other.index_);
          }
          onChanged();
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.SparseVector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.SparseVector) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> index_ = java.util.Collections.emptyList();
      private void ensureIndexIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          index_ = new java.util.ArrayList<java.lang.Integer>(index_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 index = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getIndexList() {
        return java.util.Collections.unmodifiableList(index_);
      }
      /**
       * <code>repeated int32 index = 1;</code>
       */
      public int getIndexCount() {
        return index_.size();
      }
      /**
       * <code>repeated int32 index = 1;</code>
       */
      public int getIndex(int index) {
        return index_.get(index);
      }
      /**
       * <code>repeated int32 index = 1;</code>
       */
      public Builder setIndex(
          int index, int value) {
        ensureIndexIsMutable();
        index_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 index = 1;</code>
       */
      public Builder addIndex(int value) {
        ensureIndexIsMutable();
        index_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 index = 1;</code>
       */
      public Builder addAllIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIndexIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, index_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 index = 1;</code>
       */
      public Builder clearIndex() {
        index_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Float> value_ = java.util.Collections.emptyList();
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new java.util.ArrayList<java.lang.Float>(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float value = 2;</code>
       */
      public java.util.List<java.lang.Float>
          getValueList() {
        return java.util.Collections.unmodifiableList(value_);
      }
      /**
       * <code>repeated float value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated float value = 2;</code>
       */
      public float getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated float value = 2;</code>
       */
      public Builder setValue(
          int index, float value) {
        ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float value = 2;</code>
       */
      public Builder addValue(float value) {
        ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float value = 2;</code>
       */
      public Builder clearValue() {
        value_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.SparseVector)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.SparseVector)
    private static final tensorflow.boosted_trees.trees.TreeConfig.SparseVector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.SparseVector();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.SparseVector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SparseVector>
        PARSER = new com.google.protobuf.AbstractParser<SparseVector>() {
      public SparseVector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SparseVector(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SparseVector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SparseVector> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.SparseVector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DenseFloatBinarySplitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.DenseFloatBinarySplit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Float feature column and split threshold describing
     * the rule feature &lt;= threshold.
     * </pre>
     *
     * <code>int32 feature_column = 1;</code>
     */
    int getFeatureColumn();

    /**
     * <pre>
     * If feature column is multivalent, this holds the index of the dimension
     * for the split. Defaults to 0.
     * </pre>
     *
     * <code>int32 dimension_id = 5;</code>
     */
    int getDimensionId();

    /**
     * <code>float threshold = 2;</code>
     */
    float getThreshold();

    /**
     * <pre>
     * Node children indexing into a contiguous
     * vector of nodes starting from the root.
     * </pre>
     *
     * <code>int32 left_id = 3;</code>
     */
    int getLeftId();

    /**
     * <code>int32 right_id = 4;</code>
     */
    int getRightId();
  }
  /**
   * <pre>
   * Split rule for dense float features.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.DenseFloatBinarySplit}
   */
  public  static final class DenseFloatBinarySplit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.DenseFloatBinarySplit)
      DenseFloatBinarySplitOrBuilder {
    // Use DenseFloatBinarySplit.newBuilder() to construct.
    private DenseFloatBinarySplit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DenseFloatBinarySplit() {
      featureColumn_ = 0;
      dimensionId_ = 0;
      threshold_ = 0F;
      leftId_ = 0;
      rightId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DenseFloatBinarySplit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              featureColumn_ = input.readInt32();
              break;
            }
            case 21: {

              threshold_ = input.readFloat();
              break;
            }
            case 24: {

              leftId_ = input.readInt32();
              break;
            }
            case 32: {

              rightId_ = input.readInt32();
              break;
            }
            case 40: {

              dimensionId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.class, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder.class);
    }

    public static final int FEATURE_COLUMN_FIELD_NUMBER = 1;
    private int featureColumn_;
    /**
     * <pre>
     * Float feature column and split threshold describing
     * the rule feature &lt;= threshold.
     * </pre>
     *
     * <code>int32 feature_column = 1;</code>
     */
    public int getFeatureColumn() {
      return featureColumn_;
    }

    public static final int DIMENSION_ID_FIELD_NUMBER = 5;
    private int dimensionId_;
    /**
     * <pre>
     * If feature column is multivalent, this holds the index of the dimension
     * for the split. Defaults to 0.
     * </pre>
     *
     * <code>int32 dimension_id = 5;</code>
     */
    public int getDimensionId() {
      return dimensionId_;
    }

    public static final int THRESHOLD_FIELD_NUMBER = 2;
    private float threshold_;
    /**
     * <code>float threshold = 2;</code>
     */
    public float getThreshold() {
      return threshold_;
    }

    public static final int LEFT_ID_FIELD_NUMBER = 3;
    private int leftId_;
    /**
     * <pre>
     * Node children indexing into a contiguous
     * vector of nodes starting from the root.
     * </pre>
     *
     * <code>int32 left_id = 3;</code>
     */
    public int getLeftId() {
      return leftId_;
    }

    public static final int RIGHT_ID_FIELD_NUMBER = 4;
    private int rightId_;
    /**
     * <code>int32 right_id = 4;</code>
     */
    public int getRightId() {
      return rightId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (featureColumn_ != 0) {
        output.writeInt32(1, featureColumn_);
      }
      if (threshold_ != 0F) {
        output.writeFloat(2, threshold_);
      }
      if (leftId_ != 0) {
        output.writeInt32(3, leftId_);
      }
      if (rightId_ != 0) {
        output.writeInt32(4, rightId_);
      }
      if (dimensionId_ != 0) {
        output.writeInt32(5, dimensionId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (featureColumn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, featureColumn_);
      }
      if (threshold_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, threshold_);
      }
      if (leftId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, leftId_);
      }
      if (rightId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rightId_);
      }
      if (dimensionId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, dimensionId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit other = (tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) obj;

      boolean result = true;
      result = result && (getFeatureColumn()
          == other.getFeatureColumn());
      result = result && (getDimensionId()
          == other.getDimensionId());
      result = result && (
          java.lang.Float.floatToIntBits(getThreshold())
          == java.lang.Float.floatToIntBits(
              other.getThreshold()));
      result = result && (getLeftId()
          == other.getLeftId());
      result = result && (getRightId()
          == other.getRightId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FEATURE_COLUMN_FIELD_NUMBER;
      hash = (53 * hash) + getFeatureColumn();
      hash = (37 * hash) + DIMENSION_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDimensionId();
      hash = (37 * hash) + THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getThreshold());
      hash = (37 * hash) + LEFT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getLeftId();
      hash = (37 * hash) + RIGHT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRightId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Split rule for dense float features.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.DenseFloatBinarySplit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.DenseFloatBinarySplit)
        tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.class, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        featureColumn_ = 0;

        dimensionId_ = 0;

        threshold_ = 0F;

        leftId_ = 0;

        rightId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit build() {
        tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit result = new tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit(this);
        result.featureColumn_ = featureColumn_;
        result.dimensionId_ = dimensionId_;
        result.threshold_ = threshold_;
        result.leftId_ = leftId_;
        result.rightId_ = rightId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance()) return this;
        if (other.getFeatureColumn() != 0) {
          setFeatureColumn(other.getFeatureColumn());
        }
        if (other.getDimensionId() != 0) {
          setDimensionId(other.getDimensionId());
        }
        if (other.getThreshold() != 0F) {
          setThreshold(other.getThreshold());
        }
        if (other.getLeftId() != 0) {
          setLeftId(other.getLeftId());
        }
        if (other.getRightId() != 0) {
          setRightId(other.getRightId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int featureColumn_ ;
      /**
       * <pre>
       * Float feature column and split threshold describing
       * the rule feature &lt;= threshold.
       * </pre>
       *
       * <code>int32 feature_column = 1;</code>
       */
      public int getFeatureColumn() {
        return featureColumn_;
      }
      /**
       * <pre>
       * Float feature column and split threshold describing
       * the rule feature &lt;= threshold.
       * </pre>
       *
       * <code>int32 feature_column = 1;</code>
       */
      public Builder setFeatureColumn(int value) {
        
        featureColumn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Float feature column and split threshold describing
       * the rule feature &lt;= threshold.
       * </pre>
       *
       * <code>int32 feature_column = 1;</code>
       */
      public Builder clearFeatureColumn() {
        
        featureColumn_ = 0;
        onChanged();
        return this;
      }

      private int dimensionId_ ;
      /**
       * <pre>
       * If feature column is multivalent, this holds the index of the dimension
       * for the split. Defaults to 0.
       * </pre>
       *
       * <code>int32 dimension_id = 5;</code>
       */
      public int getDimensionId() {
        return dimensionId_;
      }
      /**
       * <pre>
       * If feature column is multivalent, this holds the index of the dimension
       * for the split. Defaults to 0.
       * </pre>
       *
       * <code>int32 dimension_id = 5;</code>
       */
      public Builder setDimensionId(int value) {
        
        dimensionId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * If feature column is multivalent, this holds the index of the dimension
       * for the split. Defaults to 0.
       * </pre>
       *
       * <code>int32 dimension_id = 5;</code>
       */
      public Builder clearDimensionId() {
        
        dimensionId_ = 0;
        onChanged();
        return this;
      }

      private float threshold_ ;
      /**
       * <code>float threshold = 2;</code>
       */
      public float getThreshold() {
        return threshold_;
      }
      /**
       * <code>float threshold = 2;</code>
       */
      public Builder setThreshold(float value) {
        
        threshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float threshold = 2;</code>
       */
      public Builder clearThreshold() {
        
        threshold_ = 0F;
        onChanged();
        return this;
      }

      private int leftId_ ;
      /**
       * <pre>
       * Node children indexing into a contiguous
       * vector of nodes starting from the root.
       * </pre>
       *
       * <code>int32 left_id = 3;</code>
       */
      public int getLeftId() {
        return leftId_;
      }
      /**
       * <pre>
       * Node children indexing into a contiguous
       * vector of nodes starting from the root.
       * </pre>
       *
       * <code>int32 left_id = 3;</code>
       */
      public Builder setLeftId(int value) {
        
        leftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node children indexing into a contiguous
       * vector of nodes starting from the root.
       * </pre>
       *
       * <code>int32 left_id = 3;</code>
       */
      public Builder clearLeftId() {
        
        leftId_ = 0;
        onChanged();
        return this;
      }

      private int rightId_ ;
      /**
       * <code>int32 right_id = 4;</code>
       */
      public int getRightId() {
        return rightId_;
      }
      /**
       * <code>int32 right_id = 4;</code>
       */
      public Builder setRightId(int value) {
        
        rightId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 right_id = 4;</code>
       */
      public Builder clearRightId() {
        
        rightId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.DenseFloatBinarySplit)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.DenseFloatBinarySplit)
    private static final tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DenseFloatBinarySplit>
        PARSER = new com.google.protobuf.AbstractParser<DenseFloatBinarySplit>() {
      public DenseFloatBinarySplit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DenseFloatBinarySplit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DenseFloatBinarySplit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DenseFloatBinarySplit> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SparseFloatBinarySplitDefaultLeftOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    boolean hasSplit();
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getSplit();
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder getSplitOrBuilder();
  }
  /**
   * <pre>
   * Split rule for sparse float features defaulting left for missing features.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft}
   */
  public  static final class SparseFloatBinarySplitDefaultLeft extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft)
      SparseFloatBinarySplitDefaultLeftOrBuilder {
    // Use SparseFloatBinarySplitDefaultLeft.newBuilder() to construct.
    private SparseFloatBinarySplitDefaultLeft(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SparseFloatBinarySplitDefaultLeft() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SparseFloatBinarySplitDefaultLeft(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder subBuilder = null;
              if (split_ != null) {
                subBuilder = split_.toBuilder();
              }
              split_ = input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(split_);
                split_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.class, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.Builder.class);
    }

    public static final int SPLIT_FIELD_NUMBER = 1;
    private tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit split_;
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    public boolean hasSplit() {
      return split_ != null;
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getSplit() {
      return split_ == null ? tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance() : split_;
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder getSplitOrBuilder() {
      return getSplit();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (split_ != null) {
        output.writeMessage(1, getSplit());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (split_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSplit());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft other = (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) obj;

      boolean result = true;
      result = result && (hasSplit() == other.hasSplit());
      if (hasSplit()) {
        result = result && getSplit()
            .equals(other.getSplit());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSplit()) {
        hash = (37 * hash) + SPLIT_FIELD_NUMBER;
        hash = (53 * hash) + getSplit().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Split rule for sparse float features defaulting left for missing features.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft)
        tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeftOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.class, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (splitBuilder_ == null) {
          split_ = null;
        } else {
          split_ = null;
          splitBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft build() {
        tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft result = new tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft(this);
        if (splitBuilder_ == null) {
          result.split_ = split_;
        } else {
          result.split_ = splitBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft.getDefaultInstance()) return this;
        if (other.hasSplit()) {
          mergeSplit(other.getSplit());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit split_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder> splitBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public boolean hasSplit() {
        return splitBuilder_ != null || split_ != null;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getSplit() {
        if (splitBuilder_ == null) {
          return split_ == null ? tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance() : split_;
        } else {
          return splitBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public Builder setSplit(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit value) {
        if (splitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          split_ = value;
          onChanged();
        } else {
          splitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public Builder setSplit(
          tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder builderForValue) {
        if (splitBuilder_ == null) {
          split_ = builderForValue.build();
          onChanged();
        } else {
          splitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public Builder mergeSplit(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit value) {
        if (splitBuilder_ == null) {
          if (split_ != null) {
            split_ =
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.newBuilder(split_).mergeFrom(value).buildPartial();
          } else {
            split_ = value;
          }
          onChanged();
        } else {
          splitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public Builder clearSplit() {
        if (splitBuilder_ == null) {
          split_ = null;
          onChanged();
        } else {
          split_ = null;
          splitBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder getSplitBuilder() {
        
        onChanged();
        return getSplitFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder getSplitOrBuilder() {
        if (splitBuilder_ != null) {
          return splitBuilder_.getMessageOrBuilder();
        } else {
          return split_ == null ?
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance() : split_;
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder> 
          getSplitFieldBuilder() {
        if (splitBuilder_ == null) {
          splitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder>(
                  getSplit(),
                  getParentForChildren(),
                  isClean());
          split_ = null;
        }
        return splitBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultLeft)
    private static final tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SparseFloatBinarySplitDefaultLeft>
        PARSER = new com.google.protobuf.AbstractParser<SparseFloatBinarySplitDefaultLeft>() {
      public SparseFloatBinarySplitDefaultLeft parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SparseFloatBinarySplitDefaultLeft(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SparseFloatBinarySplitDefaultLeft> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SparseFloatBinarySplitDefaultLeft> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultLeft getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SparseFloatBinarySplitDefaultRightOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    boolean hasSplit();
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getSplit();
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder getSplitOrBuilder();
  }
  /**
   * <pre>
   * Split rule for sparse float features defaulting right for missing features.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight}
   */
  public  static final class SparseFloatBinarySplitDefaultRight extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight)
      SparseFloatBinarySplitDefaultRightOrBuilder {
    // Use SparseFloatBinarySplitDefaultRight.newBuilder() to construct.
    private SparseFloatBinarySplitDefaultRight(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SparseFloatBinarySplitDefaultRight() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SparseFloatBinarySplitDefaultRight(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder subBuilder = null;
              if (split_ != null) {
                subBuilder = split_.toBuilder();
              }
              split_ = input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(split_);
                split_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.class, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.Builder.class);
    }

    public static final int SPLIT_FIELD_NUMBER = 1;
    private tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit split_;
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    public boolean hasSplit() {
      return split_ != null;
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getSplit() {
      return split_ == null ? tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance() : split_;
    }
    /**
     * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder getSplitOrBuilder() {
      return getSplit();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (split_ != null) {
        output.writeMessage(1, getSplit());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (split_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSplit());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight other = (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) obj;

      boolean result = true;
      result = result && (hasSplit() == other.hasSplit());
      if (hasSplit()) {
        result = result && getSplit()
            .equals(other.getSplit());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSplit()) {
        hash = (37 * hash) + SPLIT_FIELD_NUMBER;
        hash = (53 * hash) + getSplit().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Split rule for sparse float features defaulting right for missing features.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight)
        tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRightOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.class, tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (splitBuilder_ == null) {
          split_ = null;
        } else {
          split_ = null;
          splitBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight build() {
        tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight result = new tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight(this);
        if (splitBuilder_ == null) {
          result.split_ = split_;
        } else {
          result.split_ = splitBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight.getDefaultInstance()) return this;
        if (other.hasSplit()) {
          mergeSplit(other.getSplit());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit split_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder> splitBuilder_;
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public boolean hasSplit() {
        return splitBuilder_ != null || split_ != null;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit getSplit() {
        if (splitBuilder_ == null) {
          return split_ == null ? tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance() : split_;
        } else {
          return splitBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public Builder setSplit(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit value) {
        if (splitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          split_ = value;
          onChanged();
        } else {
          splitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public Builder setSplit(
          tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder builderForValue) {
        if (splitBuilder_ == null) {
          split_ = builderForValue.build();
          onChanged();
        } else {
          splitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public Builder mergeSplit(tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit value) {
        if (splitBuilder_ == null) {
          if (split_ != null) {
            split_ =
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.newBuilder(split_).mergeFrom(value).buildPartial();
          } else {
            split_ = value;
          }
          onChanged();
        } else {
          splitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public Builder clearSplit() {
        if (splitBuilder_ == null) {
          split_ = null;
          onChanged();
        } else {
          split_ = null;
          splitBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder getSplitBuilder() {
        
        onChanged();
        return getSplitFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder getSplitOrBuilder() {
        if (splitBuilder_ != null) {
          return splitBuilder_.getMessageOrBuilder();
        } else {
          return split_ == null ?
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.getDefaultInstance() : split_;
        }
      }
      /**
       * <code>.tensorflow.boosted_trees.trees.DenseFloatBinarySplit split = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder> 
          getSplitFieldBuilder() {
        if (splitBuilder_ == null) {
          splitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplit.Builder, tensorflow.boosted_trees.trees.TreeConfig.DenseFloatBinarySplitOrBuilder>(
                  getSplit(),
                  getParentForChildren(),
                  isClean());
          split_ = null;
        }
        return splitBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.SparseFloatBinarySplitDefaultRight)
    private static final tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SparseFloatBinarySplitDefaultRight>
        PARSER = new com.google.protobuf.AbstractParser<SparseFloatBinarySplitDefaultRight>() {
      public SparseFloatBinarySplitDefaultRight parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SparseFloatBinarySplitDefaultRight(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SparseFloatBinarySplitDefaultRight> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SparseFloatBinarySplitDefaultRight> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.SparseFloatBinarySplitDefaultRight getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CategoricalIdBinarySplitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.CategoricalIdBinarySplit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Categorical feature column and Id describing
     * the rule feature == Id.
     * </pre>
     *
     * <code>int32 feature_column = 1;</code>
     */
    int getFeatureColumn();

    /**
     * <code>int64 feature_id = 2;</code>
     */
    long getFeatureId();

    /**
     * <pre>
     * Node children indexing into a contiguous
     * vector of nodes starting from the root.
     * </pre>
     *
     * <code>int32 left_id = 3;</code>
     */
    int getLeftId();

    /**
     * <code>int32 right_id = 4;</code>
     */
    int getRightId();
  }
  /**
   * <pre>
   * Split rule for categorical features with a single feature Id.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.CategoricalIdBinarySplit}
   */
  public  static final class CategoricalIdBinarySplit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.CategoricalIdBinarySplit)
      CategoricalIdBinarySplitOrBuilder {
    // Use CategoricalIdBinarySplit.newBuilder() to construct.
    private CategoricalIdBinarySplit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CategoricalIdBinarySplit() {
      featureColumn_ = 0;
      featureId_ = 0L;
      leftId_ = 0;
      rightId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CategoricalIdBinarySplit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              featureColumn_ = input.readInt32();
              break;
            }
            case 16: {

              featureId_ = input.readInt64();
              break;
            }
            case 24: {

              leftId_ = input.readInt32();
              break;
            }
            case 32: {

              rightId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.class, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.Builder.class);
    }

    public static final int FEATURE_COLUMN_FIELD_NUMBER = 1;
    private int featureColumn_;
    /**
     * <pre>
     * Categorical feature column and Id describing
     * the rule feature == Id.
     * </pre>
     *
     * <code>int32 feature_column = 1;</code>
     */
    public int getFeatureColumn() {
      return featureColumn_;
    }

    public static final int FEATURE_ID_FIELD_NUMBER = 2;
    private long featureId_;
    /**
     * <code>int64 feature_id = 2;</code>
     */
    public long getFeatureId() {
      return featureId_;
    }

    public static final int LEFT_ID_FIELD_NUMBER = 3;
    private int leftId_;
    /**
     * <pre>
     * Node children indexing into a contiguous
     * vector of nodes starting from the root.
     * </pre>
     *
     * <code>int32 left_id = 3;</code>
     */
    public int getLeftId() {
      return leftId_;
    }

    public static final int RIGHT_ID_FIELD_NUMBER = 4;
    private int rightId_;
    /**
     * <code>int32 right_id = 4;</code>
     */
    public int getRightId() {
      return rightId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (featureColumn_ != 0) {
        output.writeInt32(1, featureColumn_);
      }
      if (featureId_ != 0L) {
        output.writeInt64(2, featureId_);
      }
      if (leftId_ != 0) {
        output.writeInt32(3, leftId_);
      }
      if (rightId_ != 0) {
        output.writeInt32(4, rightId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (featureColumn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, featureColumn_);
      }
      if (featureId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, featureId_);
      }
      if (leftId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, leftId_);
      }
      if (rightId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rightId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit other = (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) obj;

      boolean result = true;
      result = result && (getFeatureColumn()
          == other.getFeatureColumn());
      result = result && (getFeatureId()
          == other.getFeatureId());
      result = result && (getLeftId()
          == other.getLeftId());
      result = result && (getRightId()
          == other.getRightId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FEATURE_COLUMN_FIELD_NUMBER;
      hash = (53 * hash) + getFeatureColumn();
      hash = (37 * hash) + FEATURE_ID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getFeatureId());
      hash = (37 * hash) + LEFT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getLeftId();
      hash = (37 * hash) + RIGHT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRightId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Split rule for categorical features with a single feature Id.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.CategoricalIdBinarySplit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.CategoricalIdBinarySplit)
        tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.class, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        featureColumn_ = 0;

        featureId_ = 0L;

        leftId_ = 0;

        rightId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit build() {
        tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit result = new tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit(this);
        result.featureColumn_ = featureColumn_;
        result.featureId_ = featureId_;
        result.leftId_ = leftId_;
        result.rightId_ = rightId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit.getDefaultInstance()) return this;
        if (other.getFeatureColumn() != 0) {
          setFeatureColumn(other.getFeatureColumn());
        }
        if (other.getFeatureId() != 0L) {
          setFeatureId(other.getFeatureId());
        }
        if (other.getLeftId() != 0) {
          setLeftId(other.getLeftId());
        }
        if (other.getRightId() != 0) {
          setRightId(other.getRightId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int featureColumn_ ;
      /**
       * <pre>
       * Categorical feature column and Id describing
       * the rule feature == Id.
       * </pre>
       *
       * <code>int32 feature_column = 1;</code>
       */
      public int getFeatureColumn() {
        return featureColumn_;
      }
      /**
       * <pre>
       * Categorical feature column and Id describing
       * the rule feature == Id.
       * </pre>
       *
       * <code>int32 feature_column = 1;</code>
       */
      public Builder setFeatureColumn(int value) {
        
        featureColumn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Categorical feature column and Id describing
       * the rule feature == Id.
       * </pre>
       *
       * <code>int32 feature_column = 1;</code>
       */
      public Builder clearFeatureColumn() {
        
        featureColumn_ = 0;
        onChanged();
        return this;
      }

      private long featureId_ ;
      /**
       * <code>int64 feature_id = 2;</code>
       */
      public long getFeatureId() {
        return featureId_;
      }
      /**
       * <code>int64 feature_id = 2;</code>
       */
      public Builder setFeatureId(long value) {
        
        featureId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int64 feature_id = 2;</code>
       */
      public Builder clearFeatureId() {
        
        featureId_ = 0L;
        onChanged();
        return this;
      }

      private int leftId_ ;
      /**
       * <pre>
       * Node children indexing into a contiguous
       * vector of nodes starting from the root.
       * </pre>
       *
       * <code>int32 left_id = 3;</code>
       */
      public int getLeftId() {
        return leftId_;
      }
      /**
       * <pre>
       * Node children indexing into a contiguous
       * vector of nodes starting from the root.
       * </pre>
       *
       * <code>int32 left_id = 3;</code>
       */
      public Builder setLeftId(int value) {
        
        leftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node children indexing into a contiguous
       * vector of nodes starting from the root.
       * </pre>
       *
       * <code>int32 left_id = 3;</code>
       */
      public Builder clearLeftId() {
        
        leftId_ = 0;
        onChanged();
        return this;
      }

      private int rightId_ ;
      /**
       * <code>int32 right_id = 4;</code>
       */
      public int getRightId() {
        return rightId_;
      }
      /**
       * <code>int32 right_id = 4;</code>
       */
      public Builder setRightId(int value) {
        
        rightId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 right_id = 4;</code>
       */
      public Builder clearRightId() {
        
        rightId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.CategoricalIdBinarySplit)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.CategoricalIdBinarySplit)
    private static final tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CategoricalIdBinarySplit>
        PARSER = new com.google.protobuf.AbstractParser<CategoricalIdBinarySplit>() {
      public CategoricalIdBinarySplit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CategoricalIdBinarySplit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CategoricalIdBinarySplit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CategoricalIdBinarySplit> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdBinarySplit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface CategoricalIdSetMembershipBinarySplitOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Categorical feature column and Id describing
     * the rule feature ∈ feature_ids.
     * </pre>
     *
     * <code>int32 feature_column = 1;</code>
     */
    int getFeatureColumn();

    /**
     * <pre>
     * Sorted list of Ids in the set.
     * </pre>
     *
     * <code>repeated int64 feature_ids = 2;</code>
     */
    java.util.List<java.lang.Long> getFeatureIdsList();
    /**
     * <pre>
     * Sorted list of Ids in the set.
     * </pre>
     *
     * <code>repeated int64 feature_ids = 2;</code>
     */
    int getFeatureIdsCount();
    /**
     * <pre>
     * Sorted list of Ids in the set.
     * </pre>
     *
     * <code>repeated int64 feature_ids = 2;</code>
     */
    long getFeatureIds(int index);

    /**
     * <pre>
     * Node children indexing into a contiguous
     * vector of nodes starting from the root.
     * </pre>
     *
     * <code>int32 left_id = 3;</code>
     */
    int getLeftId();

    /**
     * <code>int32 right_id = 4;</code>
     */
    int getRightId();
  }
  /**
   * <pre>
   * Split rule for categorical features with a set of feature Ids.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit}
   */
  public  static final class CategoricalIdSetMembershipBinarySplit extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit)
      CategoricalIdSetMembershipBinarySplitOrBuilder {
    // Use CategoricalIdSetMembershipBinarySplit.newBuilder() to construct.
    private CategoricalIdSetMembershipBinarySplit(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CategoricalIdSetMembershipBinarySplit() {
      featureColumn_ = 0;
      featureIds_ = java.util.Collections.emptyList();
      leftId_ = 0;
      rightId_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private CategoricalIdSetMembershipBinarySplit(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              featureColumn_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                featureIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              featureIds_.add(input.readInt64());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                featureIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                featureIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {

              leftId_ = input.readInt32();
              break;
            }
            case 32: {

              rightId_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          featureIds_ = java.util.Collections.unmodifiableList(featureIds_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.class, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.Builder.class);
    }

    private int bitField0_;
    public static final int FEATURE_COLUMN_FIELD_NUMBER = 1;
    private int featureColumn_;
    /**
     * <pre>
     * Categorical feature column and Id describing
     * the rule feature ∈ feature_ids.
     * </pre>
     *
     * <code>int32 feature_column = 1;</code>
     */
    public int getFeatureColumn() {
      return featureColumn_;
    }

    public static final int FEATURE_IDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Long> featureIds_;
    /**
     * <pre>
     * Sorted list of Ids in the set.
     * </pre>
     *
     * <code>repeated int64 feature_ids = 2;</code>
     */
    public java.util.List<java.lang.Long>
        getFeatureIdsList() {
      return featureIds_;
    }
    /**
     * <pre>
     * Sorted list of Ids in the set.
     * </pre>
     *
     * <code>repeated int64 feature_ids = 2;</code>
     */
    public int getFeatureIdsCount() {
      return featureIds_.size();
    }
    /**
     * <pre>
     * Sorted list of Ids in the set.
     * </pre>
     *
     * <code>repeated int64 feature_ids = 2;</code>
     */
    public long getFeatureIds(int index) {
      return featureIds_.get(index);
    }
    private int featureIdsMemoizedSerializedSize = -1;

    public static final int LEFT_ID_FIELD_NUMBER = 3;
    private int leftId_;
    /**
     * <pre>
     * Node children indexing into a contiguous
     * vector of nodes starting from the root.
     * </pre>
     *
     * <code>int32 left_id = 3;</code>
     */
    public int getLeftId() {
      return leftId_;
    }

    public static final int RIGHT_ID_FIELD_NUMBER = 4;
    private int rightId_;
    /**
     * <code>int32 right_id = 4;</code>
     */
    public int getRightId() {
      return rightId_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (featureColumn_ != 0) {
        output.writeInt32(1, featureColumn_);
      }
      if (getFeatureIdsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(featureIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < featureIds_.size(); i++) {
        output.writeInt64NoTag(featureIds_.get(i));
      }
      if (leftId_ != 0) {
        output.writeInt32(3, leftId_);
      }
      if (rightId_ != 0) {
        output.writeInt32(4, rightId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (featureColumn_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, featureColumn_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < featureIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(featureIds_.get(i));
        }
        size += dataSize;
        if (!getFeatureIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        featureIdsMemoizedSerializedSize = dataSize;
      }
      if (leftId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, leftId_);
      }
      if (rightId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, rightId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit other = (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) obj;

      boolean result = true;
      result = result && (getFeatureColumn()
          == other.getFeatureColumn());
      result = result && getFeatureIdsList()
          .equals(other.getFeatureIdsList());
      result = result && (getLeftId()
          == other.getLeftId());
      result = result && (getRightId()
          == other.getRightId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FEATURE_COLUMN_FIELD_NUMBER;
      hash = (53 * hash) + getFeatureColumn();
      if (getFeatureIdsCount() > 0) {
        hash = (37 * hash) + FEATURE_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getFeatureIdsList().hashCode();
      }
      hash = (37 * hash) + LEFT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getLeftId();
      hash = (37 * hash) + RIGHT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getRightId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Split rule for categorical features with a set of feature Ids.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit)
        tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplitOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.class, tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        featureColumn_ = 0;

        featureIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        leftId_ = 0;

        rightId_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit build() {
        tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit result = new tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.featureColumn_ = featureColumn_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          featureIds_ = java.util.Collections.unmodifiableList(featureIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.featureIds_ = featureIds_;
        result.leftId_ = leftId_;
        result.rightId_ = rightId_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit.getDefaultInstance()) return this;
        if (other.getFeatureColumn() != 0) {
          setFeatureColumn(other.getFeatureColumn());
        }
        if (!other.featureIds_.isEmpty()) {
          if (featureIds_.isEmpty()) {
            featureIds_ = other.featureIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureFeatureIdsIsMutable();
            featureIds_.addAll(other.featureIds_);
          }
          onChanged();
        }
        if (other.getLeftId() != 0) {
          setLeftId(other.getLeftId());
        }
        if (other.getRightId() != 0) {
          setRightId(other.getRightId());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int featureColumn_ ;
      /**
       * <pre>
       * Categorical feature column and Id describing
       * the rule feature ∈ feature_ids.
       * </pre>
       *
       * <code>int32 feature_column = 1;</code>
       */
      public int getFeatureColumn() {
        return featureColumn_;
      }
      /**
       * <pre>
       * Categorical feature column and Id describing
       * the rule feature ∈ feature_ids.
       * </pre>
       *
       * <code>int32 feature_column = 1;</code>
       */
      public Builder setFeatureColumn(int value) {
        
        featureColumn_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Categorical feature column and Id describing
       * the rule feature ∈ feature_ids.
       * </pre>
       *
       * <code>int32 feature_column = 1;</code>
       */
      public Builder clearFeatureColumn() {
        
        featureColumn_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> featureIds_ = java.util.Collections.emptyList();
      private void ensureFeatureIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          featureIds_ = new java.util.ArrayList<java.lang.Long>(featureIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <pre>
       * Sorted list of Ids in the set.
       * </pre>
       *
       * <code>repeated int64 feature_ids = 2;</code>
       */
      public java.util.List<java.lang.Long>
          getFeatureIdsList() {
        return java.util.Collections.unmodifiableList(featureIds_);
      }
      /**
       * <pre>
       * Sorted list of Ids in the set.
       * </pre>
       *
       * <code>repeated int64 feature_ids = 2;</code>
       */
      public int getFeatureIdsCount() {
        return featureIds_.size();
      }
      /**
       * <pre>
       * Sorted list of Ids in the set.
       * </pre>
       *
       * <code>repeated int64 feature_ids = 2;</code>
       */
      public long getFeatureIds(int index) {
        return featureIds_.get(index);
      }
      /**
       * <pre>
       * Sorted list of Ids in the set.
       * </pre>
       *
       * <code>repeated int64 feature_ids = 2;</code>
       */
      public Builder setFeatureIds(
          int index, long value) {
        ensureFeatureIdsIsMutable();
        featureIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sorted list of Ids in the set.
       * </pre>
       *
       * <code>repeated int64 feature_ids = 2;</code>
       */
      public Builder addFeatureIds(long value) {
        ensureFeatureIdsIsMutable();
        featureIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sorted list of Ids in the set.
       * </pre>
       *
       * <code>repeated int64 feature_ids = 2;</code>
       */
      public Builder addAllFeatureIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureFeatureIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, featureIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sorted list of Ids in the set.
       * </pre>
       *
       * <code>repeated int64 feature_ids = 2;</code>
       */
      public Builder clearFeatureIds() {
        featureIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private int leftId_ ;
      /**
       * <pre>
       * Node children indexing into a contiguous
       * vector of nodes starting from the root.
       * </pre>
       *
       * <code>int32 left_id = 3;</code>
       */
      public int getLeftId() {
        return leftId_;
      }
      /**
       * <pre>
       * Node children indexing into a contiguous
       * vector of nodes starting from the root.
       * </pre>
       *
       * <code>int32 left_id = 3;</code>
       */
      public Builder setLeftId(int value) {
        
        leftId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Node children indexing into a contiguous
       * vector of nodes starting from the root.
       * </pre>
       *
       * <code>int32 left_id = 3;</code>
       */
      public Builder clearLeftId() {
        
        leftId_ = 0;
        onChanged();
        return this;
      }

      private int rightId_ ;
      /**
       * <code>int32 right_id = 4;</code>
       */
      public int getRightId() {
        return rightId_;
      }
      /**
       * <code>int32 right_id = 4;</code>
       */
      public Builder setRightId(int value) {
        
        rightId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 right_id = 4;</code>
       */
      public Builder clearRightId() {
        
        rightId_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.CategoricalIdSetMembershipBinarySplit)
    private static final tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CategoricalIdSetMembershipBinarySplit>
        PARSER = new com.google.protobuf.AbstractParser<CategoricalIdSetMembershipBinarySplit>() {
      public CategoricalIdSetMembershipBinarySplit parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new CategoricalIdSetMembershipBinarySplit(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<CategoricalIdSetMembershipBinarySplit> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CategoricalIdSetMembershipBinarySplit> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.CategoricalIdSetMembershipBinarySplit getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DecisionTreeConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.DecisionTreeConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    java.util.List<tensorflow.boosted_trees.trees.TreeConfig.TreeNode> 
        getNodesList();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.TreeNode getNodes(int index);
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    int getNodesCount();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder> 
        getNodesOrBuilderList();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder getNodesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * DecisionTreeConfig describes a list of connected nodes.
   * Node 0 must be the root and can carry any payload including a leaf
   * in the case of representing the bias.
   * Note that each node id is implicitly its index in the list of nodes.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.DecisionTreeConfig}
   */
  public  static final class DecisionTreeConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.DecisionTreeConfig)
      DecisionTreeConfigOrBuilder {
    // Use DecisionTreeConfig.newBuilder() to construct.
    private DecisionTreeConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DecisionTreeConfig() {
      nodes_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DecisionTreeConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodes_ = new java.util.ArrayList<tensorflow.boosted_trees.trees.TreeConfig.TreeNode>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodes_.add(
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.TreeNode.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = java.util.Collections.unmodifiableList(nodes_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.class, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder.class);
    }

    public static final int NODES_FIELD_NUMBER = 1;
    private java.util.List<tensorflow.boosted_trees.trees.TreeConfig.TreeNode> nodes_;
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.TreeNode> getNodesList() {
      return nodes_;
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    public java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder> 
        getNodesOrBuilderList() {
      return nodes_;
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    public int getNodesCount() {
      return nodes_.size();
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.TreeNode getNodes(int index) {
      return nodes_.get(index);
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder getNodesOrBuilder(
        int index) {
      return nodes_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nodes_.size(); i++) {
        output.writeMessage(1, nodes_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodes_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodes_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig other = (tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig) obj;

      boolean result = true;
      result = result && getNodesList()
          .equals(other.getNodesList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodesCount() > 0) {
        hash = (37 * hash) + NODES_FIELD_NUMBER;
        hash = (53 * hash) + getNodesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * DecisionTreeConfig describes a list of connected nodes.
     * Node 0 must be the root and can carry any payload including a leaf
     * in the case of representing the bias.
     * Note that each node id is implicitly its index in the list of nodes.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.DecisionTreeConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.DecisionTreeConfig)
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.class, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig build() {
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig result = new tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig(this);
        int from_bitField0_ = bitField0_;
        if (nodesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodes_ = java.util.Collections.unmodifiableList(nodes_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodes_ = nodes_;
        } else {
          result.nodes_ = nodesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.getDefaultInstance()) return this;
        if (nodesBuilder_ == null) {
          if (!other.nodes_.isEmpty()) {
            if (nodes_.isEmpty()) {
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesIsMutable();
              nodes_.addAll(other.nodes_);
            }
            onChanged();
          }
        } else {
          if (!other.nodes_.isEmpty()) {
            if (nodesBuilder_.isEmpty()) {
              nodesBuilder_.dispose();
              nodesBuilder_ = null;
              nodes_ = other.nodes_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesFieldBuilder() : null;
            } else {
              nodesBuilder_.addAllMessages(other.nodes_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.boosted_trees.trees.TreeConfig.TreeNode> nodes_ =
        java.util.Collections.emptyList();
      private void ensureNodesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodes_ = new java.util.ArrayList<tensorflow.boosted_trees.trees.TreeConfig.TreeNode>(nodes_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.TreeNode, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder> nodesBuilder_;

      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.TreeNode> getNodesList() {
        if (nodesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodes_);
        } else {
          return nodesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public int getNodesCount() {
        if (nodesBuilder_ == null) {
          return nodes_.size();
        } else {
          return nodesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode getNodes(int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);
        } else {
          return nodesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public Builder setNodes(
          int index, tensorflow.boosted_trees.trees.TreeConfig.TreeNode value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.set(index, value);
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public Builder setNodes(
          int index, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public Builder addNodes(tensorflow.boosted_trees.trees.TreeConfig.TreeNode value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public Builder addNodes(
          int index, tensorflow.boosted_trees.trees.TreeConfig.TreeNode value) {
        if (nodesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesIsMutable();
          nodes_.add(index, value);
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public Builder addNodes(
          tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public Builder addNodes(
          int index, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder builderForValue) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public Builder addAllNodes(
          java.lang.Iterable<? extends tensorflow.boosted_trees.trees.TreeConfig.TreeNode> values) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodes_);
          onChanged();
        } else {
          nodesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public Builder clearNodes() {
        if (nodesBuilder_ == null) {
          nodes_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public Builder removeNodes(int index) {
        if (nodesBuilder_ == null) {
          ensureNodesIsMutable();
          nodes_.remove(index);
          onChanged();
        } else {
          nodesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder getNodesBuilder(
          int index) {
        return getNodesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder getNodesOrBuilder(
          int index) {
        if (nodesBuilder_ == null) {
          return nodes_.get(index);  } else {
          return nodesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder> 
           getNodesOrBuilderList() {
        if (nodesBuilder_ != null) {
          return nodesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodes_);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder addNodesBuilder() {
        return getNodesFieldBuilder().addBuilder(
            tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder addNodesBuilder(
          int index) {
        return getNodesFieldBuilder().addBuilder(
            index, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.TreeNode nodes = 1;</code>
       */
      public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder> 
           getNodesBuilderList() {
        return getNodesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.TreeNode, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder> 
          getNodesFieldBuilder() {
        if (nodesBuilder_ == null) {
          nodesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.TreeNode, tensorflow.boosted_trees.trees.TreeConfig.TreeNode.Builder, tensorflow.boosted_trees.trees.TreeConfig.TreeNodeOrBuilder>(
                  nodes_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodes_ = null;
        }
        return nodesBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.DecisionTreeConfig)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.DecisionTreeConfig)
    private static final tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DecisionTreeConfig>
        PARSER = new com.google.protobuf.AbstractParser<DecisionTreeConfig>() {
      public DecisionTreeConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DecisionTreeConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DecisionTreeConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DecisionTreeConfig> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DecisionTreeMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.DecisionTreeMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * How many times tree weight was updated (due to reweighting of the final
     * ensemble, dropout, shrinkage etc).
     * </pre>
     *
     * <code>int32 num_tree_weight_updates = 1;</code>
     */
    int getNumTreeWeightUpdates();

    /**
     * <pre>
     * Number of layers grown for this tree.
     * </pre>
     *
     * <code>int32 num_layers_grown = 2;</code>
     */
    int getNumLayersGrown();

    /**
     * <pre>
     * Whether the tree is finalized in that no more layers can be grown.
     * </pre>
     *
     * <code>bool is_finalized = 3;</code>
     */
    boolean getIsFinalized();
  }
  /**
   * Protobuf type {@code tensorflow.boosted_trees.trees.DecisionTreeMetadata}
   */
  public  static final class DecisionTreeMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.DecisionTreeMetadata)
      DecisionTreeMetadataOrBuilder {
    // Use DecisionTreeMetadata.newBuilder() to construct.
    private DecisionTreeMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DecisionTreeMetadata() {
      numTreeWeightUpdates_ = 0;
      numLayersGrown_ = 0;
      isFinalized_ = false;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DecisionTreeMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              numTreeWeightUpdates_ = input.readInt32();
              break;
            }
            case 16: {

              numLayersGrown_ = input.readInt32();
              break;
            }
            case 24: {

              isFinalized_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.class, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder.class);
    }

    public static final int NUM_TREE_WEIGHT_UPDATES_FIELD_NUMBER = 1;
    private int numTreeWeightUpdates_;
    /**
     * <pre>
     * How many times tree weight was updated (due to reweighting of the final
     * ensemble, dropout, shrinkage etc).
     * </pre>
     *
     * <code>int32 num_tree_weight_updates = 1;</code>
     */
    public int getNumTreeWeightUpdates() {
      return numTreeWeightUpdates_;
    }

    public static final int NUM_LAYERS_GROWN_FIELD_NUMBER = 2;
    private int numLayersGrown_;
    /**
     * <pre>
     * Number of layers grown for this tree.
     * </pre>
     *
     * <code>int32 num_layers_grown = 2;</code>
     */
    public int getNumLayersGrown() {
      return numLayersGrown_;
    }

    public static final int IS_FINALIZED_FIELD_NUMBER = 3;
    private boolean isFinalized_;
    /**
     * <pre>
     * Whether the tree is finalized in that no more layers can be grown.
     * </pre>
     *
     * <code>bool is_finalized = 3;</code>
     */
    public boolean getIsFinalized() {
      return isFinalized_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (numTreeWeightUpdates_ != 0) {
        output.writeInt32(1, numTreeWeightUpdates_);
      }
      if (numLayersGrown_ != 0) {
        output.writeInt32(2, numLayersGrown_);
      }
      if (isFinalized_ != false) {
        output.writeBool(3, isFinalized_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (numTreeWeightUpdates_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, numTreeWeightUpdates_);
      }
      if (numLayersGrown_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, numLayersGrown_);
      }
      if (isFinalized_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, isFinalized_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata other = (tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata) obj;

      boolean result = true;
      result = result && (getNumTreeWeightUpdates()
          == other.getNumTreeWeightUpdates());
      result = result && (getNumLayersGrown()
          == other.getNumLayersGrown());
      result = result && (getIsFinalized()
          == other.getIsFinalized());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUM_TREE_WEIGHT_UPDATES_FIELD_NUMBER;
      hash = (53 * hash) + getNumTreeWeightUpdates();
      hash = (37 * hash) + NUM_LAYERS_GROWN_FIELD_NUMBER;
      hash = (53 * hash) + getNumLayersGrown();
      hash = (37 * hash) + IS_FINALIZED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsFinalized());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.boosted_trees.trees.DecisionTreeMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.DecisionTreeMetadata)
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.class, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        numTreeWeightUpdates_ = 0;

        numLayersGrown_ = 0;

        isFinalized_ = false;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata build() {
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata result = new tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata(this);
        result.numTreeWeightUpdates_ = numTreeWeightUpdates_;
        result.numLayersGrown_ = numLayersGrown_;
        result.isFinalized_ = isFinalized_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.getDefaultInstance()) return this;
        if (other.getNumTreeWeightUpdates() != 0) {
          setNumTreeWeightUpdates(other.getNumTreeWeightUpdates());
        }
        if (other.getNumLayersGrown() != 0) {
          setNumLayersGrown(other.getNumLayersGrown());
        }
        if (other.getIsFinalized() != false) {
          setIsFinalized(other.getIsFinalized());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int numTreeWeightUpdates_ ;
      /**
       * <pre>
       * How many times tree weight was updated (due to reweighting of the final
       * ensemble, dropout, shrinkage etc).
       * </pre>
       *
       * <code>int32 num_tree_weight_updates = 1;</code>
       */
      public int getNumTreeWeightUpdates() {
        return numTreeWeightUpdates_;
      }
      /**
       * <pre>
       * How many times tree weight was updated (due to reweighting of the final
       * ensemble, dropout, shrinkage etc).
       * </pre>
       *
       * <code>int32 num_tree_weight_updates = 1;</code>
       */
      public Builder setNumTreeWeightUpdates(int value) {
        
        numTreeWeightUpdates_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * How many times tree weight was updated (due to reweighting of the final
       * ensemble, dropout, shrinkage etc).
       * </pre>
       *
       * <code>int32 num_tree_weight_updates = 1;</code>
       */
      public Builder clearNumTreeWeightUpdates() {
        
        numTreeWeightUpdates_ = 0;
        onChanged();
        return this;
      }

      private int numLayersGrown_ ;
      /**
       * <pre>
       * Number of layers grown for this tree.
       * </pre>
       *
       * <code>int32 num_layers_grown = 2;</code>
       */
      public int getNumLayersGrown() {
        return numLayersGrown_;
      }
      /**
       * <pre>
       * Number of layers grown for this tree.
       * </pre>
       *
       * <code>int32 num_layers_grown = 2;</code>
       */
      public Builder setNumLayersGrown(int value) {
        
        numLayersGrown_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of layers grown for this tree.
       * </pre>
       *
       * <code>int32 num_layers_grown = 2;</code>
       */
      public Builder clearNumLayersGrown() {
        
        numLayersGrown_ = 0;
        onChanged();
        return this;
      }

      private boolean isFinalized_ ;
      /**
       * <pre>
       * Whether the tree is finalized in that no more layers can be grown.
       * </pre>
       *
       * <code>bool is_finalized = 3;</code>
       */
      public boolean getIsFinalized() {
        return isFinalized_;
      }
      /**
       * <pre>
       * Whether the tree is finalized in that no more layers can be grown.
       * </pre>
       *
       * <code>bool is_finalized = 3;</code>
       */
      public Builder setIsFinalized(boolean value) {
        
        isFinalized_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether the tree is finalized in that no more layers can be grown.
       * </pre>
       *
       * <code>bool is_finalized = 3;</code>
       */
      public Builder clearIsFinalized() {
        
        isFinalized_ = false;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.DecisionTreeMetadata)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.DecisionTreeMetadata)
    private static final tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DecisionTreeMetadata>
        PARSER = new com.google.protobuf.AbstractParser<DecisionTreeMetadata>() {
      public DecisionTreeMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DecisionTreeMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DecisionTreeMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DecisionTreeMetadata> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GrowingMetadataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.GrowingMetadata)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Number of trees that we have attempted to build. After pruning, these
     * trees might have been removed.
     * </pre>
     *
     * <code>int64 num_trees_attempted = 1;</code>
     */
    long getNumTreesAttempted();

    /**
     * <pre>
     * Number of layers that we have attempted to build. After pruning, these
     * layers might have been removed.
     * </pre>
     *
     * <code>int64 num_layers_attempted = 2;</code>
     */
    long getNumLayersAttempted();

    /**
     * <pre>
     * Sorted list of column handlers that have been used in at least one split
     * so far.
     * </pre>
     *
     * <code>repeated int64 used_handler_ids = 3;</code>
     */
    java.util.List<java.lang.Long> getUsedHandlerIdsList();
    /**
     * <pre>
     * Sorted list of column handlers that have been used in at least one split
     * so far.
     * </pre>
     *
     * <code>repeated int64 used_handler_ids = 3;</code>
     */
    int getUsedHandlerIdsCount();
    /**
     * <pre>
     * Sorted list of column handlers that have been used in at least one split
     * so far.
     * </pre>
     *
     * <code>repeated int64 used_handler_ids = 3;</code>
     */
    long getUsedHandlerIds(int index);
  }
  /**
   * Protobuf type {@code tensorflow.boosted_trees.trees.GrowingMetadata}
   */
  public  static final class GrowingMetadata extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.GrowingMetadata)
      GrowingMetadataOrBuilder {
    // Use GrowingMetadata.newBuilder() to construct.
    private GrowingMetadata(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GrowingMetadata() {
      numTreesAttempted_ = 0L;
      numLayersAttempted_ = 0L;
      usedHandlerIds_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GrowingMetadata(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {

              numTreesAttempted_ = input.readInt64();
              break;
            }
            case 16: {

              numLayersAttempted_ = input.readInt64();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                usedHandlerIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              usedHandlerIds_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                usedHandlerIds_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                usedHandlerIds_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          usedHandlerIds_ = java.util.Collections.unmodifiableList(usedHandlerIds_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.class, tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.Builder.class);
    }

    private int bitField0_;
    public static final int NUM_TREES_ATTEMPTED_FIELD_NUMBER = 1;
    private long numTreesAttempted_;
    /**
     * <pre>
     * Number of trees that we have attempted to build. After pruning, these
     * trees might have been removed.
     * </pre>
     *
     * <code>int64 num_trees_attempted = 1;</code>
     */
    public long getNumTreesAttempted() {
      return numTreesAttempted_;
    }

    public static final int NUM_LAYERS_ATTEMPTED_FIELD_NUMBER = 2;
    private long numLayersAttempted_;
    /**
     * <pre>
     * Number of layers that we have attempted to build. After pruning, these
     * layers might have been removed.
     * </pre>
     *
     * <code>int64 num_layers_attempted = 2;</code>
     */
    public long getNumLayersAttempted() {
      return numLayersAttempted_;
    }

    public static final int USED_HANDLER_IDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> usedHandlerIds_;
    /**
     * <pre>
     * Sorted list of column handlers that have been used in at least one split
     * so far.
     * </pre>
     *
     * <code>repeated int64 used_handler_ids = 3;</code>
     */
    public java.util.List<java.lang.Long>
        getUsedHandlerIdsList() {
      return usedHandlerIds_;
    }
    /**
     * <pre>
     * Sorted list of column handlers that have been used in at least one split
     * so far.
     * </pre>
     *
     * <code>repeated int64 used_handler_ids = 3;</code>
     */
    public int getUsedHandlerIdsCount() {
      return usedHandlerIds_.size();
    }
    /**
     * <pre>
     * Sorted list of column handlers that have been used in at least one split
     * so far.
     * </pre>
     *
     * <code>repeated int64 used_handler_ids = 3;</code>
     */
    public long getUsedHandlerIds(int index) {
      return usedHandlerIds_.get(index);
    }
    private int usedHandlerIdsMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (numTreesAttempted_ != 0L) {
        output.writeInt64(1, numTreesAttempted_);
      }
      if (numLayersAttempted_ != 0L) {
        output.writeInt64(2, numLayersAttempted_);
      }
      if (getUsedHandlerIdsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(usedHandlerIdsMemoizedSerializedSize);
      }
      for (int i = 0; i < usedHandlerIds_.size(); i++) {
        output.writeInt64NoTag(usedHandlerIds_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (numTreesAttempted_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, numTreesAttempted_);
      }
      if (numLayersAttempted_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(2, numLayersAttempted_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < usedHandlerIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(usedHandlerIds_.get(i));
        }
        size += dataSize;
        if (!getUsedHandlerIdsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        usedHandlerIdsMemoizedSerializedSize = dataSize;
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata other = (tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata) obj;

      boolean result = true;
      result = result && (getNumTreesAttempted()
          == other.getNumTreesAttempted());
      result = result && (getNumLayersAttempted()
          == other.getNumLayersAttempted());
      result = result && getUsedHandlerIdsList()
          .equals(other.getUsedHandlerIdsList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NUM_TREES_ATTEMPTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumTreesAttempted());
      hash = (37 * hash) + NUM_LAYERS_ATTEMPTED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getNumLayersAttempted());
      if (getUsedHandlerIdsCount() > 0) {
        hash = (37 * hash) + USED_HANDLER_IDS_FIELD_NUMBER;
        hash = (53 * hash) + getUsedHandlerIdsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.boosted_trees.trees.GrowingMetadata}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.GrowingMetadata)
        tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.class, tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        numTreesAttempted_ = 0L;

        numLayersAttempted_ = 0L;

        usedHandlerIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata build() {
        tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata result = new tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.numTreesAttempted_ = numTreesAttempted_;
        result.numLayersAttempted_ = numLayersAttempted_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          usedHandlerIds_ = java.util.Collections.unmodifiableList(usedHandlerIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.usedHandlerIds_ = usedHandlerIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.getDefaultInstance()) return this;
        if (other.getNumTreesAttempted() != 0L) {
          setNumTreesAttempted(other.getNumTreesAttempted());
        }
        if (other.getNumLayersAttempted() != 0L) {
          setNumLayersAttempted(other.getNumLayersAttempted());
        }
        if (!other.usedHandlerIds_.isEmpty()) {
          if (usedHandlerIds_.isEmpty()) {
            usedHandlerIds_ = other.usedHandlerIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureUsedHandlerIdsIsMutable();
            usedHandlerIds_.addAll(other.usedHandlerIds_);
          }
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long numTreesAttempted_ ;
      /**
       * <pre>
       * Number of trees that we have attempted to build. After pruning, these
       * trees might have been removed.
       * </pre>
       *
       * <code>int64 num_trees_attempted = 1;</code>
       */
      public long getNumTreesAttempted() {
        return numTreesAttempted_;
      }
      /**
       * <pre>
       * Number of trees that we have attempted to build. After pruning, these
       * trees might have been removed.
       * </pre>
       *
       * <code>int64 num_trees_attempted = 1;</code>
       */
      public Builder setNumTreesAttempted(long value) {
        
        numTreesAttempted_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of trees that we have attempted to build. After pruning, these
       * trees might have been removed.
       * </pre>
       *
       * <code>int64 num_trees_attempted = 1;</code>
       */
      public Builder clearNumTreesAttempted() {
        
        numTreesAttempted_ = 0L;
        onChanged();
        return this;
      }

      private long numLayersAttempted_ ;
      /**
       * <pre>
       * Number of layers that we have attempted to build. After pruning, these
       * layers might have been removed.
       * </pre>
       *
       * <code>int64 num_layers_attempted = 2;</code>
       */
      public long getNumLayersAttempted() {
        return numLayersAttempted_;
      }
      /**
       * <pre>
       * Number of layers that we have attempted to build. After pruning, these
       * layers might have been removed.
       * </pre>
       *
       * <code>int64 num_layers_attempted = 2;</code>
       */
      public Builder setNumLayersAttempted(long value) {
        
        numLayersAttempted_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of layers that we have attempted to build. After pruning, these
       * layers might have been removed.
       * </pre>
       *
       * <code>int64 num_layers_attempted = 2;</code>
       */
      public Builder clearNumLayersAttempted() {
        
        numLayersAttempted_ = 0L;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Long> usedHandlerIds_ = java.util.Collections.emptyList();
      private void ensureUsedHandlerIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          usedHandlerIds_ = new java.util.ArrayList<java.lang.Long>(usedHandlerIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * Sorted list of column handlers that have been used in at least one split
       * so far.
       * </pre>
       *
       * <code>repeated int64 used_handler_ids = 3;</code>
       */
      public java.util.List<java.lang.Long>
          getUsedHandlerIdsList() {
        return java.util.Collections.unmodifiableList(usedHandlerIds_);
      }
      /**
       * <pre>
       * Sorted list of column handlers that have been used in at least one split
       * so far.
       * </pre>
       *
       * <code>repeated int64 used_handler_ids = 3;</code>
       */
      public int getUsedHandlerIdsCount() {
        return usedHandlerIds_.size();
      }
      /**
       * <pre>
       * Sorted list of column handlers that have been used in at least one split
       * so far.
       * </pre>
       *
       * <code>repeated int64 used_handler_ids = 3;</code>
       */
      public long getUsedHandlerIds(int index) {
        return usedHandlerIds_.get(index);
      }
      /**
       * <pre>
       * Sorted list of column handlers that have been used in at least one split
       * so far.
       * </pre>
       *
       * <code>repeated int64 used_handler_ids = 3;</code>
       */
      public Builder setUsedHandlerIds(
          int index, long value) {
        ensureUsedHandlerIdsIsMutable();
        usedHandlerIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sorted list of column handlers that have been used in at least one split
       * so far.
       * </pre>
       *
       * <code>repeated int64 used_handler_ids = 3;</code>
       */
      public Builder addUsedHandlerIds(long value) {
        ensureUsedHandlerIdsIsMutable();
        usedHandlerIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sorted list of column handlers that have been used in at least one split
       * so far.
       * </pre>
       *
       * <code>repeated int64 used_handler_ids = 3;</code>
       */
      public Builder addAllUsedHandlerIds(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureUsedHandlerIdsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, usedHandlerIds_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Sorted list of column handlers that have been used in at least one split
       * so far.
       * </pre>
       *
       * <code>repeated int64 used_handler_ids = 3;</code>
       */
      public Builder clearUsedHandlerIds() {
        usedHandlerIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.GrowingMetadata)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.GrowingMetadata)
    private static final tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GrowingMetadata>
        PARSER = new com.google.protobuf.AbstractParser<GrowingMetadata>() {
      public GrowingMetadata parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GrowingMetadata(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GrowingMetadata> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GrowingMetadata> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DecisionTreeEnsembleConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.boosted_trees.trees.DecisionTreeEnsembleConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig> 
        getTreesList();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig getTrees(int index);
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    int getTreesCount();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder> 
        getTreesOrBuilderList();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder getTreesOrBuilder(
        int index);

    /**
     * <code>repeated float tree_weights = 2;</code>
     */
    java.util.List<java.lang.Float> getTreeWeightsList();
    /**
     * <code>repeated float tree_weights = 2;</code>
     */
    int getTreeWeightsCount();
    /**
     * <code>repeated float tree_weights = 2;</code>
     */
    float getTreeWeights(int index);

    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata> 
        getTreeMetadataList();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata getTreeMetadata(int index);
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    int getTreeMetadataCount();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder> 
        getTreeMetadataOrBuilderList();
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder getTreeMetadataOrBuilder(
        int index);

    /**
     * <pre>
     * Metadata that is used during the training.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
     */
    boolean hasGrowingMetadata();
    /**
     * <pre>
     * Metadata that is used during the training.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata getGrowingMetadata();
    /**
     * <pre>
     * Metadata that is used during the training.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
     */
    tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadataOrBuilder getGrowingMetadataOrBuilder();
  }
  /**
   * <pre>
   * DecisionTreeEnsembleConfig describes an ensemble of decision trees.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.trees.DecisionTreeEnsembleConfig}
   */
  public  static final class DecisionTreeEnsembleConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.trees.DecisionTreeEnsembleConfig)
      DecisionTreeEnsembleConfigOrBuilder {
    // Use DecisionTreeEnsembleConfig.newBuilder() to construct.
    private DecisionTreeEnsembleConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DecisionTreeEnsembleConfig() {
      trees_ = java.util.Collections.emptyList();
      treeWeights_ = java.util.Collections.emptyList();
      treeMetadata_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DecisionTreeEnsembleConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                trees_ = new java.util.ArrayList<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig>();
                mutable_bitField0_ |= 0x00000001;
              }
              trees_.add(
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.parser(), extensionRegistry));
              break;
            }
            case 21: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                treeWeights_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              treeWeights_.add(input.readFloat());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                treeWeights_ = new java.util.ArrayList<java.lang.Float>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                treeWeights_.add(input.readFloat());
              }
              input.popLimit(limit);
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                treeMetadata_ = new java.util.ArrayList<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata>();
                mutable_bitField0_ |= 0x00000004;
              }
              treeMetadata_.add(
                  input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.parser(), extensionRegistry));
              break;
            }
            case 34: {
              tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.Builder subBuilder = null;
              if (growingMetadata_ != null) {
                subBuilder = growingMetadata_.toBuilder();
              }
              growingMetadata_ = input.readMessage(tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(growingMetadata_);
                growingMetadata_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          trees_ = java.util.Collections.unmodifiableList(trees_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          treeWeights_ = java.util.Collections.unmodifiableList(treeWeights_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          treeMetadata_ = java.util.Collections.unmodifiableList(treeMetadata_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig.class, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig.Builder.class);
    }

    private int bitField0_;
    public static final int TREES_FIELD_NUMBER = 1;
    private java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig> trees_;
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig> getTreesList() {
      return trees_;
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    public java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder> 
        getTreesOrBuilderList() {
      return trees_;
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    public int getTreesCount() {
      return trees_.size();
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig getTrees(int index) {
      return trees_.get(index);
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder getTreesOrBuilder(
        int index) {
      return trees_.get(index);
    }

    public static final int TREE_WEIGHTS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Float> treeWeights_;
    /**
     * <code>repeated float tree_weights = 2;</code>
     */
    public java.util.List<java.lang.Float>
        getTreeWeightsList() {
      return treeWeights_;
    }
    /**
     * <code>repeated float tree_weights = 2;</code>
     */
    public int getTreeWeightsCount() {
      return treeWeights_.size();
    }
    /**
     * <code>repeated float tree_weights = 2;</code>
     */
    public float getTreeWeights(int index) {
      return treeWeights_.get(index);
    }
    private int treeWeightsMemoizedSerializedSize = -1;

    public static final int TREE_METADATA_FIELD_NUMBER = 3;
    private java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata> treeMetadata_;
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata> getTreeMetadataList() {
      return treeMetadata_;
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    public java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder> 
        getTreeMetadataOrBuilderList() {
      return treeMetadata_;
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    public int getTreeMetadataCount() {
      return treeMetadata_.size();
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata getTreeMetadata(int index) {
      return treeMetadata_.get(index);
    }
    /**
     * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder getTreeMetadataOrBuilder(
        int index) {
      return treeMetadata_.get(index);
    }

    public static final int GROWING_METADATA_FIELD_NUMBER = 4;
    private tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata growingMetadata_;
    /**
     * <pre>
     * Metadata that is used during the training.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
     */
    public boolean hasGrowingMetadata() {
      return growingMetadata_ != null;
    }
    /**
     * <pre>
     * Metadata that is used during the training.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata getGrowingMetadata() {
      return growingMetadata_ == null ? tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.getDefaultInstance() : growingMetadata_;
    }
    /**
     * <pre>
     * Metadata that is used during the training.
     * </pre>
     *
     * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
     */
    public tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadataOrBuilder getGrowingMetadataOrBuilder() {
      return getGrowingMetadata();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < trees_.size(); i++) {
        output.writeMessage(1, trees_.get(i));
      }
      if (getTreeWeightsList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(treeWeightsMemoizedSerializedSize);
      }
      for (int i = 0; i < treeWeights_.size(); i++) {
        output.writeFloatNoTag(treeWeights_.get(i));
      }
      for (int i = 0; i < treeMetadata_.size(); i++) {
        output.writeMessage(3, treeMetadata_.get(i));
      }
      if (growingMetadata_ != null) {
        output.writeMessage(4, getGrowingMetadata());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < trees_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, trees_.get(i));
      }
      {
        int dataSize = 0;
        dataSize = 4 * getTreeWeightsList().size();
        size += dataSize;
        if (!getTreeWeightsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        treeWeightsMemoizedSerializedSize = dataSize;
      }
      for (int i = 0; i < treeMetadata_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, treeMetadata_.get(i));
      }
      if (growingMetadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getGrowingMetadata());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig)) {
        return super.equals(obj);
      }
      tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig other = (tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig) obj;

      boolean result = true;
      result = result && getTreesList()
          .equals(other.getTreesList());
      result = result && getTreeWeightsList()
          .equals(other.getTreeWeightsList());
      result = result && getTreeMetadataList()
          .equals(other.getTreeMetadataList());
      result = result && (hasGrowingMetadata() == other.hasGrowingMetadata());
      if (hasGrowingMetadata()) {
        result = result && getGrowingMetadata()
            .equals(other.getGrowingMetadata());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTreesCount() > 0) {
        hash = (37 * hash) + TREES_FIELD_NUMBER;
        hash = (53 * hash) + getTreesList().hashCode();
      }
      if (getTreeWeightsCount() > 0) {
        hash = (37 * hash) + TREE_WEIGHTS_FIELD_NUMBER;
        hash = (53 * hash) + getTreeWeightsList().hashCode();
      }
      if (getTreeMetadataCount() > 0) {
        hash = (37 * hash) + TREE_METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getTreeMetadataList().hashCode();
      }
      if (hasGrowingMetadata()) {
        hash = (37 * hash) + GROWING_METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getGrowingMetadata().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * DecisionTreeEnsembleConfig describes an ensemble of decision trees.
     * </pre>
     *
     * Protobuf type {@code tensorflow.boosted_trees.trees.DecisionTreeEnsembleConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.trees.DecisionTreeEnsembleConfig)
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig.class, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig.Builder.class);
      }

      // Construct using tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTreesFieldBuilder();
          getTreeMetadataFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (treesBuilder_ == null) {
          trees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          treesBuilder_.clear();
        }
        treeWeights_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (treeMetadataBuilder_ == null) {
          treeMetadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          treeMetadataBuilder_.clear();
        }
        if (growingMetadataBuilder_ == null) {
          growingMetadata_ = null;
        } else {
          growingMetadata_ = null;
          growingMetadataBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_descriptor;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig getDefaultInstanceForType() {
        return tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig.getDefaultInstance();
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig build() {
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig buildPartial() {
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig result = new tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (treesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            trees_ = java.util.Collections.unmodifiableList(trees_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.trees_ = trees_;
        } else {
          result.trees_ = treesBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          treeWeights_ = java.util.Collections.unmodifiableList(treeWeights_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.treeWeights_ = treeWeights_;
        if (treeMetadataBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            treeMetadata_ = java.util.Collections.unmodifiableList(treeMetadata_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.treeMetadata_ = treeMetadata_;
        } else {
          result.treeMetadata_ = treeMetadataBuilder_.build();
        }
        if (growingMetadataBuilder_ == null) {
          result.growingMetadata_ = growingMetadata_;
        } else {
          result.growingMetadata_ = growingMetadataBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig) {
          return mergeFrom((tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig other) {
        if (other == tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig.getDefaultInstance()) return this;
        if (treesBuilder_ == null) {
          if (!other.trees_.isEmpty()) {
            if (trees_.isEmpty()) {
              trees_ = other.trees_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTreesIsMutable();
              trees_.addAll(other.trees_);
            }
            onChanged();
          }
        } else {
          if (!other.trees_.isEmpty()) {
            if (treesBuilder_.isEmpty()) {
              treesBuilder_.dispose();
              treesBuilder_ = null;
              trees_ = other.trees_;
              bitField0_ = (bitField0_ & ~0x00000001);
              treesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTreesFieldBuilder() : null;
            } else {
              treesBuilder_.addAllMessages(other.trees_);
            }
          }
        }
        if (!other.treeWeights_.isEmpty()) {
          if (treeWeights_.isEmpty()) {
            treeWeights_ = other.treeWeights_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTreeWeightsIsMutable();
            treeWeights_.addAll(other.treeWeights_);
          }
          onChanged();
        }
        if (treeMetadataBuilder_ == null) {
          if (!other.treeMetadata_.isEmpty()) {
            if (treeMetadata_.isEmpty()) {
              treeMetadata_ = other.treeMetadata_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTreeMetadataIsMutable();
              treeMetadata_.addAll(other.treeMetadata_);
            }
            onChanged();
          }
        } else {
          if (!other.treeMetadata_.isEmpty()) {
            if (treeMetadataBuilder_.isEmpty()) {
              treeMetadataBuilder_.dispose();
              treeMetadataBuilder_ = null;
              treeMetadata_ = other.treeMetadata_;
              bitField0_ = (bitField0_ & ~0x00000004);
              treeMetadataBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTreeMetadataFieldBuilder() : null;
            } else {
              treeMetadataBuilder_.addAllMessages(other.treeMetadata_);
            }
          }
        }
        if (other.hasGrowingMetadata()) {
          mergeGrowingMetadata(other.getGrowingMetadata());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig> trees_ =
        java.util.Collections.emptyList();
      private void ensureTreesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          trees_ = new java.util.ArrayList<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig>(trees_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder> treesBuilder_;

      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig> getTreesList() {
        if (treesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(trees_);
        } else {
          return treesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public int getTreesCount() {
        if (treesBuilder_ == null) {
          return trees_.size();
        } else {
          return treesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig getTrees(int index) {
        if (treesBuilder_ == null) {
          return trees_.get(index);
        } else {
          return treesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public Builder setTrees(
          int index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig value) {
        if (treesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTreesIsMutable();
          trees_.set(index, value);
          onChanged();
        } else {
          treesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public Builder setTrees(
          int index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder builderForValue) {
        if (treesBuilder_ == null) {
          ensureTreesIsMutable();
          trees_.set(index, builderForValue.build());
          onChanged();
        } else {
          treesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public Builder addTrees(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig value) {
        if (treesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTreesIsMutable();
          trees_.add(value);
          onChanged();
        } else {
          treesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public Builder addTrees(
          int index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig value) {
        if (treesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTreesIsMutable();
          trees_.add(index, value);
          onChanged();
        } else {
          treesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public Builder addTrees(
          tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder builderForValue) {
        if (treesBuilder_ == null) {
          ensureTreesIsMutable();
          trees_.add(builderForValue.build());
          onChanged();
        } else {
          treesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public Builder addTrees(
          int index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder builderForValue) {
        if (treesBuilder_ == null) {
          ensureTreesIsMutable();
          trees_.add(index, builderForValue.build());
          onChanged();
        } else {
          treesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public Builder addAllTrees(
          java.lang.Iterable<? extends tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig> values) {
        if (treesBuilder_ == null) {
          ensureTreesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, trees_);
          onChanged();
        } else {
          treesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public Builder clearTrees() {
        if (treesBuilder_ == null) {
          trees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          treesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public Builder removeTrees(int index) {
        if (treesBuilder_ == null) {
          ensureTreesIsMutable();
          trees_.remove(index);
          onChanged();
        } else {
          treesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder getTreesBuilder(
          int index) {
        return getTreesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder getTreesOrBuilder(
          int index) {
        if (treesBuilder_ == null) {
          return trees_.get(index);  } else {
          return treesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder> 
           getTreesOrBuilderList() {
        if (treesBuilder_ != null) {
          return treesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(trees_);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder addTreesBuilder() {
        return getTreesFieldBuilder().addBuilder(
            tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder addTreesBuilder(
          int index) {
        return getTreesFieldBuilder().addBuilder(
            index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeConfig trees = 1;</code>
       */
      public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder> 
           getTreesBuilderList() {
        return getTreesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder> 
          getTreesFieldBuilder() {
        if (treesBuilder_ == null) {
          treesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfig.Builder, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeConfigOrBuilder>(
                  trees_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          trees_ = null;
        }
        return treesBuilder_;
      }

      private java.util.List<java.lang.Float> treeWeights_ = java.util.Collections.emptyList();
      private void ensureTreeWeightsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          treeWeights_ = new java.util.ArrayList<java.lang.Float>(treeWeights_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated float tree_weights = 2;</code>
       */
      public java.util.List<java.lang.Float>
          getTreeWeightsList() {
        return java.util.Collections.unmodifiableList(treeWeights_);
      }
      /**
       * <code>repeated float tree_weights = 2;</code>
       */
      public int getTreeWeightsCount() {
        return treeWeights_.size();
      }
      /**
       * <code>repeated float tree_weights = 2;</code>
       */
      public float getTreeWeights(int index) {
        return treeWeights_.get(index);
      }
      /**
       * <code>repeated float tree_weights = 2;</code>
       */
      public Builder setTreeWeights(
          int index, float value) {
        ensureTreeWeightsIsMutable();
        treeWeights_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float tree_weights = 2;</code>
       */
      public Builder addTreeWeights(float value) {
        ensureTreeWeightsIsMutable();
        treeWeights_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float tree_weights = 2;</code>
       */
      public Builder addAllTreeWeights(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureTreeWeightsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, treeWeights_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float tree_weights = 2;</code>
       */
      public Builder clearTreeWeights() {
        treeWeights_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata> treeMetadata_ =
        java.util.Collections.emptyList();
      private void ensureTreeMetadataIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          treeMetadata_ = new java.util.ArrayList<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata>(treeMetadata_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder> treeMetadataBuilder_;

      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata> getTreeMetadataList() {
        if (treeMetadataBuilder_ == null) {
          return java.util.Collections.unmodifiableList(treeMetadata_);
        } else {
          return treeMetadataBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public int getTreeMetadataCount() {
        if (treeMetadataBuilder_ == null) {
          return treeMetadata_.size();
        } else {
          return treeMetadataBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata getTreeMetadata(int index) {
        if (treeMetadataBuilder_ == null) {
          return treeMetadata_.get(index);
        } else {
          return treeMetadataBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public Builder setTreeMetadata(
          int index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata value) {
        if (treeMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTreeMetadataIsMutable();
          treeMetadata_.set(index, value);
          onChanged();
        } else {
          treeMetadataBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public Builder setTreeMetadata(
          int index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder builderForValue) {
        if (treeMetadataBuilder_ == null) {
          ensureTreeMetadataIsMutable();
          treeMetadata_.set(index, builderForValue.build());
          onChanged();
        } else {
          treeMetadataBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public Builder addTreeMetadata(tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata value) {
        if (treeMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTreeMetadataIsMutable();
          treeMetadata_.add(value);
          onChanged();
        } else {
          treeMetadataBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public Builder addTreeMetadata(
          int index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata value) {
        if (treeMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTreeMetadataIsMutable();
          treeMetadata_.add(index, value);
          onChanged();
        } else {
          treeMetadataBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public Builder addTreeMetadata(
          tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder builderForValue) {
        if (treeMetadataBuilder_ == null) {
          ensureTreeMetadataIsMutable();
          treeMetadata_.add(builderForValue.build());
          onChanged();
        } else {
          treeMetadataBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public Builder addTreeMetadata(
          int index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder builderForValue) {
        if (treeMetadataBuilder_ == null) {
          ensureTreeMetadataIsMutable();
          treeMetadata_.add(index, builderForValue.build());
          onChanged();
        } else {
          treeMetadataBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public Builder addAllTreeMetadata(
          java.lang.Iterable<? extends tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata> values) {
        if (treeMetadataBuilder_ == null) {
          ensureTreeMetadataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, treeMetadata_);
          onChanged();
        } else {
          treeMetadataBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public Builder clearTreeMetadata() {
        if (treeMetadataBuilder_ == null) {
          treeMetadata_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          treeMetadataBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public Builder removeTreeMetadata(int index) {
        if (treeMetadataBuilder_ == null) {
          ensureTreeMetadataIsMutable();
          treeMetadata_.remove(index);
          onChanged();
        } else {
          treeMetadataBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder getTreeMetadataBuilder(
          int index) {
        return getTreeMetadataFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder getTreeMetadataOrBuilder(
          int index) {
        if (treeMetadataBuilder_ == null) {
          return treeMetadata_.get(index);  } else {
          return treeMetadataBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public java.util.List<? extends tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder> 
           getTreeMetadataOrBuilderList() {
        if (treeMetadataBuilder_ != null) {
          return treeMetadataBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(treeMetadata_);
        }
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder addTreeMetadataBuilder() {
        return getTreeMetadataFieldBuilder().addBuilder(
            tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder addTreeMetadataBuilder(
          int index) {
        return getTreeMetadataFieldBuilder().addBuilder(
            index, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.boosted_trees.trees.DecisionTreeMetadata tree_metadata = 3;</code>
       */
      public java.util.List<tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder> 
           getTreeMetadataBuilderList() {
        return getTreeMetadataFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder> 
          getTreeMetadataFieldBuilder() {
        if (treeMetadataBuilder_ == null) {
          treeMetadataBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadata.Builder, tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeMetadataOrBuilder>(
                  treeMetadata_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          treeMetadata_ = null;
        }
        return treeMetadataBuilder_;
      }

      private tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata growingMetadata_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata, tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.Builder, tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadataOrBuilder> growingMetadataBuilder_;
      /**
       * <pre>
       * Metadata that is used during the training.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
       */
      public boolean hasGrowingMetadata() {
        return growingMetadataBuilder_ != null || growingMetadata_ != null;
      }
      /**
       * <pre>
       * Metadata that is used during the training.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata getGrowingMetadata() {
        if (growingMetadataBuilder_ == null) {
          return growingMetadata_ == null ? tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.getDefaultInstance() : growingMetadata_;
        } else {
          return growingMetadataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Metadata that is used during the training.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
       */
      public Builder setGrowingMetadata(tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata value) {
        if (growingMetadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          growingMetadata_ = value;
          onChanged();
        } else {
          growingMetadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Metadata that is used during the training.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
       */
      public Builder setGrowingMetadata(
          tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.Builder builderForValue) {
        if (growingMetadataBuilder_ == null) {
          growingMetadata_ = builderForValue.build();
          onChanged();
        } else {
          growingMetadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Metadata that is used during the training.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
       */
      public Builder mergeGrowingMetadata(tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata value) {
        if (growingMetadataBuilder_ == null) {
          if (growingMetadata_ != null) {
            growingMetadata_ =
              tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.newBuilder(growingMetadata_).mergeFrom(value).buildPartial();
          } else {
            growingMetadata_ = value;
          }
          onChanged();
        } else {
          growingMetadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Metadata that is used during the training.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
       */
      public Builder clearGrowingMetadata() {
        if (growingMetadataBuilder_ == null) {
          growingMetadata_ = null;
          onChanged();
        } else {
          growingMetadata_ = null;
          growingMetadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Metadata that is used during the training.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.Builder getGrowingMetadataBuilder() {
        
        onChanged();
        return getGrowingMetadataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Metadata that is used during the training.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
       */
      public tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadataOrBuilder getGrowingMetadataOrBuilder() {
        if (growingMetadataBuilder_ != null) {
          return growingMetadataBuilder_.getMessageOrBuilder();
        } else {
          return growingMetadata_ == null ?
              tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.getDefaultInstance() : growingMetadata_;
        }
      }
      /**
       * <pre>
       * Metadata that is used during the training.
       * </pre>
       *
       * <code>.tensorflow.boosted_trees.trees.GrowingMetadata growing_metadata = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata, tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.Builder, tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadataOrBuilder> 
          getGrowingMetadataFieldBuilder() {
        if (growingMetadataBuilder_ == null) {
          growingMetadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata, tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadata.Builder, tensorflow.boosted_trees.trees.TreeConfig.GrowingMetadataOrBuilder>(
                  getGrowingMetadata(),
                  getParentForChildren(),
                  isClean());
          growingMetadata_ = null;
        }
        return growingMetadataBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.trees.DecisionTreeEnsembleConfig)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.trees.DecisionTreeEnsembleConfig)
    private static final tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig();
    }

    public static tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DecisionTreeEnsembleConfig>
        PARSER = new com.google.protobuf.AbstractParser<DecisionTreeEnsembleConfig>() {
      public DecisionTreeEnsembleConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DecisionTreeEnsembleConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DecisionTreeEnsembleConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DecisionTreeEnsembleConfig> getParserForType() {
      return PARSER;
    }

    public tensorflow.boosted_trees.trees.TreeConfig.DecisionTreeEnsembleConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_TreeNode_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_TreeNode_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_Leaf_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_Leaf_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_Vector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_Vector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_SparseVector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_SparseVector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n8tensorflow/contrib/boosted_trees/proto" +
      "/tree_config.proto\022\036tensorflow.boosted_t" +
      "rees.trees\"\267\005\n\010TreeNode\0224\n\004leaf\030\001 \001(\0132$." +
      "tensorflow.boosted_trees.trees.LeafH\000\022Y\n" +
      "\030dense_float_binary_split\030\002 \001(\01325.tensor" +
      "flow.boosted_trees.trees.DenseFloatBinar" +
      "ySplitH\000\022s\n&sparse_float_binary_split_de" +
      "fault_left\030\003 \001(\0132A.tensorflow.boosted_tr" +
      "ees.trees.SparseFloatBinarySplitDefaultL" +
      "eftH\000\022u\n\'sparse_float_binary_split_defau",
      "lt_right\030\004 \001(\0132B.tensorflow.boosted_tree" +
      "s.trees.SparseFloatBinarySplitDefaultRig" +
      "htH\000\022_\n\033categorical_id_binary_split\030\005 \001(" +
      "\01328.tensorflow.boosted_trees.trees.Categ" +
      "oricalIdBinarySplitH\000\022{\n*categorical_id_" +
      "set_membership_binary_split\030\006 \001(\0132E.tens" +
      "orflow.boosted_trees.trees.CategoricalId" +
      "SetMembershipBinarySplitH\000\022H\n\rnode_metad" +
      "ata\030\211\006 \001(\01320.tensorflow.boosted_trees.tr" +
      "ees.TreeNodeMetadataB\006\n\004node\"]\n\020TreeNode",
      "Metadata\022\014\n\004gain\030\001 \001(\002\022;\n\roriginal_leaf\030" +
      "\002 \001(\0132$.tensorflow.boosted_trees.trees.L" +
      "eaf\"\217\001\n\004Leaf\0228\n\006vector\030\001 \001(\0132&.tensorflo" +
      "w.boosted_trees.trees.VectorH\000\022E\n\rsparse" +
      "_vector\030\002 \001(\0132,.tensorflow.boosted_trees" +
      ".trees.SparseVectorH\000B\006\n\004leaf\"\027\n\006Vector\022" +
      "\r\n\005value\030\001 \003(\002\",\n\014SparseVector\022\r\n\005index\030" +
      "\001 \003(\005\022\r\n\005value\030\002 \003(\002\"{\n\025DenseFloatBinary" +
      "Split\022\026\n\016feature_column\030\001 \001(\005\022\024\n\014dimensi" +
      "on_id\030\005 \001(\005\022\021\n\tthreshold\030\002 \001(\002\022\017\n\007left_i",
      "d\030\003 \001(\005\022\020\n\010right_id\030\004 \001(\005\"i\n!SparseFloat" +
      "BinarySplitDefaultLeft\022D\n\005split\030\001 \001(\01325." +
      "tensorflow.boosted_trees.trees.DenseFloa" +
      "tBinarySplit\"j\n\"SparseFloatBinarySplitDe" +
      "faultRight\022D\n\005split\030\001 \001(\01325.tensorflow.b" +
      "oosted_trees.trees.DenseFloatBinarySplit" +
      "\"i\n\030CategoricalIdBinarySplit\022\026\n\016feature_" +
      "column\030\001 \001(\005\022\022\n\nfeature_id\030\002 \001(\003\022\017\n\007left" +
      "_id\030\003 \001(\005\022\020\n\010right_id\030\004 \001(\005\"w\n%Categoric" +
      "alIdSetMembershipBinarySplit\022\026\n\016feature_",
      "column\030\001 \001(\005\022\023\n\013feature_ids\030\002 \003(\003\022\017\n\007lef" +
      "t_id\030\003 \001(\005\022\020\n\010right_id\030\004 \001(\005\"M\n\022Decision" +
      "TreeConfig\0227\n\005nodes\030\001 \003(\0132(.tensorflow.b" +
      "oosted_trees.trees.TreeNode\"g\n\024DecisionT" +
      "reeMetadata\022\037\n\027num_tree_weight_updates\030\001" +
      " \001(\005\022\030\n\020num_layers_grown\030\002 \001(\005\022\024\n\014is_fin" +
      "alized\030\003 \001(\010\"f\n\017GrowingMetadata\022\033\n\023num_t" +
      "rees_attempted\030\001 \001(\003\022\034\n\024num_layers_attem" +
      "pted\030\002 \001(\003\022\030\n\020used_handler_ids\030\003 \003(\003\"\215\002\n" +
      "\032DecisionTreeEnsembleConfig\022A\n\005trees\030\001 \003",
      "(\01322.tensorflow.boosted_trees.trees.Deci" +
      "sionTreeConfig\022\024\n\014tree_weights\030\002 \003(\002\022K\n\r" +
      "tree_metadata\030\003 \003(\01324.tensorflow.boosted" +
      "_trees.trees.DecisionTreeMetadata\022I\n\020gro" +
      "wing_metadata\030\004 \001(\0132/.tensorflow.boosted" +
      "_trees.trees.GrowingMetadataB\003\370\001\001b\006proto" +
      "3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_tensorflow_boosted_trees_trees_TreeNode_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_boosted_trees_trees_TreeNode_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_TreeNode_descriptor,
        new java.lang.String[] { "Leaf", "DenseFloatBinarySplit", "SparseFloatBinarySplitDefaultLeft", "SparseFloatBinarySplitDefaultRight", "CategoricalIdBinarySplit", "CategoricalIdSetMembershipBinarySplit", "NodeMetadata", "Node", });
    internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_TreeNodeMetadata_descriptor,
        new java.lang.String[] { "Gain", "OriginalLeaf", });
    internal_static_tensorflow_boosted_trees_trees_Leaf_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_boosted_trees_trees_Leaf_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_Leaf_descriptor,
        new java.lang.String[] { "Vector", "SparseVector", "Leaf", });
    internal_static_tensorflow_boosted_trees_trees_Vector_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tensorflow_boosted_trees_trees_Vector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_Vector_descriptor,
        new java.lang.String[] { "Value", });
    internal_static_tensorflow_boosted_trees_trees_SparseVector_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tensorflow_boosted_trees_trees_SparseVector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_SparseVector_descriptor,
        new java.lang.String[] { "Index", "Value", });
    internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_DenseFloatBinarySplit_descriptor,
        new java.lang.String[] { "FeatureColumn", "DimensionId", "Threshold", "LeftId", "RightId", });
    internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultLeft_descriptor,
        new java.lang.String[] { "Split", });
    internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_SparseFloatBinarySplitDefaultRight_descriptor,
        new java.lang.String[] { "Split", });
    internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_CategoricalIdBinarySplit_descriptor,
        new java.lang.String[] { "FeatureColumn", "FeatureId", "LeftId", "RightId", });
    internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_CategoricalIdSetMembershipBinarySplit_descriptor,
        new java.lang.String[] { "FeatureColumn", "FeatureIds", "LeftId", "RightId", });
    internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_DecisionTreeConfig_descriptor,
        new java.lang.String[] { "Nodes", });
    internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_DecisionTreeMetadata_descriptor,
        new java.lang.String[] { "NumTreeWeightUpdates", "NumLayersGrown", "IsFinalized", });
    internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_GrowingMetadata_descriptor,
        new java.lang.String[] { "NumTreesAttempted", "NumLayersAttempted", "UsedHandlerIds", });
    internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_boosted_trees_trees_DecisionTreeEnsembleConfig_descriptor,
        new java.lang.String[] { "Trees", "TreeWeights", "TreeMetadata", "GrowingMetadata", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
