// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/contrib/tensor_forest/proto/tensor_forest_params.proto

package tensorflow.tensorforest;

public final class TensorForestParamsOuterClass {
  private TensorForestParamsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * Leaf models specify what is returned at inference time, and how it is
   * stored in the decision_trees.Leaf protos.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.tensorforest.LeafModelType}
   */
  public enum LeafModelType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>MODEL_DENSE_CLASSIFICATION = 0;</code>
     */
    MODEL_DENSE_CLASSIFICATION(0),
    /**
     * <code>MODEL_SPARSE_CLASSIFICATION = 1;</code>
     */
    MODEL_SPARSE_CLASSIFICATION(1),
    /**
     * <code>MODEL_REGRESSION = 2;</code>
     */
    MODEL_REGRESSION(2),
    /**
     * <code>MODEL_SPARSE_OR_DENSE_CLASSIFICATION = 3;</code>
     */
    MODEL_SPARSE_OR_DENSE_CLASSIFICATION(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>MODEL_DENSE_CLASSIFICATION = 0;</code>
     */
    public static final int MODEL_DENSE_CLASSIFICATION_VALUE = 0;
    /**
     * <code>MODEL_SPARSE_CLASSIFICATION = 1;</code>
     */
    public static final int MODEL_SPARSE_CLASSIFICATION_VALUE = 1;
    /**
     * <code>MODEL_REGRESSION = 2;</code>
     */
    public static final int MODEL_REGRESSION_VALUE = 2;
    /**
     * <code>MODEL_SPARSE_OR_DENSE_CLASSIFICATION = 3;</code>
     */
    public static final int MODEL_SPARSE_OR_DENSE_CLASSIFICATION_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static LeafModelType valueOf(int value) {
      return forNumber(value);
    }

    public static LeafModelType forNumber(int value) {
      switch (value) {
        case 0: return MODEL_DENSE_CLASSIFICATION;
        case 1: return MODEL_SPARSE_CLASSIFICATION;
        case 2: return MODEL_REGRESSION;
        case 3: return MODEL_SPARSE_OR_DENSE_CLASSIFICATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<LeafModelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        LeafModelType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<LeafModelType>() {
            public LeafModelType findValueByNumber(int number) {
              return LeafModelType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final LeafModelType[] VALUES = values();

    public static LeafModelType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private LeafModelType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.tensorforest.LeafModelType)
  }

  /**
   * <pre>
   * Stats models generally specify information that is collected which is
   * necessary to choose a split at a node. Specifically, they operate on
   * a SplitCandidate::LeafStat proto.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.tensorforest.StatsModelType}
   */
  public enum StatsModelType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STATS_DENSE_GINI = 0;</code>
     */
    STATS_DENSE_GINI(0),
    /**
     * <code>STATS_SPARSE_GINI = 1;</code>
     */
    STATS_SPARSE_GINI(1),
    /**
     * <code>STATS_LEAST_SQUARES_REGRESSION = 2;</code>
     */
    STATS_LEAST_SQUARES_REGRESSION(2),
    /**
     * <pre>
     * STATS_SPARSE_THEN_DENSE_GINI is deprecated and no longer supported.
     * </pre>
     *
     * <code>STATS_SPARSE_THEN_DENSE_GINI = 3;</code>
     */
    STATS_SPARSE_THEN_DENSE_GINI(3),
    /**
     * <code>STATS_FIXED_SIZE_SPARSE_GINI = 4;</code>
     */
    STATS_FIXED_SIZE_SPARSE_GINI(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>STATS_DENSE_GINI = 0;</code>
     */
    public static final int STATS_DENSE_GINI_VALUE = 0;
    /**
     * <code>STATS_SPARSE_GINI = 1;</code>
     */
    public static final int STATS_SPARSE_GINI_VALUE = 1;
    /**
     * <code>STATS_LEAST_SQUARES_REGRESSION = 2;</code>
     */
    public static final int STATS_LEAST_SQUARES_REGRESSION_VALUE = 2;
    /**
     * <pre>
     * STATS_SPARSE_THEN_DENSE_GINI is deprecated and no longer supported.
     * </pre>
     *
     * <code>STATS_SPARSE_THEN_DENSE_GINI = 3;</code>
     */
    public static final int STATS_SPARSE_THEN_DENSE_GINI_VALUE = 3;
    /**
     * <code>STATS_FIXED_SIZE_SPARSE_GINI = 4;</code>
     */
    public static final int STATS_FIXED_SIZE_SPARSE_GINI_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static StatsModelType valueOf(int value) {
      return forNumber(value);
    }

    public static StatsModelType forNumber(int value) {
      switch (value) {
        case 0: return STATS_DENSE_GINI;
        case 1: return STATS_SPARSE_GINI;
        case 2: return STATS_LEAST_SQUARES_REGRESSION;
        case 3: return STATS_SPARSE_THEN_DENSE_GINI;
        case 4: return STATS_FIXED_SIZE_SPARSE_GINI;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<StatsModelType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        StatsModelType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<StatsModelType>() {
            public StatsModelType findValueByNumber(int number) {
              return StatsModelType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.getDescriptor().getEnumTypes().get(1);
    }

    private static final StatsModelType[] VALUES = values();

    public static StatsModelType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private StatsModelType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.tensorforest.StatsModelType)
  }

  /**
   * <pre>
   * Allows selection of operations on the collection of split candidates.
   * Basic infers right split stats from the leaf stats and each candidate's
   * left stats.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.tensorforest.SplitCollectionType}
   */
  public enum SplitCollectionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>COLLECTION_BASIC = 0;</code>
     */
    COLLECTION_BASIC(0),
    /**
     * <code>GRAPH_RUNNER_COLLECTION = 1;</code>
     */
    GRAPH_RUNNER_COLLECTION(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>COLLECTION_BASIC = 0;</code>
     */
    public static final int COLLECTION_BASIC_VALUE = 0;
    /**
     * <code>GRAPH_RUNNER_COLLECTION = 1;</code>
     */
    public static final int GRAPH_RUNNER_COLLECTION_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SplitCollectionType valueOf(int value) {
      return forNumber(value);
    }

    public static SplitCollectionType forNumber(int value) {
      switch (value) {
        case 0: return COLLECTION_BASIC;
        case 1: return GRAPH_RUNNER_COLLECTION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SplitCollectionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SplitCollectionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SplitCollectionType>() {
            public SplitCollectionType findValueByNumber(int number) {
              return SplitCollectionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.getDescriptor().getEnumTypes().get(2);
    }

    private static final SplitCollectionType[] VALUES = values();

    public static SplitCollectionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SplitCollectionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.tensorforest.SplitCollectionType)
  }

  /**
   * <pre>
   * Pruning strategies define how candidates are pruned over time.
   * SPLIT_PRUNE_HALF prunes the worst half of splits every prune_ever_samples,
   * etc.  Note that prune_every_samples plays against the depth-dependent
   * split_after_samples, so they should be set together.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.tensorforest.SplitPruningStrategyType}
   */
  public enum SplitPruningStrategyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SPLIT_PRUNE_NONE = 0;</code>
     */
    SPLIT_PRUNE_NONE(0),
    /**
     * <code>SPLIT_PRUNE_HALF = 1;</code>
     */
    SPLIT_PRUNE_HALF(1),
    /**
     * <code>SPLIT_PRUNE_QUARTER = 2;</code>
     */
    SPLIT_PRUNE_QUARTER(2),
    /**
     * <code>SPLIT_PRUNE_10_PERCENT = 3;</code>
     */
    SPLIT_PRUNE_10_PERCENT(3),
    /**
     * <pre>
     * SPLIT_PRUNE_HOEFFDING prunes splits whose Gini impurity is worst than
     * the best split's by more than the Hoeffding bound.
     * </pre>
     *
     * <code>SPLIT_PRUNE_HOEFFDING = 4;</code>
     */
    SPLIT_PRUNE_HOEFFDING(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SPLIT_PRUNE_NONE = 0;</code>
     */
    public static final int SPLIT_PRUNE_NONE_VALUE = 0;
    /**
     * <code>SPLIT_PRUNE_HALF = 1;</code>
     */
    public static final int SPLIT_PRUNE_HALF_VALUE = 1;
    /**
     * <code>SPLIT_PRUNE_QUARTER = 2;</code>
     */
    public static final int SPLIT_PRUNE_QUARTER_VALUE = 2;
    /**
     * <code>SPLIT_PRUNE_10_PERCENT = 3;</code>
     */
    public static final int SPLIT_PRUNE_10_PERCENT_VALUE = 3;
    /**
     * <pre>
     * SPLIT_PRUNE_HOEFFDING prunes splits whose Gini impurity is worst than
     * the best split's by more than the Hoeffding bound.
     * </pre>
     *
     * <code>SPLIT_PRUNE_HOEFFDING = 4;</code>
     */
    public static final int SPLIT_PRUNE_HOEFFDING_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SplitPruningStrategyType valueOf(int value) {
      return forNumber(value);
    }

    public static SplitPruningStrategyType forNumber(int value) {
      switch (value) {
        case 0: return SPLIT_PRUNE_NONE;
        case 1: return SPLIT_PRUNE_HALF;
        case 2: return SPLIT_PRUNE_QUARTER;
        case 3: return SPLIT_PRUNE_10_PERCENT;
        case 4: return SPLIT_PRUNE_HOEFFDING;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SplitPruningStrategyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SplitPruningStrategyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SplitPruningStrategyType>() {
            public SplitPruningStrategyType findValueByNumber(int number) {
              return SplitPruningStrategyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.getDescriptor().getEnumTypes().get(3);
    }

    private static final SplitPruningStrategyType[] VALUES = values();

    public static SplitPruningStrategyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SplitPruningStrategyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.tensorforest.SplitPruningStrategyType)
  }

  /**
   * <pre>
   * Finish strategies define when slots are considered finished.
   * Basic requires at least split_after_samples, and doesn't allow slots to
   * finish until the leaf has received more than one class. Hoeffding splits
   * early after min_split_samples if one split is dominating the rest according
   * to hoeffding bounds. Bootstrap does the same but compares gini's calculated
   * with sampled smoothed counts.
   * </pre>
   *
   * Protobuf enum {@code tensorflow.tensorforest.SplitFinishStrategyType}
   */
  public enum SplitFinishStrategyType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SPLIT_FINISH_BASIC = 0;</code>
     */
    SPLIT_FINISH_BASIC(0),
    /**
     * <code>SPLIT_FINISH_DOMINATE_HOEFFDING = 2;</code>
     */
    SPLIT_FINISH_DOMINATE_HOEFFDING(2),
    /**
     * <code>SPLIT_FINISH_DOMINATE_BOOTSTRAP = 3;</code>
     */
    SPLIT_FINISH_DOMINATE_BOOTSTRAP(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SPLIT_FINISH_BASIC = 0;</code>
     */
    public static final int SPLIT_FINISH_BASIC_VALUE = 0;
    /**
     * <code>SPLIT_FINISH_DOMINATE_HOEFFDING = 2;</code>
     */
    public static final int SPLIT_FINISH_DOMINATE_HOEFFDING_VALUE = 2;
    /**
     * <code>SPLIT_FINISH_DOMINATE_BOOTSTRAP = 3;</code>
     */
    public static final int SPLIT_FINISH_DOMINATE_BOOTSTRAP_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SplitFinishStrategyType valueOf(int value) {
      return forNumber(value);
    }

    public static SplitFinishStrategyType forNumber(int value) {
      switch (value) {
        case 0: return SPLIT_FINISH_BASIC;
        case 2: return SPLIT_FINISH_DOMINATE_HOEFFDING;
        case 3: return SPLIT_FINISH_DOMINATE_BOOTSTRAP;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SplitFinishStrategyType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SplitFinishStrategyType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SplitFinishStrategyType>() {
            public SplitFinishStrategyType findValueByNumber(int number) {
              return SplitFinishStrategyType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.getDescriptor().getEnumTypes().get(4);
    }

    private static final SplitFinishStrategyType[] VALUES = values();

    public static SplitFinishStrategyType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SplitFinishStrategyType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:tensorflow.tensorforest.SplitFinishStrategyType)
  }

  public interface SplitPruningConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.SplitPruningConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
     */
    boolean hasPruneEverySamples();
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getPruneEverySamples();
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getPruneEverySamplesOrBuilder();

    /**
     * <code>.tensorflow.tensorforest.SplitPruningStrategyType type = 2;</code>
     */
    int getTypeValue();
    /**
     * <code>.tensorflow.tensorforest.SplitPruningStrategyType type = 2;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType getType();
  }
  /**
   * Protobuf type {@code tensorflow.tensorforest.SplitPruningConfig}
   */
  public  static final class SplitPruningConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.SplitPruningConfig)
      SplitPruningConfigOrBuilder {
    // Use SplitPruningConfig.newBuilder() to construct.
    private SplitPruningConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SplitPruningConfig() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SplitPruningConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder subBuilder = null;
              if (pruneEverySamples_ != null) {
                subBuilder = pruneEverySamples_.toBuilder();
              }
              pruneEverySamples_ = input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pruneEverySamples_);
                pruneEverySamples_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitPruningConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitPruningConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.class, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.Builder.class);
    }

    public static final int PRUNE_EVERY_SAMPLES_FIELD_NUMBER = 1;
    private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam pruneEverySamples_;
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
     */
    public boolean hasPruneEverySamples() {
      return pruneEverySamples_ != null;
    }
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getPruneEverySamples() {
      return pruneEverySamples_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : pruneEverySamples_;
    }
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getPruneEverySamplesOrBuilder() {
      return getPruneEverySamples();
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>.tensorflow.tensorforest.SplitPruningStrategyType type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.tensorflow.tensorforest.SplitPruningStrategyType type = 2;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType getType() {
      tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType result = tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType.valueOf(type_);
      return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (pruneEverySamples_ != null) {
        output.writeMessage(1, getPruneEverySamples());
      }
      if (type_ != tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType.SPLIT_PRUNE_NONE.getNumber()) {
        output.writeEnum(2, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (pruneEverySamples_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPruneEverySamples());
      }
      if (type_ != tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType.SPLIT_PRUNE_NONE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig other = (tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig) obj;

      boolean result = true;
      result = result && (hasPruneEverySamples() == other.hasPruneEverySamples());
      if (hasPruneEverySamples()) {
        result = result && getPruneEverySamples()
            .equals(other.getPruneEverySamples());
      }
      result = result && type_ == other.type_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPruneEverySamples()) {
        hash = (37 * hash) + PRUNE_EVERY_SAMPLES_FIELD_NUMBER;
        hash = (53 * hash) + getPruneEverySamples().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tensorforest.SplitPruningConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.SplitPruningConfig)
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitPruningConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitPruningConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.class, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.Builder.class);
      }

      // Construct using tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (pruneEverySamplesBuilder_ == null) {
          pruneEverySamples_ = null;
        } else {
          pruneEverySamples_ = null;
          pruneEverySamplesBuilder_ = null;
        }
        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitPruningConfig_descriptor;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig getDefaultInstanceForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.getDefaultInstance();
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig build() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig buildPartial() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig result = new tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig(this);
        if (pruneEverySamplesBuilder_ == null) {
          result.pruneEverySamples_ = pruneEverySamples_;
        } else {
          result.pruneEverySamples_ = pruneEverySamplesBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig) {
          return mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig other) {
        if (other == tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.getDefaultInstance()) return this;
        if (other.hasPruneEverySamples()) {
          mergePruneEverySamples(other.getPruneEverySamples());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam pruneEverySamples_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> pruneEverySamplesBuilder_;
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
       */
      public boolean hasPruneEverySamples() {
        return pruneEverySamplesBuilder_ != null || pruneEverySamples_ != null;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getPruneEverySamples() {
        if (pruneEverySamplesBuilder_ == null) {
          return pruneEverySamples_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : pruneEverySamples_;
        } else {
          return pruneEverySamplesBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
       */
      public Builder setPruneEverySamples(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (pruneEverySamplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pruneEverySamples_ = value;
          onChanged();
        } else {
          pruneEverySamplesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
       */
      public Builder setPruneEverySamples(
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder builderForValue) {
        if (pruneEverySamplesBuilder_ == null) {
          pruneEverySamples_ = builderForValue.build();
          onChanged();
        } else {
          pruneEverySamplesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
       */
      public Builder mergePruneEverySamples(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (pruneEverySamplesBuilder_ == null) {
          if (pruneEverySamples_ != null) {
            pruneEverySamples_ =
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.newBuilder(pruneEverySamples_).mergeFrom(value).buildPartial();
          } else {
            pruneEverySamples_ = value;
          }
          onChanged();
        } else {
          pruneEverySamplesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
       */
      public Builder clearPruneEverySamples() {
        if (pruneEverySamplesBuilder_ == null) {
          pruneEverySamples_ = null;
          onChanged();
        } else {
          pruneEverySamples_ = null;
          pruneEverySamplesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder getPruneEverySamplesBuilder() {
        
        onChanged();
        return getPruneEverySamplesFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getPruneEverySamplesOrBuilder() {
        if (pruneEverySamplesBuilder_ != null) {
          return pruneEverySamplesBuilder_.getMessageOrBuilder();
        } else {
          return pruneEverySamples_ == null ?
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : pruneEverySamples_;
        }
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam prune_every_samples = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> 
          getPruneEverySamplesFieldBuilder() {
        if (pruneEverySamplesBuilder_ == null) {
          pruneEverySamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder>(
                  getPruneEverySamples(),
                  getParentForChildren(),
                  isClean());
          pruneEverySamples_ = null;
        }
        return pruneEverySamplesBuilder_;
      }

      private int type_ = 0;
      /**
       * <code>.tensorflow.tensorforest.SplitPruningStrategyType type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningStrategyType type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningStrategyType type = 2;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType getType() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType result = tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType.valueOf(type_);
        return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningStrategyType type = 2;</code>
       */
      public Builder setType(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningStrategyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningStrategyType type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.SplitPruningConfig)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.SplitPruningConfig)
    private static final tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig();
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SplitPruningConfig>
        PARSER = new com.google.protobuf.AbstractParser<SplitPruningConfig>() {
      public SplitPruningConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SplitPruningConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SplitPruningConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SplitPruningConfig> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SplitFinishConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.SplitFinishConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Configure how often we check for finish, because some finish methods
     * are expensive to perform.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
     */
    boolean hasCheckEverySteps();
    /**
     * <pre>
     * Configure how often we check for finish, because some finish methods
     * are expensive to perform.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getCheckEverySteps();
    /**
     * <pre>
     * Configure how often we check for finish, because some finish methods
     * are expensive to perform.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getCheckEveryStepsOrBuilder();

    /**
     * <code>.tensorflow.tensorforest.SplitFinishStrategyType type = 2;</code>
     */
    int getTypeValue();
    /**
     * <code>.tensorflow.tensorforest.SplitFinishStrategyType type = 2;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType getType();
  }
  /**
   * Protobuf type {@code tensorflow.tensorforest.SplitFinishConfig}
   */
  public  static final class SplitFinishConfig extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.SplitFinishConfig)
      SplitFinishConfigOrBuilder {
    // Use SplitFinishConfig.newBuilder() to construct.
    private SplitFinishConfig(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SplitFinishConfig() {
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SplitFinishConfig(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder subBuilder = null;
              if (checkEverySteps_ != null) {
                subBuilder = checkEverySteps_.toBuilder();
              }
              checkEverySteps_ = input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(checkEverySteps_);
                checkEverySteps_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitFinishConfig_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitFinishConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.class, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.Builder.class);
    }

    public static final int CHECK_EVERY_STEPS_FIELD_NUMBER = 1;
    private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam checkEverySteps_;
    /**
     * <pre>
     * Configure how often we check for finish, because some finish methods
     * are expensive to perform.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
     */
    public boolean hasCheckEverySteps() {
      return checkEverySteps_ != null;
    }
    /**
     * <pre>
     * Configure how often we check for finish, because some finish methods
     * are expensive to perform.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getCheckEverySteps() {
      return checkEverySteps_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : checkEverySteps_;
    }
    /**
     * <pre>
     * Configure how often we check for finish, because some finish methods
     * are expensive to perform.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getCheckEveryStepsOrBuilder() {
      return getCheckEverySteps();
    }

    public static final int TYPE_FIELD_NUMBER = 2;
    private int type_;
    /**
     * <code>.tensorflow.tensorforest.SplitFinishStrategyType type = 2;</code>
     */
    public int getTypeValue() {
      return type_;
    }
    /**
     * <code>.tensorflow.tensorforest.SplitFinishStrategyType type = 2;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType getType() {
      tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType result = tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType.valueOf(type_);
      return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (checkEverySteps_ != null) {
        output.writeMessage(1, getCheckEverySteps());
      }
      if (type_ != tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType.SPLIT_FINISH_BASIC.getNumber()) {
        output.writeEnum(2, type_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (checkEverySteps_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getCheckEverySteps());
      }
      if (type_ != tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType.SPLIT_FINISH_BASIC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, type_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig other = (tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig) obj;

      boolean result = true;
      result = result && (hasCheckEverySteps() == other.hasCheckEverySteps());
      if (hasCheckEverySteps()) {
        result = result && getCheckEverySteps()
            .equals(other.getCheckEverySteps());
      }
      result = result && type_ == other.type_;
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasCheckEverySteps()) {
        hash = (37 * hash) + CHECK_EVERY_STEPS_FIELD_NUMBER;
        hash = (53 * hash) + getCheckEverySteps().hashCode();
      }
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tensorforest.SplitFinishConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.SplitFinishConfig)
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitFinishConfig_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitFinishConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.class, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.Builder.class);
      }

      // Construct using tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (checkEveryStepsBuilder_ == null) {
          checkEverySteps_ = null;
        } else {
          checkEverySteps_ = null;
          checkEveryStepsBuilder_ = null;
        }
        type_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_SplitFinishConfig_descriptor;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig getDefaultInstanceForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.getDefaultInstance();
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig build() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig buildPartial() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig result = new tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig(this);
        if (checkEveryStepsBuilder_ == null) {
          result.checkEverySteps_ = checkEverySteps_;
        } else {
          result.checkEverySteps_ = checkEveryStepsBuilder_.build();
        }
        result.type_ = type_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig) {
          return mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig other) {
        if (other == tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.getDefaultInstance()) return this;
        if (other.hasCheckEverySteps()) {
          mergeCheckEverySteps(other.getCheckEverySteps());
        }
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam checkEverySteps_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> checkEveryStepsBuilder_;
      /**
       * <pre>
       * Configure how often we check for finish, because some finish methods
       * are expensive to perform.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
       */
      public boolean hasCheckEverySteps() {
        return checkEveryStepsBuilder_ != null || checkEverySteps_ != null;
      }
      /**
       * <pre>
       * Configure how often we check for finish, because some finish methods
       * are expensive to perform.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getCheckEverySteps() {
        if (checkEveryStepsBuilder_ == null) {
          return checkEverySteps_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : checkEverySteps_;
        } else {
          return checkEveryStepsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Configure how often we check for finish, because some finish methods
       * are expensive to perform.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
       */
      public Builder setCheckEverySteps(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (checkEveryStepsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          checkEverySteps_ = value;
          onChanged();
        } else {
          checkEveryStepsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configure how often we check for finish, because some finish methods
       * are expensive to perform.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
       */
      public Builder setCheckEverySteps(
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder builderForValue) {
        if (checkEveryStepsBuilder_ == null) {
          checkEverySteps_ = builderForValue.build();
          onChanged();
        } else {
          checkEveryStepsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Configure how often we check for finish, because some finish methods
       * are expensive to perform.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
       */
      public Builder mergeCheckEverySteps(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (checkEveryStepsBuilder_ == null) {
          if (checkEverySteps_ != null) {
            checkEverySteps_ =
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.newBuilder(checkEverySteps_).mergeFrom(value).buildPartial();
          } else {
            checkEverySteps_ = value;
          }
          onChanged();
        } else {
          checkEveryStepsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Configure how often we check for finish, because some finish methods
       * are expensive to perform.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
       */
      public Builder clearCheckEverySteps() {
        if (checkEveryStepsBuilder_ == null) {
          checkEverySteps_ = null;
          onChanged();
        } else {
          checkEverySteps_ = null;
          checkEveryStepsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Configure how often we check for finish, because some finish methods
       * are expensive to perform.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder getCheckEveryStepsBuilder() {
        
        onChanged();
        return getCheckEveryStepsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Configure how often we check for finish, because some finish methods
       * are expensive to perform.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getCheckEveryStepsOrBuilder() {
        if (checkEveryStepsBuilder_ != null) {
          return checkEveryStepsBuilder_.getMessageOrBuilder();
        } else {
          return checkEverySteps_ == null ?
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : checkEverySteps_;
        }
      }
      /**
       * <pre>
       * Configure how often we check for finish, because some finish methods
       * are expensive to perform.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam check_every_steps = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> 
          getCheckEveryStepsFieldBuilder() {
        if (checkEveryStepsBuilder_ == null) {
          checkEveryStepsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder>(
                  getCheckEverySteps(),
                  getParentForChildren(),
                  isClean());
          checkEverySteps_ = null;
        }
        return checkEveryStepsBuilder_;
      }

      private int type_ = 0;
      /**
       * <code>.tensorflow.tensorforest.SplitFinishStrategyType type = 2;</code>
       */
      public int getTypeValue() {
        return type_;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishStrategyType type = 2;</code>
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishStrategyType type = 2;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType getType() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType result = tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType.valueOf(type_);
        return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishStrategyType type = 2;</code>
       */
      public Builder setType(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishStrategyType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishStrategyType type = 2;</code>
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.SplitFinishConfig)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.SplitFinishConfig)
    private static final tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig();
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SplitFinishConfig>
        PARSER = new com.google.protobuf.AbstractParser<SplitFinishConfig>() {
      public SplitFinishConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SplitFinishConfig(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SplitFinishConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SplitFinishConfig> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LinearParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.LinearParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float slope = 1;</code>
     */
    float getSlope();

    /**
     * <code>float y_intercept = 2;</code>
     */
    float getYIntercept();

    /**
     * <code>float min_val = 3;</code>
     */
    float getMinVal();

    /**
     * <code>float max_val = 4;</code>
     */
    float getMaxVal();
  }
  /**
   * <pre>
   * A parameter that changes linearly with depth, with upper and lower bounds.
   * </pre>
   *
   * Protobuf type {@code tensorflow.tensorforest.LinearParam}
   */
  public  static final class LinearParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.LinearParam)
      LinearParamOrBuilder {
    // Use LinearParam.newBuilder() to construct.
    private LinearParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LinearParam() {
      slope_ = 0F;
      yIntercept_ = 0F;
      minVal_ = 0F;
      maxVal_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LinearParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              slope_ = input.readFloat();
              break;
            }
            case 21: {

              yIntercept_ = input.readFloat();
              break;
            }
            case 29: {

              minVal_ = input.readFloat();
              break;
            }
            case 37: {

              maxVal_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_LinearParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_LinearParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.class, tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.Builder.class);
    }

    public static final int SLOPE_FIELD_NUMBER = 1;
    private float slope_;
    /**
     * <code>float slope = 1;</code>
     */
    public float getSlope() {
      return slope_;
    }

    public static final int Y_INTERCEPT_FIELD_NUMBER = 2;
    private float yIntercept_;
    /**
     * <code>float y_intercept = 2;</code>
     */
    public float getYIntercept() {
      return yIntercept_;
    }

    public static final int MIN_VAL_FIELD_NUMBER = 3;
    private float minVal_;
    /**
     * <code>float min_val = 3;</code>
     */
    public float getMinVal() {
      return minVal_;
    }

    public static final int MAX_VAL_FIELD_NUMBER = 4;
    private float maxVal_;
    /**
     * <code>float max_val = 4;</code>
     */
    public float getMaxVal() {
      return maxVal_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (slope_ != 0F) {
        output.writeFloat(1, slope_);
      }
      if (yIntercept_ != 0F) {
        output.writeFloat(2, yIntercept_);
      }
      if (minVal_ != 0F) {
        output.writeFloat(3, minVal_);
      }
      if (maxVal_ != 0F) {
        output.writeFloat(4, maxVal_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (slope_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, slope_);
      }
      if (yIntercept_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, yIntercept_);
      }
      if (minVal_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, minVal_);
      }
      if (maxVal_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, maxVal_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam other = (tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getSlope())
          == java.lang.Float.floatToIntBits(
              other.getSlope()));
      result = result && (
          java.lang.Float.floatToIntBits(getYIntercept())
          == java.lang.Float.floatToIntBits(
              other.getYIntercept()));
      result = result && (
          java.lang.Float.floatToIntBits(getMinVal())
          == java.lang.Float.floatToIntBits(
              other.getMinVal()));
      result = result && (
          java.lang.Float.floatToIntBits(getMaxVal())
          == java.lang.Float.floatToIntBits(
              other.getMaxVal()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SLOPE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSlope());
      hash = (37 * hash) + Y_INTERCEPT_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getYIntercept());
      hash = (37 * hash) + MIN_VAL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMinVal());
      hash = (37 * hash) + MAX_VAL_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMaxVal());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A parameter that changes linearly with depth, with upper and lower bounds.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tensorforest.LinearParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.LinearParam)
        tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_LinearParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_LinearParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.class, tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.Builder.class);
      }

      // Construct using tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        slope_ = 0F;

        yIntercept_ = 0F;

        minVal_ = 0F;

        maxVal_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_LinearParam_descriptor;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam getDefaultInstanceForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.getDefaultInstance();
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam build() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam buildPartial() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam result = new tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam(this);
        result.slope_ = slope_;
        result.yIntercept_ = yIntercept_;
        result.minVal_ = minVal_;
        result.maxVal_ = maxVal_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) {
          return mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam other) {
        if (other == tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.getDefaultInstance()) return this;
        if (other.getSlope() != 0F) {
          setSlope(other.getSlope());
        }
        if (other.getYIntercept() != 0F) {
          setYIntercept(other.getYIntercept());
        }
        if (other.getMinVal() != 0F) {
          setMinVal(other.getMinVal());
        }
        if (other.getMaxVal() != 0F) {
          setMaxVal(other.getMaxVal());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float slope_ ;
      /**
       * <code>float slope = 1;</code>
       */
      public float getSlope() {
        return slope_;
      }
      /**
       * <code>float slope = 1;</code>
       */
      public Builder setSlope(float value) {
        
        slope_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float slope = 1;</code>
       */
      public Builder clearSlope() {
        
        slope_ = 0F;
        onChanged();
        return this;
      }

      private float yIntercept_ ;
      /**
       * <code>float y_intercept = 2;</code>
       */
      public float getYIntercept() {
        return yIntercept_;
      }
      /**
       * <code>float y_intercept = 2;</code>
       */
      public Builder setYIntercept(float value) {
        
        yIntercept_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float y_intercept = 2;</code>
       */
      public Builder clearYIntercept() {
        
        yIntercept_ = 0F;
        onChanged();
        return this;
      }

      private float minVal_ ;
      /**
       * <code>float min_val = 3;</code>
       */
      public float getMinVal() {
        return minVal_;
      }
      /**
       * <code>float min_val = 3;</code>
       */
      public Builder setMinVal(float value) {
        
        minVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float min_val = 3;</code>
       */
      public Builder clearMinVal() {
        
        minVal_ = 0F;
        onChanged();
        return this;
      }

      private float maxVal_ ;
      /**
       * <code>float max_val = 4;</code>
       */
      public float getMaxVal() {
        return maxVal_;
      }
      /**
       * <code>float max_val = 4;</code>
       */
      public Builder setMaxVal(float value) {
        
        maxVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float max_val = 4;</code>
       */
      public Builder clearMaxVal() {
        
        maxVal_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.LinearParam)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.LinearParam)
    private static final tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam();
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LinearParam>
        PARSER = new com.google.protobuf.AbstractParser<LinearParam>() {
      public LinearParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LinearParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LinearParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LinearParam> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ExponentialParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.ExponentialParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float bias = 1;</code>
     */
    float getBias();

    /**
     * <code>float base = 2;</code>
     */
    float getBase();

    /**
     * <code>float multiplier = 3;</code>
     */
    float getMultiplier();

    /**
     * <code>float depth_multiplier = 4;</code>
     */
    float getDepthMultiplier();
  }
  /**
   * <pre>
   * A parameter that changes expoentially with the form
   *     f = c + mb^(k*d)
   * where:
   *  c: constant bias
   *  b: base
   *  m: multiplier
   *  k: depth multiplier
   *  d: depth
   * </pre>
   *
   * Protobuf type {@code tensorflow.tensorforest.ExponentialParam}
   */
  public  static final class ExponentialParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.ExponentialParam)
      ExponentialParamOrBuilder {
    // Use ExponentialParam.newBuilder() to construct.
    private ExponentialParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ExponentialParam() {
      bias_ = 0F;
      base_ = 0F;
      multiplier_ = 0F;
      depthMultiplier_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ExponentialParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              bias_ = input.readFloat();
              break;
            }
            case 21: {

              base_ = input.readFloat();
              break;
            }
            case 29: {

              multiplier_ = input.readFloat();
              break;
            }
            case 37: {

              depthMultiplier_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ExponentialParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ExponentialParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.class, tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.Builder.class);
    }

    public static final int BIAS_FIELD_NUMBER = 1;
    private float bias_;
    /**
     * <code>float bias = 1;</code>
     */
    public float getBias() {
      return bias_;
    }

    public static final int BASE_FIELD_NUMBER = 2;
    private float base_;
    /**
     * <code>float base = 2;</code>
     */
    public float getBase() {
      return base_;
    }

    public static final int MULTIPLIER_FIELD_NUMBER = 3;
    private float multiplier_;
    /**
     * <code>float multiplier = 3;</code>
     */
    public float getMultiplier() {
      return multiplier_;
    }

    public static final int DEPTH_MULTIPLIER_FIELD_NUMBER = 4;
    private float depthMultiplier_;
    /**
     * <code>float depth_multiplier = 4;</code>
     */
    public float getDepthMultiplier() {
      return depthMultiplier_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (bias_ != 0F) {
        output.writeFloat(1, bias_);
      }
      if (base_ != 0F) {
        output.writeFloat(2, base_);
      }
      if (multiplier_ != 0F) {
        output.writeFloat(3, multiplier_);
      }
      if (depthMultiplier_ != 0F) {
        output.writeFloat(4, depthMultiplier_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (bias_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, bias_);
      }
      if (base_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, base_);
      }
      if (multiplier_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, multiplier_);
      }
      if (depthMultiplier_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, depthMultiplier_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam other = (tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getBias())
          == java.lang.Float.floatToIntBits(
              other.getBias()));
      result = result && (
          java.lang.Float.floatToIntBits(getBase())
          == java.lang.Float.floatToIntBits(
              other.getBase()));
      result = result && (
          java.lang.Float.floatToIntBits(getMultiplier())
          == java.lang.Float.floatToIntBits(
              other.getMultiplier()));
      result = result && (
          java.lang.Float.floatToIntBits(getDepthMultiplier())
          == java.lang.Float.floatToIntBits(
              other.getDepthMultiplier()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BIAS_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBias());
      hash = (37 * hash) + BASE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getBase());
      hash = (37 * hash) + MULTIPLIER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getMultiplier());
      hash = (37 * hash) + DEPTH_MULTIPLIER_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getDepthMultiplier());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A parameter that changes expoentially with the form
     *     f = c + mb^(k*d)
     * where:
     *  c: constant bias
     *  b: base
     *  m: multiplier
     *  k: depth multiplier
     *  d: depth
     * </pre>
     *
     * Protobuf type {@code tensorflow.tensorforest.ExponentialParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.ExponentialParam)
        tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ExponentialParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ExponentialParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.class, tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.Builder.class);
      }

      // Construct using tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        bias_ = 0F;

        base_ = 0F;

        multiplier_ = 0F;

        depthMultiplier_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ExponentialParam_descriptor;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam getDefaultInstanceForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.getDefaultInstance();
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam build() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam buildPartial() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam result = new tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam(this);
        result.bias_ = bias_;
        result.base_ = base_;
        result.multiplier_ = multiplier_;
        result.depthMultiplier_ = depthMultiplier_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) {
          return mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam other) {
        if (other == tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.getDefaultInstance()) return this;
        if (other.getBias() != 0F) {
          setBias(other.getBias());
        }
        if (other.getBase() != 0F) {
          setBase(other.getBase());
        }
        if (other.getMultiplier() != 0F) {
          setMultiplier(other.getMultiplier());
        }
        if (other.getDepthMultiplier() != 0F) {
          setDepthMultiplier(other.getDepthMultiplier());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float bias_ ;
      /**
       * <code>float bias = 1;</code>
       */
      public float getBias() {
        return bias_;
      }
      /**
       * <code>float bias = 1;</code>
       */
      public Builder setBias(float value) {
        
        bias_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float bias = 1;</code>
       */
      public Builder clearBias() {
        
        bias_ = 0F;
        onChanged();
        return this;
      }

      private float base_ ;
      /**
       * <code>float base = 2;</code>
       */
      public float getBase() {
        return base_;
      }
      /**
       * <code>float base = 2;</code>
       */
      public Builder setBase(float value) {
        
        base_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float base = 2;</code>
       */
      public Builder clearBase() {
        
        base_ = 0F;
        onChanged();
        return this;
      }

      private float multiplier_ ;
      /**
       * <code>float multiplier = 3;</code>
       */
      public float getMultiplier() {
        return multiplier_;
      }
      /**
       * <code>float multiplier = 3;</code>
       */
      public Builder setMultiplier(float value) {
        
        multiplier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float multiplier = 3;</code>
       */
      public Builder clearMultiplier() {
        
        multiplier_ = 0F;
        onChanged();
        return this;
      }

      private float depthMultiplier_ ;
      /**
       * <code>float depth_multiplier = 4;</code>
       */
      public float getDepthMultiplier() {
        return depthMultiplier_;
      }
      /**
       * <code>float depth_multiplier = 4;</code>
       */
      public Builder setDepthMultiplier(float value) {
        
        depthMultiplier_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float depth_multiplier = 4;</code>
       */
      public Builder clearDepthMultiplier() {
        
        depthMultiplier_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.ExponentialParam)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.ExponentialParam)
    private static final tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam();
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ExponentialParam>
        PARSER = new com.google.protobuf.AbstractParser<ExponentialParam>() {
      public ExponentialParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ExponentialParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ExponentialParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ExponentialParam> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ThresholdParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.ThresholdParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float on_value = 1;</code>
     */
    float getOnValue();

    /**
     * <code>float off_value = 2;</code>
     */
    float getOffValue();

    /**
     * <code>float threshold = 3;</code>
     */
    float getThreshold();
  }
  /**
   * <pre>
   * A parameter that is 'off' until depth &gt;= a threshold, then is 'on'.
   * </pre>
   *
   * Protobuf type {@code tensorflow.tensorforest.ThresholdParam}
   */
  public  static final class ThresholdParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.ThresholdParam)
      ThresholdParamOrBuilder {
    // Use ThresholdParam.newBuilder() to construct.
    private ThresholdParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ThresholdParam() {
      onValue_ = 0F;
      offValue_ = 0F;
      threshold_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private ThresholdParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {

              onValue_ = input.readFloat();
              break;
            }
            case 21: {

              offValue_ = input.readFloat();
              break;
            }
            case 29: {

              threshold_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ThresholdParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ThresholdParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.class, tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.Builder.class);
    }

    public static final int ON_VALUE_FIELD_NUMBER = 1;
    private float onValue_;
    /**
     * <code>float on_value = 1;</code>
     */
    public float getOnValue() {
      return onValue_;
    }

    public static final int OFF_VALUE_FIELD_NUMBER = 2;
    private float offValue_;
    /**
     * <code>float off_value = 2;</code>
     */
    public float getOffValue() {
      return offValue_;
    }

    public static final int THRESHOLD_FIELD_NUMBER = 3;
    private float threshold_;
    /**
     * <code>float threshold = 3;</code>
     */
    public float getThreshold() {
      return threshold_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (onValue_ != 0F) {
        output.writeFloat(1, onValue_);
      }
      if (offValue_ != 0F) {
        output.writeFloat(2, offValue_);
      }
      if (threshold_ != 0F) {
        output.writeFloat(3, threshold_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (onValue_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, onValue_);
      }
      if (offValue_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, offValue_);
      }
      if (threshold_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, threshold_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam other = (tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getOnValue())
          == java.lang.Float.floatToIntBits(
              other.getOnValue()));
      result = result && (
          java.lang.Float.floatToIntBits(getOffValue())
          == java.lang.Float.floatToIntBits(
              other.getOffValue()));
      result = result && (
          java.lang.Float.floatToIntBits(getThreshold())
          == java.lang.Float.floatToIntBits(
              other.getThreshold()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ON_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOnValue());
      hash = (37 * hash) + OFF_VALUE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getOffValue());
      hash = (37 * hash) + THRESHOLD_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getThreshold());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A parameter that is 'off' until depth &gt;= a threshold, then is 'on'.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tensorforest.ThresholdParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.ThresholdParam)
        tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ThresholdParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ThresholdParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.class, tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.Builder.class);
      }

      // Construct using tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        onValue_ = 0F;

        offValue_ = 0F;

        threshold_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_ThresholdParam_descriptor;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam getDefaultInstanceForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.getDefaultInstance();
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam build() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam buildPartial() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam result = new tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam(this);
        result.onValue_ = onValue_;
        result.offValue_ = offValue_;
        result.threshold_ = threshold_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) {
          return mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam other) {
        if (other == tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.getDefaultInstance()) return this;
        if (other.getOnValue() != 0F) {
          setOnValue(other.getOnValue());
        }
        if (other.getOffValue() != 0F) {
          setOffValue(other.getOffValue());
        }
        if (other.getThreshold() != 0F) {
          setThreshold(other.getThreshold());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float onValue_ ;
      /**
       * <code>float on_value = 1;</code>
       */
      public float getOnValue() {
        return onValue_;
      }
      /**
       * <code>float on_value = 1;</code>
       */
      public Builder setOnValue(float value) {
        
        onValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float on_value = 1;</code>
       */
      public Builder clearOnValue() {
        
        onValue_ = 0F;
        onChanged();
        return this;
      }

      private float offValue_ ;
      /**
       * <code>float off_value = 2;</code>
       */
      public float getOffValue() {
        return offValue_;
      }
      /**
       * <code>float off_value = 2;</code>
       */
      public Builder setOffValue(float value) {
        
        offValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float off_value = 2;</code>
       */
      public Builder clearOffValue() {
        
        offValue_ = 0F;
        onChanged();
        return this;
      }

      private float threshold_ ;
      /**
       * <code>float threshold = 3;</code>
       */
      public float getThreshold() {
        return threshold_;
      }
      /**
       * <code>float threshold = 3;</code>
       */
      public Builder setThreshold(float value) {
        
        threshold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float threshold = 3;</code>
       */
      public Builder clearThreshold() {
        
        threshold_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.ThresholdParam)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.ThresholdParam)
    private static final tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam();
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ThresholdParam>
        PARSER = new com.google.protobuf.AbstractParser<ThresholdParam>() {
      public ThresholdParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new ThresholdParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ThresholdParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ThresholdParam> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DepthDependentParamOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.DepthDependentParam)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float constant_value = 1;</code>
     */
    float getConstantValue();

    /**
     * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam getLinear();
    /**
     * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParamOrBuilder getLinearOrBuilder();

    /**
     * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam getExponential();
    /**
     * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParamOrBuilder getExponentialOrBuilder();

    /**
     * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam getThreshold();
    /**
     * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParamOrBuilder getThresholdOrBuilder();

    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.ParamTypeCase getParamTypeCase();
  }
  /**
   * <pre>
   * A parameter that may change with node depth.
   * </pre>
   *
   * Protobuf type {@code tensorflow.tensorforest.DepthDependentParam}
   */
  public  static final class DepthDependentParam extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.DepthDependentParam)
      DepthDependentParamOrBuilder {
    // Use DepthDependentParam.newBuilder() to construct.
    private DepthDependentParam(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DepthDependentParam() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private DepthDependentParam(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 13: {
              paramTypeCase_ = 1;
              paramType_ = input.readFloat();
              break;
            }
            case 18: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.Builder subBuilder = null;
              if (paramTypeCase_ == 2) {
                subBuilder = ((tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_).toBuilder();
              }
              paramType_ =
                  input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_);
                paramType_ = subBuilder.buildPartial();
              }
              paramTypeCase_ = 2;
              break;
            }
            case 26: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.Builder subBuilder = null;
              if (paramTypeCase_ == 3) {
                subBuilder = ((tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_).toBuilder();
              }
              paramType_ =
                  input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_);
                paramType_ = subBuilder.buildPartial();
              }
              paramTypeCase_ = 3;
              break;
            }
            case 34: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.Builder subBuilder = null;
              if (paramTypeCase_ == 4) {
                subBuilder = ((tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_).toBuilder();
              }
              paramType_ =
                  input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_);
                paramType_ = subBuilder.buildPartial();
              }
              paramTypeCase_ = 4;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_DepthDependentParam_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_DepthDependentParam_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.class, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder.class);
    }

    private int paramTypeCase_ = 0;
    private java.lang.Object paramType_;
    public enum ParamTypeCase
        implements com.google.protobuf.Internal.EnumLite {
      CONSTANT_VALUE(1),
      LINEAR(2),
      EXPONENTIAL(3),
      THRESHOLD(4),
      PARAMTYPE_NOT_SET(0);
      private final int value;
      private ParamTypeCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static ParamTypeCase valueOf(int value) {
        return forNumber(value);
      }

      public static ParamTypeCase forNumber(int value) {
        switch (value) {
          case 1: return CONSTANT_VALUE;
          case 2: return LINEAR;
          case 3: return EXPONENTIAL;
          case 4: return THRESHOLD;
          case 0: return PARAMTYPE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public ParamTypeCase
    getParamTypeCase() {
      return ParamTypeCase.forNumber(
          paramTypeCase_);
    }

    public static final int CONSTANT_VALUE_FIELD_NUMBER = 1;
    /**
     * <code>float constant_value = 1;</code>
     */
    public float getConstantValue() {
      if (paramTypeCase_ == 1) {
        return (java.lang.Float) paramType_;
      }
      return 0F;
    }

    public static final int LINEAR_FIELD_NUMBER = 2;
    /**
     * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam getLinear() {
      if (paramTypeCase_ == 2) {
         return (tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_;
      }
      return tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParamOrBuilder getLinearOrBuilder() {
      if (paramTypeCase_ == 2) {
         return (tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_;
      }
      return tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.getDefaultInstance();
    }

    public static final int EXPONENTIAL_FIELD_NUMBER = 3;
    /**
     * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam getExponential() {
      if (paramTypeCase_ == 3) {
         return (tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_;
      }
      return tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParamOrBuilder getExponentialOrBuilder() {
      if (paramTypeCase_ == 3) {
         return (tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_;
      }
      return tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.getDefaultInstance();
    }

    public static final int THRESHOLD_FIELD_NUMBER = 4;
    /**
     * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam getThreshold() {
      if (paramTypeCase_ == 4) {
         return (tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_;
      }
      return tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParamOrBuilder getThresholdOrBuilder() {
      if (paramTypeCase_ == 4) {
         return (tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_;
      }
      return tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (paramTypeCase_ == 1) {
        output.writeFloat(
            1, (float)((java.lang.Float) paramType_));
      }
      if (paramTypeCase_ == 2) {
        output.writeMessage(2, (tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_);
      }
      if (paramTypeCase_ == 3) {
        output.writeMessage(3, (tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_);
      }
      if (paramTypeCase_ == 4) {
        output.writeMessage(4, (tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (paramTypeCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(
              1, (float)((java.lang.Float) paramType_));
      }
      if (paramTypeCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_);
      }
      if (paramTypeCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_);
      }
      if (paramTypeCase_ == 4) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, (tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam other = (tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam) obj;

      boolean result = true;
      result = result && getParamTypeCase().equals(
          other.getParamTypeCase());
      if (!result) return false;
      switch (paramTypeCase_) {
        case 1:
          result = result && (
              java.lang.Float.floatToIntBits(getConstantValue())
              == java.lang.Float.floatToIntBits(
                  other.getConstantValue()));
          break;
        case 2:
          result = result && getLinear()
              .equals(other.getLinear());
          break;
        case 3:
          result = result && getExponential()
              .equals(other.getExponential());
          break;
        case 4:
          result = result && getThreshold()
              .equals(other.getThreshold());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (paramTypeCase_) {
        case 1:
          hash = (37 * hash) + CONSTANT_VALUE_FIELD_NUMBER;
          hash = (53 * hash) + java.lang.Float.floatToIntBits(
              getConstantValue());
          break;
        case 2:
          hash = (37 * hash) + LINEAR_FIELD_NUMBER;
          hash = (53 * hash) + getLinear().hashCode();
          break;
        case 3:
          hash = (37 * hash) + EXPONENTIAL_FIELD_NUMBER;
          hash = (53 * hash) + getExponential().hashCode();
          break;
        case 4:
          hash = (37 * hash) + THRESHOLD_FIELD_NUMBER;
          hash = (53 * hash) + getThreshold().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * A parameter that may change with node depth.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tensorforest.DepthDependentParam}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.DepthDependentParam)
        tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_DepthDependentParam_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_DepthDependentParam_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.class, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder.class);
      }

      // Construct using tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        paramTypeCase_ = 0;
        paramType_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_DepthDependentParam_descriptor;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getDefaultInstanceForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance();
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam build() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam buildPartial() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam result = new tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam(this);
        if (paramTypeCase_ == 1) {
          result.paramType_ = paramType_;
        }
        if (paramTypeCase_ == 2) {
          if (linearBuilder_ == null) {
            result.paramType_ = paramType_;
          } else {
            result.paramType_ = linearBuilder_.build();
          }
        }
        if (paramTypeCase_ == 3) {
          if (exponentialBuilder_ == null) {
            result.paramType_ = paramType_;
          } else {
            result.paramType_ = exponentialBuilder_.build();
          }
        }
        if (paramTypeCase_ == 4) {
          if (thresholdBuilder_ == null) {
            result.paramType_ = paramType_;
          } else {
            result.paramType_ = thresholdBuilder_.build();
          }
        }
        result.paramTypeCase_ = paramTypeCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam) {
          return mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam other) {
        if (other == tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance()) return this;
        switch (other.getParamTypeCase()) {
          case CONSTANT_VALUE: {
            setConstantValue(other.getConstantValue());
            break;
          }
          case LINEAR: {
            mergeLinear(other.getLinear());
            break;
          }
          case EXPONENTIAL: {
            mergeExponential(other.getExponential());
            break;
          }
          case THRESHOLD: {
            mergeThreshold(other.getThreshold());
            break;
          }
          case PARAMTYPE_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int paramTypeCase_ = 0;
      private java.lang.Object paramType_;
      public ParamTypeCase
          getParamTypeCase() {
        return ParamTypeCase.forNumber(
            paramTypeCase_);
      }

      public Builder clearParamType() {
        paramTypeCase_ = 0;
        paramType_ = null;
        onChanged();
        return this;
      }


      /**
       * <code>float constant_value = 1;</code>
       */
      public float getConstantValue() {
        if (paramTypeCase_ == 1) {
          return (java.lang.Float) paramType_;
        }
        return 0F;
      }
      /**
       * <code>float constant_value = 1;</code>
       */
      public Builder setConstantValue(float value) {
        paramTypeCase_ = 1;
        paramType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>float constant_value = 1;</code>
       */
      public Builder clearConstantValue() {
        if (paramTypeCase_ == 1) {
          paramTypeCase_ = 0;
          paramType_ = null;
          onChanged();
        }
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam, tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParamOrBuilder> linearBuilder_;
      /**
       * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam getLinear() {
        if (linearBuilder_ == null) {
          if (paramTypeCase_ == 2) {
            return (tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_;
          }
          return tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.getDefaultInstance();
        } else {
          if (paramTypeCase_ == 2) {
            return linearBuilder_.getMessage();
          }
          return tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
       */
      public Builder setLinear(tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam value) {
        if (linearBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          paramType_ = value;
          onChanged();
        } else {
          linearBuilder_.setMessage(value);
        }
        paramTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
       */
      public Builder setLinear(
          tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.Builder builderForValue) {
        if (linearBuilder_ == null) {
          paramType_ = builderForValue.build();
          onChanged();
        } else {
          linearBuilder_.setMessage(builderForValue.build());
        }
        paramTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
       */
      public Builder mergeLinear(tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam value) {
        if (linearBuilder_ == null) {
          if (paramTypeCase_ == 2 &&
              paramType_ != tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.getDefaultInstance()) {
            paramType_ = tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.newBuilder((tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_)
                .mergeFrom(value).buildPartial();
          } else {
            paramType_ = value;
          }
          onChanged();
        } else {
          if (paramTypeCase_ == 2) {
            linearBuilder_.mergeFrom(value);
          }
          linearBuilder_.setMessage(value);
        }
        paramTypeCase_ = 2;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
       */
      public Builder clearLinear() {
        if (linearBuilder_ == null) {
          if (paramTypeCase_ == 2) {
            paramTypeCase_ = 0;
            paramType_ = null;
            onChanged();
          }
        } else {
          if (paramTypeCase_ == 2) {
            paramTypeCase_ = 0;
            paramType_ = null;
          }
          linearBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.Builder getLinearBuilder() {
        return getLinearFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParamOrBuilder getLinearOrBuilder() {
        if ((paramTypeCase_ == 2) && (linearBuilder_ != null)) {
          return linearBuilder_.getMessageOrBuilder();
        } else {
          if (paramTypeCase_ == 2) {
            return (tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_;
          }
          return tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.LinearParam linear = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam, tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParamOrBuilder> 
          getLinearFieldBuilder() {
        if (linearBuilder_ == null) {
          if (!(paramTypeCase_ == 2)) {
            paramType_ = tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.getDefaultInstance();
          }
          linearBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam, tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParamOrBuilder>(
                  (tensorflow.tensorforest.TensorForestParamsOuterClass.LinearParam) paramType_,
                  getParentForChildren(),
                  isClean());
          paramType_ = null;
        }
        paramTypeCase_ = 2;
        onChanged();;
        return linearBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam, tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParamOrBuilder> exponentialBuilder_;
      /**
       * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam getExponential() {
        if (exponentialBuilder_ == null) {
          if (paramTypeCase_ == 3) {
            return (tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_;
          }
          return tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.getDefaultInstance();
        } else {
          if (paramTypeCase_ == 3) {
            return exponentialBuilder_.getMessage();
          }
          return tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
       */
      public Builder setExponential(tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam value) {
        if (exponentialBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          paramType_ = value;
          onChanged();
        } else {
          exponentialBuilder_.setMessage(value);
        }
        paramTypeCase_ = 3;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
       */
      public Builder setExponential(
          tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.Builder builderForValue) {
        if (exponentialBuilder_ == null) {
          paramType_ = builderForValue.build();
          onChanged();
        } else {
          exponentialBuilder_.setMessage(builderForValue.build());
        }
        paramTypeCase_ = 3;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
       */
      public Builder mergeExponential(tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam value) {
        if (exponentialBuilder_ == null) {
          if (paramTypeCase_ == 3 &&
              paramType_ != tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.getDefaultInstance()) {
            paramType_ = tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.newBuilder((tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_)
                .mergeFrom(value).buildPartial();
          } else {
            paramType_ = value;
          }
          onChanged();
        } else {
          if (paramTypeCase_ == 3) {
            exponentialBuilder_.mergeFrom(value);
          }
          exponentialBuilder_.setMessage(value);
        }
        paramTypeCase_ = 3;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
       */
      public Builder clearExponential() {
        if (exponentialBuilder_ == null) {
          if (paramTypeCase_ == 3) {
            paramTypeCase_ = 0;
            paramType_ = null;
            onChanged();
          }
        } else {
          if (paramTypeCase_ == 3) {
            paramTypeCase_ = 0;
            paramType_ = null;
          }
          exponentialBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.Builder getExponentialBuilder() {
        return getExponentialFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParamOrBuilder getExponentialOrBuilder() {
        if ((paramTypeCase_ == 3) && (exponentialBuilder_ != null)) {
          return exponentialBuilder_.getMessageOrBuilder();
        } else {
          if (paramTypeCase_ == 3) {
            return (tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_;
          }
          return tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.ExponentialParam exponential = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam, tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParamOrBuilder> 
          getExponentialFieldBuilder() {
        if (exponentialBuilder_ == null) {
          if (!(paramTypeCase_ == 3)) {
            paramType_ = tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.getDefaultInstance();
          }
          exponentialBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam, tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParamOrBuilder>(
                  (tensorflow.tensorforest.TensorForestParamsOuterClass.ExponentialParam) paramType_,
                  getParentForChildren(),
                  isClean());
          paramType_ = null;
        }
        paramTypeCase_ = 3;
        onChanged();;
        return exponentialBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam, tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParamOrBuilder> thresholdBuilder_;
      /**
       * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam getThreshold() {
        if (thresholdBuilder_ == null) {
          if (paramTypeCase_ == 4) {
            return (tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_;
          }
          return tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.getDefaultInstance();
        } else {
          if (paramTypeCase_ == 4) {
            return thresholdBuilder_.getMessage();
          }
          return tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
       */
      public Builder setThreshold(tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam value) {
        if (thresholdBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          paramType_ = value;
          onChanged();
        } else {
          thresholdBuilder_.setMessage(value);
        }
        paramTypeCase_ = 4;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
       */
      public Builder setThreshold(
          tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.Builder builderForValue) {
        if (thresholdBuilder_ == null) {
          paramType_ = builderForValue.build();
          onChanged();
        } else {
          thresholdBuilder_.setMessage(builderForValue.build());
        }
        paramTypeCase_ = 4;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
       */
      public Builder mergeThreshold(tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam value) {
        if (thresholdBuilder_ == null) {
          if (paramTypeCase_ == 4 &&
              paramType_ != tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.getDefaultInstance()) {
            paramType_ = tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.newBuilder((tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_)
                .mergeFrom(value).buildPartial();
          } else {
            paramType_ = value;
          }
          onChanged();
        } else {
          if (paramTypeCase_ == 4) {
            thresholdBuilder_.mergeFrom(value);
          }
          thresholdBuilder_.setMessage(value);
        }
        paramTypeCase_ = 4;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
       */
      public Builder clearThreshold() {
        if (thresholdBuilder_ == null) {
          if (paramTypeCase_ == 4) {
            paramTypeCase_ = 0;
            paramType_ = null;
            onChanged();
          }
        } else {
          if (paramTypeCase_ == 4) {
            paramTypeCase_ = 0;
            paramType_ = null;
          }
          thresholdBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.Builder getThresholdBuilder() {
        return getThresholdFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParamOrBuilder getThresholdOrBuilder() {
        if ((paramTypeCase_ == 4) && (thresholdBuilder_ != null)) {
          return thresholdBuilder_.getMessageOrBuilder();
        } else {
          if (paramTypeCase_ == 4) {
            return (tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_;
          }
          return tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.ThresholdParam threshold = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam, tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParamOrBuilder> 
          getThresholdFieldBuilder() {
        if (thresholdBuilder_ == null) {
          if (!(paramTypeCase_ == 4)) {
            paramType_ = tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.getDefaultInstance();
          }
          thresholdBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam, tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParamOrBuilder>(
                  (tensorflow.tensorforest.TensorForestParamsOuterClass.ThresholdParam) paramType_,
                  getParentForChildren(),
                  isClean());
          paramType_ = null;
        }
        paramTypeCase_ = 4;
        onChanged();;
        return thresholdBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.DepthDependentParam)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.DepthDependentParam)
    private static final tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam();
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DepthDependentParam>
        PARSER = new com.google.protobuf.AbstractParser<DepthDependentParam>() {
      public DepthDependentParam parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new DepthDependentParam(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DepthDependentParam> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DepthDependentParam> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TensorForestParamsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.TensorForestParams)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * ------------ Types that control training subsystems ------ //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafModelType leaf_type = 1;</code>
     */
    int getLeafTypeValue();
    /**
     * <pre>
     * ------------ Types that control training subsystems ------ //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafModelType leaf_type = 1;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType getLeafType();

    /**
     * <code>.tensorflow.tensorforest.StatsModelType stats_type = 2;</code>
     */
    int getStatsTypeValue();
    /**
     * <code>.tensorflow.tensorforest.StatsModelType stats_type = 2;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType getStatsType();

    /**
     * <code>.tensorflow.tensorforest.SplitCollectionType collection_type = 3;</code>
     */
    int getCollectionTypeValue();
    /**
     * <code>.tensorflow.tensorforest.SplitCollectionType collection_type = 3;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType getCollectionType();

    /**
     * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
     */
    boolean hasPruningType();
    /**
     * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig getPruningType();
    /**
     * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfigOrBuilder getPruningTypeOrBuilder();

    /**
     * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
     */
    boolean hasFinishType();
    /**
     * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig getFinishType();
    /**
     * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfigOrBuilder getFinishTypeOrBuilder();

    /**
     * <pre>
     * --------- Parameters that can't change by definition --------------- //
     * </pre>
     *
     * <code>int32 num_trees = 6;</code>
     */
    int getNumTrees();

    /**
     * <code>int32 max_nodes = 7;</code>
     */
    int getMaxNodes();

    /**
     * <code>int32 num_features = 21;</code>
     */
    int getNumFeatures();

    /**
     * <code>.tensorflow.decision_trees.InequalityTest.Type inequality_test_type = 19;</code>
     */
    int getInequalityTestTypeValue();
    /**
     * <code>.tensorflow.decision_trees.InequalityTest.Type inequality_test_type = 19;</code>
     */
    tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type getInequalityTestType();

    /**
     * <pre>
     * Some booleans controlling execution
     * </pre>
     *
     * <code>bool is_regression = 8;</code>
     */
    boolean getIsRegression();

    /**
     * <code>bool drop_final_class = 9;</code>
     */
    boolean getDropFinalClass();

    /**
     * <code>bool collate_examples = 10;</code>
     */
    boolean getCollateExamples();

    /**
     * <code>bool checkpoint_stats = 11;</code>
     */
    boolean getCheckpointStats();

    /**
     * <code>bool use_running_stats_method = 20;</code>
     */
    boolean getUseRunningStatsMethod();

    /**
     * <code>bool initialize_average_splits = 22;</code>
     */
    boolean getInitializeAverageSplits();

    /**
     * <code>bool inference_tree_paths = 23;</code>
     */
    boolean getInferenceTreePaths();

    /**
     * <pre>
     * Number of classes (classification) or targets (regression)
     * </pre>
     *
     * <code>int32 num_outputs = 12;</code>
     */
    int getNumOutputs();

    /**
     * <pre>
     * --------- Parameters that could be depth-dependent --------------- //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
     */
    boolean hasNumSplitsToConsider();
    /**
     * <pre>
     * --------- Parameters that could be depth-dependent --------------- //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getNumSplitsToConsider();
    /**
     * <pre>
     * --------- Parameters that could be depth-dependent --------------- //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getNumSplitsToConsiderOrBuilder();

    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
     */
    boolean hasSplitAfterSamples();
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getSplitAfterSamples();
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getSplitAfterSamplesOrBuilder();

    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
     */
    boolean hasDominateFraction();
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getDominateFraction();
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getDominateFractionOrBuilder();

    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
     */
    boolean hasMinSplitSamples();
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getMinSplitSamples();
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
     */
    tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getMinSplitSamplesOrBuilder();

    /**
     * <pre>
     * --------- Parameters for experimental features ---------------------- //
     * </pre>
     *
     * <code>string graph_dir = 16;</code>
     */
    java.lang.String getGraphDir();
    /**
     * <pre>
     * --------- Parameters for experimental features ---------------------- //
     * </pre>
     *
     * <code>string graph_dir = 16;</code>
     */
    com.google.protobuf.ByteString
        getGraphDirBytes();

    /**
     * <code>int32 num_select_features = 17;</code>
     */
    int getNumSelectFeatures();

    /**
     * <pre>
     * When using a FixedSizeSparseClassificationGrowStats, keep track of
     * this many classes.
     * </pre>
     *
     * <code>int32 num_classes_to_track = 24;</code>
     */
    int getNumClassesToTrack();
  }
  /**
   * Protobuf type {@code tensorflow.tensorforest.TensorForestParams}
   */
  public  static final class TensorForestParams extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.TensorForestParams)
      TensorForestParamsOrBuilder {
    // Use TensorForestParams.newBuilder() to construct.
    private TensorForestParams(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TensorForestParams() {
      leafType_ = 0;
      statsType_ = 0;
      collectionType_ = 0;
      numTrees_ = 0;
      maxNodes_ = 0;
      numFeatures_ = 0;
      inequalityTestType_ = 0;
      isRegression_ = false;
      dropFinalClass_ = false;
      collateExamples_ = false;
      checkpointStats_ = false;
      useRunningStatsMethod_ = false;
      initializeAverageSplits_ = false;
      inferenceTreePaths_ = false;
      numOutputs_ = 0;
      graphDir_ = "";
      numSelectFeatures_ = 0;
      numClassesToTrack_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TensorForestParams(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();

              leafType_ = rawValue;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();

              statsType_ = rawValue;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();

              collectionType_ = rawValue;
              break;
            }
            case 34: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.Builder subBuilder = null;
              if (pruningType_ != null) {
                subBuilder = pruningType_.toBuilder();
              }
              pruningType_ = input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(pruningType_);
                pruningType_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.Builder subBuilder = null;
              if (finishType_ != null) {
                subBuilder = finishType_.toBuilder();
              }
              finishType_ = input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(finishType_);
                finishType_ = subBuilder.buildPartial();
              }

              break;
            }
            case 48: {

              numTrees_ = input.readInt32();
              break;
            }
            case 56: {

              maxNodes_ = input.readInt32();
              break;
            }
            case 64: {

              isRegression_ = input.readBool();
              break;
            }
            case 72: {

              dropFinalClass_ = input.readBool();
              break;
            }
            case 80: {

              collateExamples_ = input.readBool();
              break;
            }
            case 88: {

              checkpointStats_ = input.readBool();
              break;
            }
            case 96: {

              numOutputs_ = input.readInt32();
              break;
            }
            case 106: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder subBuilder = null;
              if (numSplitsToConsider_ != null) {
                subBuilder = numSplitsToConsider_.toBuilder();
              }
              numSplitsToConsider_ = input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(numSplitsToConsider_);
                numSplitsToConsider_ = subBuilder.buildPartial();
              }

              break;
            }
            case 114: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder subBuilder = null;
              if (splitAfterSamples_ != null) {
                subBuilder = splitAfterSamples_.toBuilder();
              }
              splitAfterSamples_ = input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(splitAfterSamples_);
                splitAfterSamples_ = subBuilder.buildPartial();
              }

              break;
            }
            case 122: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder subBuilder = null;
              if (dominateFraction_ != null) {
                subBuilder = dominateFraction_.toBuilder();
              }
              dominateFraction_ = input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dominateFraction_);
                dominateFraction_ = subBuilder.buildPartial();
              }

              break;
            }
            case 130: {
              java.lang.String s = input.readStringRequireUtf8();

              graphDir_ = s;
              break;
            }
            case 136: {

              numSelectFeatures_ = input.readInt32();
              break;
            }
            case 146: {
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder subBuilder = null;
              if (minSplitSamples_ != null) {
                subBuilder = minSplitSamples_.toBuilder();
              }
              minSplitSamples_ = input.readMessage(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(minSplitSamples_);
                minSplitSamples_ = subBuilder.buildPartial();
              }

              break;
            }
            case 152: {
              int rawValue = input.readEnum();

              inequalityTestType_ = rawValue;
              break;
            }
            case 160: {

              useRunningStatsMethod_ = input.readBool();
              break;
            }
            case 168: {

              numFeatures_ = input.readInt32();
              break;
            }
            case 176: {

              initializeAverageSplits_ = input.readBool();
              break;
            }
            case 184: {

              inferenceTreePaths_ = input.readBool();
              break;
            }
            case 192: {

              numClassesToTrack_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_TensorForestParams_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_TensorForestParams_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams.class, tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams.Builder.class);
    }

    public static final int LEAF_TYPE_FIELD_NUMBER = 1;
    private int leafType_;
    /**
     * <pre>
     * ------------ Types that control training subsystems ------ //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafModelType leaf_type = 1;</code>
     */
    public int getLeafTypeValue() {
      return leafType_;
    }
    /**
     * <pre>
     * ------------ Types that control training subsystems ------ //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafModelType leaf_type = 1;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType getLeafType() {
      tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType result = tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType.valueOf(leafType_);
      return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType.UNRECOGNIZED : result;
    }

    public static final int STATS_TYPE_FIELD_NUMBER = 2;
    private int statsType_;
    /**
     * <code>.tensorflow.tensorforest.StatsModelType stats_type = 2;</code>
     */
    public int getStatsTypeValue() {
      return statsType_;
    }
    /**
     * <code>.tensorflow.tensorforest.StatsModelType stats_type = 2;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType getStatsType() {
      tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType result = tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType.valueOf(statsType_);
      return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType.UNRECOGNIZED : result;
    }

    public static final int COLLECTION_TYPE_FIELD_NUMBER = 3;
    private int collectionType_;
    /**
     * <code>.tensorflow.tensorforest.SplitCollectionType collection_type = 3;</code>
     */
    public int getCollectionTypeValue() {
      return collectionType_;
    }
    /**
     * <code>.tensorflow.tensorforest.SplitCollectionType collection_type = 3;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType getCollectionType() {
      tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType result = tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType.valueOf(collectionType_);
      return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType.UNRECOGNIZED : result;
    }

    public static final int PRUNING_TYPE_FIELD_NUMBER = 4;
    private tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig pruningType_;
    /**
     * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
     */
    public boolean hasPruningType() {
      return pruningType_ != null;
    }
    /**
     * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig getPruningType() {
      return pruningType_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.getDefaultInstance() : pruningType_;
    }
    /**
     * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfigOrBuilder getPruningTypeOrBuilder() {
      return getPruningType();
    }

    public static final int FINISH_TYPE_FIELD_NUMBER = 5;
    private tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig finishType_;
    /**
     * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
     */
    public boolean hasFinishType() {
      return finishType_ != null;
    }
    /**
     * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig getFinishType() {
      return finishType_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.getDefaultInstance() : finishType_;
    }
    /**
     * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfigOrBuilder getFinishTypeOrBuilder() {
      return getFinishType();
    }

    public static final int NUM_TREES_FIELD_NUMBER = 6;
    private int numTrees_;
    /**
     * <pre>
     * --------- Parameters that can't change by definition --------------- //
     * </pre>
     *
     * <code>int32 num_trees = 6;</code>
     */
    public int getNumTrees() {
      return numTrees_;
    }

    public static final int MAX_NODES_FIELD_NUMBER = 7;
    private int maxNodes_;
    /**
     * <code>int32 max_nodes = 7;</code>
     */
    public int getMaxNodes() {
      return maxNodes_;
    }

    public static final int NUM_FEATURES_FIELD_NUMBER = 21;
    private int numFeatures_;
    /**
     * <code>int32 num_features = 21;</code>
     */
    public int getNumFeatures() {
      return numFeatures_;
    }

    public static final int INEQUALITY_TEST_TYPE_FIELD_NUMBER = 19;
    private int inequalityTestType_;
    /**
     * <code>.tensorflow.decision_trees.InequalityTest.Type inequality_test_type = 19;</code>
     */
    public int getInequalityTestTypeValue() {
      return inequalityTestType_;
    }
    /**
     * <code>.tensorflow.decision_trees.InequalityTest.Type inequality_test_type = 19;</code>
     */
    public tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type getInequalityTestType() {
      tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type result = tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type.valueOf(inequalityTestType_);
      return result == null ? tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type.UNRECOGNIZED : result;
    }

    public static final int IS_REGRESSION_FIELD_NUMBER = 8;
    private boolean isRegression_;
    /**
     * <pre>
     * Some booleans controlling execution
     * </pre>
     *
     * <code>bool is_regression = 8;</code>
     */
    public boolean getIsRegression() {
      return isRegression_;
    }

    public static final int DROP_FINAL_CLASS_FIELD_NUMBER = 9;
    private boolean dropFinalClass_;
    /**
     * <code>bool drop_final_class = 9;</code>
     */
    public boolean getDropFinalClass() {
      return dropFinalClass_;
    }

    public static final int COLLATE_EXAMPLES_FIELD_NUMBER = 10;
    private boolean collateExamples_;
    /**
     * <code>bool collate_examples = 10;</code>
     */
    public boolean getCollateExamples() {
      return collateExamples_;
    }

    public static final int CHECKPOINT_STATS_FIELD_NUMBER = 11;
    private boolean checkpointStats_;
    /**
     * <code>bool checkpoint_stats = 11;</code>
     */
    public boolean getCheckpointStats() {
      return checkpointStats_;
    }

    public static final int USE_RUNNING_STATS_METHOD_FIELD_NUMBER = 20;
    private boolean useRunningStatsMethod_;
    /**
     * <code>bool use_running_stats_method = 20;</code>
     */
    public boolean getUseRunningStatsMethod() {
      return useRunningStatsMethod_;
    }

    public static final int INITIALIZE_AVERAGE_SPLITS_FIELD_NUMBER = 22;
    private boolean initializeAverageSplits_;
    /**
     * <code>bool initialize_average_splits = 22;</code>
     */
    public boolean getInitializeAverageSplits() {
      return initializeAverageSplits_;
    }

    public static final int INFERENCE_TREE_PATHS_FIELD_NUMBER = 23;
    private boolean inferenceTreePaths_;
    /**
     * <code>bool inference_tree_paths = 23;</code>
     */
    public boolean getInferenceTreePaths() {
      return inferenceTreePaths_;
    }

    public static final int NUM_OUTPUTS_FIELD_NUMBER = 12;
    private int numOutputs_;
    /**
     * <pre>
     * Number of classes (classification) or targets (regression)
     * </pre>
     *
     * <code>int32 num_outputs = 12;</code>
     */
    public int getNumOutputs() {
      return numOutputs_;
    }

    public static final int NUM_SPLITS_TO_CONSIDER_FIELD_NUMBER = 13;
    private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam numSplitsToConsider_;
    /**
     * <pre>
     * --------- Parameters that could be depth-dependent --------------- //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
     */
    public boolean hasNumSplitsToConsider() {
      return numSplitsToConsider_ != null;
    }
    /**
     * <pre>
     * --------- Parameters that could be depth-dependent --------------- //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getNumSplitsToConsider() {
      return numSplitsToConsider_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : numSplitsToConsider_;
    }
    /**
     * <pre>
     * --------- Parameters that could be depth-dependent --------------- //
     * </pre>
     *
     * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getNumSplitsToConsiderOrBuilder() {
      return getNumSplitsToConsider();
    }

    public static final int SPLIT_AFTER_SAMPLES_FIELD_NUMBER = 14;
    private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam splitAfterSamples_;
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
     */
    public boolean hasSplitAfterSamples() {
      return splitAfterSamples_ != null;
    }
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getSplitAfterSamples() {
      return splitAfterSamples_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : splitAfterSamples_;
    }
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getSplitAfterSamplesOrBuilder() {
      return getSplitAfterSamples();
    }

    public static final int DOMINATE_FRACTION_FIELD_NUMBER = 15;
    private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam dominateFraction_;
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
     */
    public boolean hasDominateFraction() {
      return dominateFraction_ != null;
    }
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getDominateFraction() {
      return dominateFraction_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : dominateFraction_;
    }
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getDominateFractionOrBuilder() {
      return getDominateFraction();
    }

    public static final int MIN_SPLIT_SAMPLES_FIELD_NUMBER = 18;
    private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam minSplitSamples_;
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
     */
    public boolean hasMinSplitSamples() {
      return minSplitSamples_ != null;
    }
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getMinSplitSamples() {
      return minSplitSamples_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : minSplitSamples_;
    }
    /**
     * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
     */
    public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getMinSplitSamplesOrBuilder() {
      return getMinSplitSamples();
    }

    public static final int GRAPH_DIR_FIELD_NUMBER = 16;
    private volatile java.lang.Object graphDir_;
    /**
     * <pre>
     * --------- Parameters for experimental features ---------------------- //
     * </pre>
     *
     * <code>string graph_dir = 16;</code>
     */
    public java.lang.String getGraphDir() {
      java.lang.Object ref = graphDir_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        graphDir_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * --------- Parameters for experimental features ---------------------- //
     * </pre>
     *
     * <code>string graph_dir = 16;</code>
     */
    public com.google.protobuf.ByteString
        getGraphDirBytes() {
      java.lang.Object ref = graphDir_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        graphDir_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUM_SELECT_FEATURES_FIELD_NUMBER = 17;
    private int numSelectFeatures_;
    /**
     * <code>int32 num_select_features = 17;</code>
     */
    public int getNumSelectFeatures() {
      return numSelectFeatures_;
    }

    public static final int NUM_CLASSES_TO_TRACK_FIELD_NUMBER = 24;
    private int numClassesToTrack_;
    /**
     * <pre>
     * When using a FixedSizeSparseClassificationGrowStats, keep track of
     * this many classes.
     * </pre>
     *
     * <code>int32 num_classes_to_track = 24;</code>
     */
    public int getNumClassesToTrack() {
      return numClassesToTrack_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (leafType_ != tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType.MODEL_DENSE_CLASSIFICATION.getNumber()) {
        output.writeEnum(1, leafType_);
      }
      if (statsType_ != tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType.STATS_DENSE_GINI.getNumber()) {
        output.writeEnum(2, statsType_);
      }
      if (collectionType_ != tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType.COLLECTION_BASIC.getNumber()) {
        output.writeEnum(3, collectionType_);
      }
      if (pruningType_ != null) {
        output.writeMessage(4, getPruningType());
      }
      if (finishType_ != null) {
        output.writeMessage(5, getFinishType());
      }
      if (numTrees_ != 0) {
        output.writeInt32(6, numTrees_);
      }
      if (maxNodes_ != 0) {
        output.writeInt32(7, maxNodes_);
      }
      if (isRegression_ != false) {
        output.writeBool(8, isRegression_);
      }
      if (dropFinalClass_ != false) {
        output.writeBool(9, dropFinalClass_);
      }
      if (collateExamples_ != false) {
        output.writeBool(10, collateExamples_);
      }
      if (checkpointStats_ != false) {
        output.writeBool(11, checkpointStats_);
      }
      if (numOutputs_ != 0) {
        output.writeInt32(12, numOutputs_);
      }
      if (numSplitsToConsider_ != null) {
        output.writeMessage(13, getNumSplitsToConsider());
      }
      if (splitAfterSamples_ != null) {
        output.writeMessage(14, getSplitAfterSamples());
      }
      if (dominateFraction_ != null) {
        output.writeMessage(15, getDominateFraction());
      }
      if (!getGraphDirBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 16, graphDir_);
      }
      if (numSelectFeatures_ != 0) {
        output.writeInt32(17, numSelectFeatures_);
      }
      if (minSplitSamples_ != null) {
        output.writeMessage(18, getMinSplitSamples());
      }
      if (inequalityTestType_ != tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type.LESS_OR_EQUAL.getNumber()) {
        output.writeEnum(19, inequalityTestType_);
      }
      if (useRunningStatsMethod_ != false) {
        output.writeBool(20, useRunningStatsMethod_);
      }
      if (numFeatures_ != 0) {
        output.writeInt32(21, numFeatures_);
      }
      if (initializeAverageSplits_ != false) {
        output.writeBool(22, initializeAverageSplits_);
      }
      if (inferenceTreePaths_ != false) {
        output.writeBool(23, inferenceTreePaths_);
      }
      if (numClassesToTrack_ != 0) {
        output.writeInt32(24, numClassesToTrack_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (leafType_ != tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType.MODEL_DENSE_CLASSIFICATION.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, leafType_);
      }
      if (statsType_ != tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType.STATS_DENSE_GINI.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, statsType_);
      }
      if (collectionType_ != tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType.COLLECTION_BASIC.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, collectionType_);
      }
      if (pruningType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getPruningType());
      }
      if (finishType_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getFinishType());
      }
      if (numTrees_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, numTrees_);
      }
      if (maxNodes_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxNodes_);
      }
      if (isRegression_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(8, isRegression_);
      }
      if (dropFinalClass_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, dropFinalClass_);
      }
      if (collateExamples_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, collateExamples_);
      }
      if (checkpointStats_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, checkpointStats_);
      }
      if (numOutputs_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, numOutputs_);
      }
      if (numSplitsToConsider_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getNumSplitsToConsider());
      }
      if (splitAfterSamples_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, getSplitAfterSamples());
      }
      if (dominateFraction_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, getDominateFraction());
      }
      if (!getGraphDirBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, graphDir_);
      }
      if (numSelectFeatures_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, numSelectFeatures_);
      }
      if (minSplitSamples_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, getMinSplitSamples());
      }
      if (inequalityTestType_ != tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type.LESS_OR_EQUAL.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(19, inequalityTestType_);
      }
      if (useRunningStatsMethod_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, useRunningStatsMethod_);
      }
      if (numFeatures_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, numFeatures_);
      }
      if (initializeAverageSplits_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, initializeAverageSplits_);
      }
      if (inferenceTreePaths_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, inferenceTreePaths_);
      }
      if (numClassesToTrack_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, numClassesToTrack_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams other = (tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams) obj;

      boolean result = true;
      result = result && leafType_ == other.leafType_;
      result = result && statsType_ == other.statsType_;
      result = result && collectionType_ == other.collectionType_;
      result = result && (hasPruningType() == other.hasPruningType());
      if (hasPruningType()) {
        result = result && getPruningType()
            .equals(other.getPruningType());
      }
      result = result && (hasFinishType() == other.hasFinishType());
      if (hasFinishType()) {
        result = result && getFinishType()
            .equals(other.getFinishType());
      }
      result = result && (getNumTrees()
          == other.getNumTrees());
      result = result && (getMaxNodes()
          == other.getMaxNodes());
      result = result && (getNumFeatures()
          == other.getNumFeatures());
      result = result && inequalityTestType_ == other.inequalityTestType_;
      result = result && (getIsRegression()
          == other.getIsRegression());
      result = result && (getDropFinalClass()
          == other.getDropFinalClass());
      result = result && (getCollateExamples()
          == other.getCollateExamples());
      result = result && (getCheckpointStats()
          == other.getCheckpointStats());
      result = result && (getUseRunningStatsMethod()
          == other.getUseRunningStatsMethod());
      result = result && (getInitializeAverageSplits()
          == other.getInitializeAverageSplits());
      result = result && (getInferenceTreePaths()
          == other.getInferenceTreePaths());
      result = result && (getNumOutputs()
          == other.getNumOutputs());
      result = result && (hasNumSplitsToConsider() == other.hasNumSplitsToConsider());
      if (hasNumSplitsToConsider()) {
        result = result && getNumSplitsToConsider()
            .equals(other.getNumSplitsToConsider());
      }
      result = result && (hasSplitAfterSamples() == other.hasSplitAfterSamples());
      if (hasSplitAfterSamples()) {
        result = result && getSplitAfterSamples()
            .equals(other.getSplitAfterSamples());
      }
      result = result && (hasDominateFraction() == other.hasDominateFraction());
      if (hasDominateFraction()) {
        result = result && getDominateFraction()
            .equals(other.getDominateFraction());
      }
      result = result && (hasMinSplitSamples() == other.hasMinSplitSamples());
      if (hasMinSplitSamples()) {
        result = result && getMinSplitSamples()
            .equals(other.getMinSplitSamples());
      }
      result = result && getGraphDir()
          .equals(other.getGraphDir());
      result = result && (getNumSelectFeatures()
          == other.getNumSelectFeatures());
      result = result && (getNumClassesToTrack()
          == other.getNumClassesToTrack());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + LEAF_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + leafType_;
      hash = (37 * hash) + STATS_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + statsType_;
      hash = (37 * hash) + COLLECTION_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + collectionType_;
      if (hasPruningType()) {
        hash = (37 * hash) + PRUNING_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getPruningType().hashCode();
      }
      if (hasFinishType()) {
        hash = (37 * hash) + FINISH_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getFinishType().hashCode();
      }
      hash = (37 * hash) + NUM_TREES_FIELD_NUMBER;
      hash = (53 * hash) + getNumTrees();
      hash = (37 * hash) + MAX_NODES_FIELD_NUMBER;
      hash = (53 * hash) + getMaxNodes();
      hash = (37 * hash) + NUM_FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + getNumFeatures();
      hash = (37 * hash) + INEQUALITY_TEST_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + inequalityTestType_;
      hash = (37 * hash) + IS_REGRESSION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsRegression());
      hash = (37 * hash) + DROP_FINAL_CLASS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getDropFinalClass());
      hash = (37 * hash) + COLLATE_EXAMPLES_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCollateExamples());
      hash = (37 * hash) + CHECKPOINT_STATS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getCheckpointStats());
      hash = (37 * hash) + USE_RUNNING_STATS_METHOD_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getUseRunningStatsMethod());
      hash = (37 * hash) + INITIALIZE_AVERAGE_SPLITS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInitializeAverageSplits());
      hash = (37 * hash) + INFERENCE_TREE_PATHS_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getInferenceTreePaths());
      hash = (37 * hash) + NUM_OUTPUTS_FIELD_NUMBER;
      hash = (53 * hash) + getNumOutputs();
      if (hasNumSplitsToConsider()) {
        hash = (37 * hash) + NUM_SPLITS_TO_CONSIDER_FIELD_NUMBER;
        hash = (53 * hash) + getNumSplitsToConsider().hashCode();
      }
      if (hasSplitAfterSamples()) {
        hash = (37 * hash) + SPLIT_AFTER_SAMPLES_FIELD_NUMBER;
        hash = (53 * hash) + getSplitAfterSamples().hashCode();
      }
      if (hasDominateFraction()) {
        hash = (37 * hash) + DOMINATE_FRACTION_FIELD_NUMBER;
        hash = (53 * hash) + getDominateFraction().hashCode();
      }
      if (hasMinSplitSamples()) {
        hash = (37 * hash) + MIN_SPLIT_SAMPLES_FIELD_NUMBER;
        hash = (53 * hash) + getMinSplitSamples().hashCode();
      }
      hash = (37 * hash) + GRAPH_DIR_FIELD_NUMBER;
      hash = (53 * hash) + getGraphDir().hashCode();
      hash = (37 * hash) + NUM_SELECT_FEATURES_FIELD_NUMBER;
      hash = (53 * hash) + getNumSelectFeatures();
      hash = (37 * hash) + NUM_CLASSES_TO_TRACK_FIELD_NUMBER;
      hash = (53 * hash) + getNumClassesToTrack();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tensorforest.TensorForestParams}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.TensorForestParams)
        tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParamsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_TensorForestParams_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_TensorForestParams_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams.class, tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams.Builder.class);
      }

      // Construct using tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        leafType_ = 0;

        statsType_ = 0;

        collectionType_ = 0;

        if (pruningTypeBuilder_ == null) {
          pruningType_ = null;
        } else {
          pruningType_ = null;
          pruningTypeBuilder_ = null;
        }
        if (finishTypeBuilder_ == null) {
          finishType_ = null;
        } else {
          finishType_ = null;
          finishTypeBuilder_ = null;
        }
        numTrees_ = 0;

        maxNodes_ = 0;

        numFeatures_ = 0;

        inequalityTestType_ = 0;

        isRegression_ = false;

        dropFinalClass_ = false;

        collateExamples_ = false;

        checkpointStats_ = false;

        useRunningStatsMethod_ = false;

        initializeAverageSplits_ = false;

        inferenceTreePaths_ = false;

        numOutputs_ = 0;

        if (numSplitsToConsiderBuilder_ == null) {
          numSplitsToConsider_ = null;
        } else {
          numSplitsToConsider_ = null;
          numSplitsToConsiderBuilder_ = null;
        }
        if (splitAfterSamplesBuilder_ == null) {
          splitAfterSamples_ = null;
        } else {
          splitAfterSamples_ = null;
          splitAfterSamplesBuilder_ = null;
        }
        if (dominateFractionBuilder_ == null) {
          dominateFraction_ = null;
        } else {
          dominateFraction_ = null;
          dominateFractionBuilder_ = null;
        }
        if (minSplitSamplesBuilder_ == null) {
          minSplitSamples_ = null;
        } else {
          minSplitSamples_ = null;
          minSplitSamplesBuilder_ = null;
        }
        graphDir_ = "";

        numSelectFeatures_ = 0;

        numClassesToTrack_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.internal_static_tensorflow_tensorforest_TensorForestParams_descriptor;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams getDefaultInstanceForType() {
        return tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams.getDefaultInstance();
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams build() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams buildPartial() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams result = new tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams(this);
        result.leafType_ = leafType_;
        result.statsType_ = statsType_;
        result.collectionType_ = collectionType_;
        if (pruningTypeBuilder_ == null) {
          result.pruningType_ = pruningType_;
        } else {
          result.pruningType_ = pruningTypeBuilder_.build();
        }
        if (finishTypeBuilder_ == null) {
          result.finishType_ = finishType_;
        } else {
          result.finishType_ = finishTypeBuilder_.build();
        }
        result.numTrees_ = numTrees_;
        result.maxNodes_ = maxNodes_;
        result.numFeatures_ = numFeatures_;
        result.inequalityTestType_ = inequalityTestType_;
        result.isRegression_ = isRegression_;
        result.dropFinalClass_ = dropFinalClass_;
        result.collateExamples_ = collateExamples_;
        result.checkpointStats_ = checkpointStats_;
        result.useRunningStatsMethod_ = useRunningStatsMethod_;
        result.initializeAverageSplits_ = initializeAverageSplits_;
        result.inferenceTreePaths_ = inferenceTreePaths_;
        result.numOutputs_ = numOutputs_;
        if (numSplitsToConsiderBuilder_ == null) {
          result.numSplitsToConsider_ = numSplitsToConsider_;
        } else {
          result.numSplitsToConsider_ = numSplitsToConsiderBuilder_.build();
        }
        if (splitAfterSamplesBuilder_ == null) {
          result.splitAfterSamples_ = splitAfterSamples_;
        } else {
          result.splitAfterSamples_ = splitAfterSamplesBuilder_.build();
        }
        if (dominateFractionBuilder_ == null) {
          result.dominateFraction_ = dominateFraction_;
        } else {
          result.dominateFraction_ = dominateFractionBuilder_.build();
        }
        if (minSplitSamplesBuilder_ == null) {
          result.minSplitSamples_ = minSplitSamples_;
        } else {
          result.minSplitSamples_ = minSplitSamplesBuilder_.build();
        }
        result.graphDir_ = graphDir_;
        result.numSelectFeatures_ = numSelectFeatures_;
        result.numClassesToTrack_ = numClassesToTrack_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams) {
          return mergeFrom((tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams other) {
        if (other == tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams.getDefaultInstance()) return this;
        if (other.leafType_ != 0) {
          setLeafTypeValue(other.getLeafTypeValue());
        }
        if (other.statsType_ != 0) {
          setStatsTypeValue(other.getStatsTypeValue());
        }
        if (other.collectionType_ != 0) {
          setCollectionTypeValue(other.getCollectionTypeValue());
        }
        if (other.hasPruningType()) {
          mergePruningType(other.getPruningType());
        }
        if (other.hasFinishType()) {
          mergeFinishType(other.getFinishType());
        }
        if (other.getNumTrees() != 0) {
          setNumTrees(other.getNumTrees());
        }
        if (other.getMaxNodes() != 0) {
          setMaxNodes(other.getMaxNodes());
        }
        if (other.getNumFeatures() != 0) {
          setNumFeatures(other.getNumFeatures());
        }
        if (other.inequalityTestType_ != 0) {
          setInequalityTestTypeValue(other.getInequalityTestTypeValue());
        }
        if (other.getIsRegression() != false) {
          setIsRegression(other.getIsRegression());
        }
        if (other.getDropFinalClass() != false) {
          setDropFinalClass(other.getDropFinalClass());
        }
        if (other.getCollateExamples() != false) {
          setCollateExamples(other.getCollateExamples());
        }
        if (other.getCheckpointStats() != false) {
          setCheckpointStats(other.getCheckpointStats());
        }
        if (other.getUseRunningStatsMethod() != false) {
          setUseRunningStatsMethod(other.getUseRunningStatsMethod());
        }
        if (other.getInitializeAverageSplits() != false) {
          setInitializeAverageSplits(other.getInitializeAverageSplits());
        }
        if (other.getInferenceTreePaths() != false) {
          setInferenceTreePaths(other.getInferenceTreePaths());
        }
        if (other.getNumOutputs() != 0) {
          setNumOutputs(other.getNumOutputs());
        }
        if (other.hasNumSplitsToConsider()) {
          mergeNumSplitsToConsider(other.getNumSplitsToConsider());
        }
        if (other.hasSplitAfterSamples()) {
          mergeSplitAfterSamples(other.getSplitAfterSamples());
        }
        if (other.hasDominateFraction()) {
          mergeDominateFraction(other.getDominateFraction());
        }
        if (other.hasMinSplitSamples()) {
          mergeMinSplitSamples(other.getMinSplitSamples());
        }
        if (!other.getGraphDir().isEmpty()) {
          graphDir_ = other.graphDir_;
          onChanged();
        }
        if (other.getNumSelectFeatures() != 0) {
          setNumSelectFeatures(other.getNumSelectFeatures());
        }
        if (other.getNumClassesToTrack() != 0) {
          setNumClassesToTrack(other.getNumClassesToTrack());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private int leafType_ = 0;
      /**
       * <pre>
       * ------------ Types that control training subsystems ------ //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafModelType leaf_type = 1;</code>
       */
      public int getLeafTypeValue() {
        return leafType_;
      }
      /**
       * <pre>
       * ------------ Types that control training subsystems ------ //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafModelType leaf_type = 1;</code>
       */
      public Builder setLeafTypeValue(int value) {
        leafType_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ------------ Types that control training subsystems ------ //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafModelType leaf_type = 1;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType getLeafType() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType result = tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType.valueOf(leafType_);
        return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * ------------ Types that control training subsystems ------ //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafModelType leaf_type = 1;</code>
       */
      public Builder setLeafType(tensorflow.tensorforest.TensorForestParamsOuterClass.LeafModelType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        leafType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ------------ Types that control training subsystems ------ //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafModelType leaf_type = 1;</code>
       */
      public Builder clearLeafType() {
        
        leafType_ = 0;
        onChanged();
        return this;
      }

      private int statsType_ = 0;
      /**
       * <code>.tensorflow.tensorforest.StatsModelType stats_type = 2;</code>
       */
      public int getStatsTypeValue() {
        return statsType_;
      }
      /**
       * <code>.tensorflow.tensorforest.StatsModelType stats_type = 2;</code>
       */
      public Builder setStatsTypeValue(int value) {
        statsType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.StatsModelType stats_type = 2;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType getStatsType() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType result = tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType.valueOf(statsType_);
        return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.tensorforest.StatsModelType stats_type = 2;</code>
       */
      public Builder setStatsType(tensorflow.tensorforest.TensorForestParamsOuterClass.StatsModelType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        statsType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.StatsModelType stats_type = 2;</code>
       */
      public Builder clearStatsType() {
        
        statsType_ = 0;
        onChanged();
        return this;
      }

      private int collectionType_ = 0;
      /**
       * <code>.tensorflow.tensorforest.SplitCollectionType collection_type = 3;</code>
       */
      public int getCollectionTypeValue() {
        return collectionType_;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitCollectionType collection_type = 3;</code>
       */
      public Builder setCollectionTypeValue(int value) {
        collectionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitCollectionType collection_type = 3;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType getCollectionType() {
        tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType result = tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType.valueOf(collectionType_);
        return result == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitCollectionType collection_type = 3;</code>
       */
      public Builder setCollectionType(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitCollectionType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        collectionType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitCollectionType collection_type = 3;</code>
       */
      public Builder clearCollectionType() {
        
        collectionType_ = 0;
        onChanged();
        return this;
      }

      private tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig pruningType_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfigOrBuilder> pruningTypeBuilder_;
      /**
       * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
       */
      public boolean hasPruningType() {
        return pruningTypeBuilder_ != null || pruningType_ != null;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig getPruningType() {
        if (pruningTypeBuilder_ == null) {
          return pruningType_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.getDefaultInstance() : pruningType_;
        } else {
          return pruningTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
       */
      public Builder setPruningType(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig value) {
        if (pruningTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pruningType_ = value;
          onChanged();
        } else {
          pruningTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
       */
      public Builder setPruningType(
          tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.Builder builderForValue) {
        if (pruningTypeBuilder_ == null) {
          pruningType_ = builderForValue.build();
          onChanged();
        } else {
          pruningTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
       */
      public Builder mergePruningType(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig value) {
        if (pruningTypeBuilder_ == null) {
          if (pruningType_ != null) {
            pruningType_ =
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.newBuilder(pruningType_).mergeFrom(value).buildPartial();
          } else {
            pruningType_ = value;
          }
          onChanged();
        } else {
          pruningTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
       */
      public Builder clearPruningType() {
        if (pruningTypeBuilder_ == null) {
          pruningType_ = null;
          onChanged();
        } else {
          pruningType_ = null;
          pruningTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.Builder getPruningTypeBuilder() {
        
        onChanged();
        return getPruningTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfigOrBuilder getPruningTypeOrBuilder() {
        if (pruningTypeBuilder_ != null) {
          return pruningTypeBuilder_.getMessageOrBuilder();
        } else {
          return pruningType_ == null ?
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.getDefaultInstance() : pruningType_;
        }
      }
      /**
       * <code>.tensorflow.tensorforest.SplitPruningConfig pruning_type = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfigOrBuilder> 
          getPruningTypeFieldBuilder() {
        if (pruningTypeBuilder_ == null) {
          pruningTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfig.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitPruningConfigOrBuilder>(
                  getPruningType(),
                  getParentForChildren(),
                  isClean());
          pruningType_ = null;
        }
        return pruningTypeBuilder_;
      }

      private tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig finishType_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfigOrBuilder> finishTypeBuilder_;
      /**
       * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
       */
      public boolean hasFinishType() {
        return finishTypeBuilder_ != null || finishType_ != null;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig getFinishType() {
        if (finishTypeBuilder_ == null) {
          return finishType_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.getDefaultInstance() : finishType_;
        } else {
          return finishTypeBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
       */
      public Builder setFinishType(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig value) {
        if (finishTypeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          finishType_ = value;
          onChanged();
        } else {
          finishTypeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
       */
      public Builder setFinishType(
          tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.Builder builderForValue) {
        if (finishTypeBuilder_ == null) {
          finishType_ = builderForValue.build();
          onChanged();
        } else {
          finishTypeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
       */
      public Builder mergeFinishType(tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig value) {
        if (finishTypeBuilder_ == null) {
          if (finishType_ != null) {
            finishType_ =
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.newBuilder(finishType_).mergeFrom(value).buildPartial();
          } else {
            finishType_ = value;
          }
          onChanged();
        } else {
          finishTypeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
       */
      public Builder clearFinishType() {
        if (finishTypeBuilder_ == null) {
          finishType_ = null;
          onChanged();
        } else {
          finishType_ = null;
          finishTypeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.Builder getFinishTypeBuilder() {
        
        onChanged();
        return getFinishTypeFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfigOrBuilder getFinishTypeOrBuilder() {
        if (finishTypeBuilder_ != null) {
          return finishTypeBuilder_.getMessageOrBuilder();
        } else {
          return finishType_ == null ?
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.getDefaultInstance() : finishType_;
        }
      }
      /**
       * <code>.tensorflow.tensorforest.SplitFinishConfig finish_type = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfigOrBuilder> 
          getFinishTypeFieldBuilder() {
        if (finishTypeBuilder_ == null) {
          finishTypeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfig.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.SplitFinishConfigOrBuilder>(
                  getFinishType(),
                  getParentForChildren(),
                  isClean());
          finishType_ = null;
        }
        return finishTypeBuilder_;
      }

      private int numTrees_ ;
      /**
       * <pre>
       * --------- Parameters that can't change by definition --------------- //
       * </pre>
       *
       * <code>int32 num_trees = 6;</code>
       */
      public int getNumTrees() {
        return numTrees_;
      }
      /**
       * <pre>
       * --------- Parameters that can't change by definition --------------- //
       * </pre>
       *
       * <code>int32 num_trees = 6;</code>
       */
      public Builder setNumTrees(int value) {
        
        numTrees_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * --------- Parameters that can't change by definition --------------- //
       * </pre>
       *
       * <code>int32 num_trees = 6;</code>
       */
      public Builder clearNumTrees() {
        
        numTrees_ = 0;
        onChanged();
        return this;
      }

      private int maxNodes_ ;
      /**
       * <code>int32 max_nodes = 7;</code>
       */
      public int getMaxNodes() {
        return maxNodes_;
      }
      /**
       * <code>int32 max_nodes = 7;</code>
       */
      public Builder setMaxNodes(int value) {
        
        maxNodes_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 max_nodes = 7;</code>
       */
      public Builder clearMaxNodes() {
        
        maxNodes_ = 0;
        onChanged();
        return this;
      }

      private int numFeatures_ ;
      /**
       * <code>int32 num_features = 21;</code>
       */
      public int getNumFeatures() {
        return numFeatures_;
      }
      /**
       * <code>int32 num_features = 21;</code>
       */
      public Builder setNumFeatures(int value) {
        
        numFeatures_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_features = 21;</code>
       */
      public Builder clearNumFeatures() {
        
        numFeatures_ = 0;
        onChanged();
        return this;
      }

      private int inequalityTestType_ = 0;
      /**
       * <code>.tensorflow.decision_trees.InequalityTest.Type inequality_test_type = 19;</code>
       */
      public int getInequalityTestTypeValue() {
        return inequalityTestType_;
      }
      /**
       * <code>.tensorflow.decision_trees.InequalityTest.Type inequality_test_type = 19;</code>
       */
      public Builder setInequalityTestTypeValue(int value) {
        inequalityTestType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.decision_trees.InequalityTest.Type inequality_test_type = 19;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type getInequalityTestType() {
        tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type result = tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type.valueOf(inequalityTestType_);
        return result == null ? tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type.UNRECOGNIZED : result;
      }
      /**
       * <code>.tensorflow.decision_trees.InequalityTest.Type inequality_test_type = 19;</code>
       */
      public Builder setInequalityTestType(tensorflow.decision_trees.GenericTreeModel.InequalityTest.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        inequalityTestType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.tensorflow.decision_trees.InequalityTest.Type inequality_test_type = 19;</code>
       */
      public Builder clearInequalityTestType() {
        
        inequalityTestType_ = 0;
        onChanged();
        return this;
      }

      private boolean isRegression_ ;
      /**
       * <pre>
       * Some booleans controlling execution
       * </pre>
       *
       * <code>bool is_regression = 8;</code>
       */
      public boolean getIsRegression() {
        return isRegression_;
      }
      /**
       * <pre>
       * Some booleans controlling execution
       * </pre>
       *
       * <code>bool is_regression = 8;</code>
       */
      public Builder setIsRegression(boolean value) {
        
        isRegression_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Some booleans controlling execution
       * </pre>
       *
       * <code>bool is_regression = 8;</code>
       */
      public Builder clearIsRegression() {
        
        isRegression_ = false;
        onChanged();
        return this;
      }

      private boolean dropFinalClass_ ;
      /**
       * <code>bool drop_final_class = 9;</code>
       */
      public boolean getDropFinalClass() {
        return dropFinalClass_;
      }
      /**
       * <code>bool drop_final_class = 9;</code>
       */
      public Builder setDropFinalClass(boolean value) {
        
        dropFinalClass_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool drop_final_class = 9;</code>
       */
      public Builder clearDropFinalClass() {
        
        dropFinalClass_ = false;
        onChanged();
        return this;
      }

      private boolean collateExamples_ ;
      /**
       * <code>bool collate_examples = 10;</code>
       */
      public boolean getCollateExamples() {
        return collateExamples_;
      }
      /**
       * <code>bool collate_examples = 10;</code>
       */
      public Builder setCollateExamples(boolean value) {
        
        collateExamples_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool collate_examples = 10;</code>
       */
      public Builder clearCollateExamples() {
        
        collateExamples_ = false;
        onChanged();
        return this;
      }

      private boolean checkpointStats_ ;
      /**
       * <code>bool checkpoint_stats = 11;</code>
       */
      public boolean getCheckpointStats() {
        return checkpointStats_;
      }
      /**
       * <code>bool checkpoint_stats = 11;</code>
       */
      public Builder setCheckpointStats(boolean value) {
        
        checkpointStats_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool checkpoint_stats = 11;</code>
       */
      public Builder clearCheckpointStats() {
        
        checkpointStats_ = false;
        onChanged();
        return this;
      }

      private boolean useRunningStatsMethod_ ;
      /**
       * <code>bool use_running_stats_method = 20;</code>
       */
      public boolean getUseRunningStatsMethod() {
        return useRunningStatsMethod_;
      }
      /**
       * <code>bool use_running_stats_method = 20;</code>
       */
      public Builder setUseRunningStatsMethod(boolean value) {
        
        useRunningStatsMethod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool use_running_stats_method = 20;</code>
       */
      public Builder clearUseRunningStatsMethod() {
        
        useRunningStatsMethod_ = false;
        onChanged();
        return this;
      }

      private boolean initializeAverageSplits_ ;
      /**
       * <code>bool initialize_average_splits = 22;</code>
       */
      public boolean getInitializeAverageSplits() {
        return initializeAverageSplits_;
      }
      /**
       * <code>bool initialize_average_splits = 22;</code>
       */
      public Builder setInitializeAverageSplits(boolean value) {
        
        initializeAverageSplits_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool initialize_average_splits = 22;</code>
       */
      public Builder clearInitializeAverageSplits() {
        
        initializeAverageSplits_ = false;
        onChanged();
        return this;
      }

      private boolean inferenceTreePaths_ ;
      /**
       * <code>bool inference_tree_paths = 23;</code>
       */
      public boolean getInferenceTreePaths() {
        return inferenceTreePaths_;
      }
      /**
       * <code>bool inference_tree_paths = 23;</code>
       */
      public Builder setInferenceTreePaths(boolean value) {
        
        inferenceTreePaths_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool inference_tree_paths = 23;</code>
       */
      public Builder clearInferenceTreePaths() {
        
        inferenceTreePaths_ = false;
        onChanged();
        return this;
      }

      private int numOutputs_ ;
      /**
       * <pre>
       * Number of classes (classification) or targets (regression)
       * </pre>
       *
       * <code>int32 num_outputs = 12;</code>
       */
      public int getNumOutputs() {
        return numOutputs_;
      }
      /**
       * <pre>
       * Number of classes (classification) or targets (regression)
       * </pre>
       *
       * <code>int32 num_outputs = 12;</code>
       */
      public Builder setNumOutputs(int value) {
        
        numOutputs_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Number of classes (classification) or targets (regression)
       * </pre>
       *
       * <code>int32 num_outputs = 12;</code>
       */
      public Builder clearNumOutputs() {
        
        numOutputs_ = 0;
        onChanged();
        return this;
      }

      private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam numSplitsToConsider_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> numSplitsToConsiderBuilder_;
      /**
       * <pre>
       * --------- Parameters that could be depth-dependent --------------- //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
       */
      public boolean hasNumSplitsToConsider() {
        return numSplitsToConsiderBuilder_ != null || numSplitsToConsider_ != null;
      }
      /**
       * <pre>
       * --------- Parameters that could be depth-dependent --------------- //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getNumSplitsToConsider() {
        if (numSplitsToConsiderBuilder_ == null) {
          return numSplitsToConsider_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : numSplitsToConsider_;
        } else {
          return numSplitsToConsiderBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * --------- Parameters that could be depth-dependent --------------- //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
       */
      public Builder setNumSplitsToConsider(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (numSplitsToConsiderBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          numSplitsToConsider_ = value;
          onChanged();
        } else {
          numSplitsToConsiderBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * --------- Parameters that could be depth-dependent --------------- //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
       */
      public Builder setNumSplitsToConsider(
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder builderForValue) {
        if (numSplitsToConsiderBuilder_ == null) {
          numSplitsToConsider_ = builderForValue.build();
          onChanged();
        } else {
          numSplitsToConsiderBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * --------- Parameters that could be depth-dependent --------------- //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
       */
      public Builder mergeNumSplitsToConsider(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (numSplitsToConsiderBuilder_ == null) {
          if (numSplitsToConsider_ != null) {
            numSplitsToConsider_ =
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.newBuilder(numSplitsToConsider_).mergeFrom(value).buildPartial();
          } else {
            numSplitsToConsider_ = value;
          }
          onChanged();
        } else {
          numSplitsToConsiderBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * --------- Parameters that could be depth-dependent --------------- //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
       */
      public Builder clearNumSplitsToConsider() {
        if (numSplitsToConsiderBuilder_ == null) {
          numSplitsToConsider_ = null;
          onChanged();
        } else {
          numSplitsToConsider_ = null;
          numSplitsToConsiderBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * --------- Parameters that could be depth-dependent --------------- //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder getNumSplitsToConsiderBuilder() {
        
        onChanged();
        return getNumSplitsToConsiderFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * --------- Parameters that could be depth-dependent --------------- //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getNumSplitsToConsiderOrBuilder() {
        if (numSplitsToConsiderBuilder_ != null) {
          return numSplitsToConsiderBuilder_.getMessageOrBuilder();
        } else {
          return numSplitsToConsider_ == null ?
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : numSplitsToConsider_;
        }
      }
      /**
       * <pre>
       * --------- Parameters that could be depth-dependent --------------- //
       * </pre>
       *
       * <code>.tensorflow.tensorforest.DepthDependentParam num_splits_to_consider = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> 
          getNumSplitsToConsiderFieldBuilder() {
        if (numSplitsToConsiderBuilder_ == null) {
          numSplitsToConsiderBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder>(
                  getNumSplitsToConsider(),
                  getParentForChildren(),
                  isClean());
          numSplitsToConsider_ = null;
        }
        return numSplitsToConsiderBuilder_;
      }

      private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam splitAfterSamples_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> splitAfterSamplesBuilder_;
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
       */
      public boolean hasSplitAfterSamples() {
        return splitAfterSamplesBuilder_ != null || splitAfterSamples_ != null;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getSplitAfterSamples() {
        if (splitAfterSamplesBuilder_ == null) {
          return splitAfterSamples_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : splitAfterSamples_;
        } else {
          return splitAfterSamplesBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
       */
      public Builder setSplitAfterSamples(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (splitAfterSamplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          splitAfterSamples_ = value;
          onChanged();
        } else {
          splitAfterSamplesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
       */
      public Builder setSplitAfterSamples(
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder builderForValue) {
        if (splitAfterSamplesBuilder_ == null) {
          splitAfterSamples_ = builderForValue.build();
          onChanged();
        } else {
          splitAfterSamplesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
       */
      public Builder mergeSplitAfterSamples(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (splitAfterSamplesBuilder_ == null) {
          if (splitAfterSamples_ != null) {
            splitAfterSamples_ =
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.newBuilder(splitAfterSamples_).mergeFrom(value).buildPartial();
          } else {
            splitAfterSamples_ = value;
          }
          onChanged();
        } else {
          splitAfterSamplesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
       */
      public Builder clearSplitAfterSamples() {
        if (splitAfterSamplesBuilder_ == null) {
          splitAfterSamples_ = null;
          onChanged();
        } else {
          splitAfterSamples_ = null;
          splitAfterSamplesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder getSplitAfterSamplesBuilder() {
        
        onChanged();
        return getSplitAfterSamplesFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getSplitAfterSamplesOrBuilder() {
        if (splitAfterSamplesBuilder_ != null) {
          return splitAfterSamplesBuilder_.getMessageOrBuilder();
        } else {
          return splitAfterSamples_ == null ?
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : splitAfterSamples_;
        }
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam split_after_samples = 14;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> 
          getSplitAfterSamplesFieldBuilder() {
        if (splitAfterSamplesBuilder_ == null) {
          splitAfterSamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder>(
                  getSplitAfterSamples(),
                  getParentForChildren(),
                  isClean());
          splitAfterSamples_ = null;
        }
        return splitAfterSamplesBuilder_;
      }

      private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam dominateFraction_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> dominateFractionBuilder_;
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
       */
      public boolean hasDominateFraction() {
        return dominateFractionBuilder_ != null || dominateFraction_ != null;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getDominateFraction() {
        if (dominateFractionBuilder_ == null) {
          return dominateFraction_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : dominateFraction_;
        } else {
          return dominateFractionBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
       */
      public Builder setDominateFraction(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (dominateFractionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dominateFraction_ = value;
          onChanged();
        } else {
          dominateFractionBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
       */
      public Builder setDominateFraction(
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder builderForValue) {
        if (dominateFractionBuilder_ == null) {
          dominateFraction_ = builderForValue.build();
          onChanged();
        } else {
          dominateFractionBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
       */
      public Builder mergeDominateFraction(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (dominateFractionBuilder_ == null) {
          if (dominateFraction_ != null) {
            dominateFraction_ =
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.newBuilder(dominateFraction_).mergeFrom(value).buildPartial();
          } else {
            dominateFraction_ = value;
          }
          onChanged();
        } else {
          dominateFractionBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
       */
      public Builder clearDominateFraction() {
        if (dominateFractionBuilder_ == null) {
          dominateFraction_ = null;
          onChanged();
        } else {
          dominateFraction_ = null;
          dominateFractionBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder getDominateFractionBuilder() {
        
        onChanged();
        return getDominateFractionFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getDominateFractionOrBuilder() {
        if (dominateFractionBuilder_ != null) {
          return dominateFractionBuilder_.getMessageOrBuilder();
        } else {
          return dominateFraction_ == null ?
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : dominateFraction_;
        }
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam dominate_fraction = 15;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> 
          getDominateFractionFieldBuilder() {
        if (dominateFractionBuilder_ == null) {
          dominateFractionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder>(
                  getDominateFraction(),
                  getParentForChildren(),
                  isClean());
          dominateFraction_ = null;
        }
        return dominateFractionBuilder_;
      }

      private tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam minSplitSamples_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> minSplitSamplesBuilder_;
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
       */
      public boolean hasMinSplitSamples() {
        return minSplitSamplesBuilder_ != null || minSplitSamples_ != null;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam getMinSplitSamples() {
        if (minSplitSamplesBuilder_ == null) {
          return minSplitSamples_ == null ? tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : minSplitSamples_;
        } else {
          return minSplitSamplesBuilder_.getMessage();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
       */
      public Builder setMinSplitSamples(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (minSplitSamplesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          minSplitSamples_ = value;
          onChanged();
        } else {
          minSplitSamplesBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
       */
      public Builder setMinSplitSamples(
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder builderForValue) {
        if (minSplitSamplesBuilder_ == null) {
          minSplitSamples_ = builderForValue.build();
          onChanged();
        } else {
          minSplitSamplesBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
       */
      public Builder mergeMinSplitSamples(tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam value) {
        if (minSplitSamplesBuilder_ == null) {
          if (minSplitSamples_ != null) {
            minSplitSamples_ =
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.newBuilder(minSplitSamples_).mergeFrom(value).buildPartial();
          } else {
            minSplitSamples_ = value;
          }
          onChanged();
        } else {
          minSplitSamplesBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
       */
      public Builder clearMinSplitSamples() {
        if (minSplitSamplesBuilder_ == null) {
          minSplitSamples_ = null;
          onChanged();
        } else {
          minSplitSamples_ = null;
          minSplitSamplesBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder getMinSplitSamplesBuilder() {
        
        onChanged();
        return getMinSplitSamplesFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
       */
      public tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder getMinSplitSamplesOrBuilder() {
        if (minSplitSamplesBuilder_ != null) {
          return minSplitSamplesBuilder_.getMessageOrBuilder();
        } else {
          return minSplitSamples_ == null ?
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.getDefaultInstance() : minSplitSamples_;
        }
      }
      /**
       * <code>.tensorflow.tensorforest.DepthDependentParam min_split_samples = 18;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder> 
          getMinSplitSamplesFieldBuilder() {
        if (minSplitSamplesBuilder_ == null) {
          minSplitSamplesBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParam.Builder, tensorflow.tensorforest.TensorForestParamsOuterClass.DepthDependentParamOrBuilder>(
                  getMinSplitSamples(),
                  getParentForChildren(),
                  isClean());
          minSplitSamples_ = null;
        }
        return minSplitSamplesBuilder_;
      }

      private java.lang.Object graphDir_ = "";
      /**
       * <pre>
       * --------- Parameters for experimental features ---------------------- //
       * </pre>
       *
       * <code>string graph_dir = 16;</code>
       */
      public java.lang.String getGraphDir() {
        java.lang.Object ref = graphDir_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          graphDir_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * --------- Parameters for experimental features ---------------------- //
       * </pre>
       *
       * <code>string graph_dir = 16;</code>
       */
      public com.google.protobuf.ByteString
          getGraphDirBytes() {
        java.lang.Object ref = graphDir_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          graphDir_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * --------- Parameters for experimental features ---------------------- //
       * </pre>
       *
       * <code>string graph_dir = 16;</code>
       */
      public Builder setGraphDir(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        graphDir_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * --------- Parameters for experimental features ---------------------- //
       * </pre>
       *
       * <code>string graph_dir = 16;</code>
       */
      public Builder clearGraphDir() {
        
        graphDir_ = getDefaultInstance().getGraphDir();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * --------- Parameters for experimental features ---------------------- //
       * </pre>
       *
       * <code>string graph_dir = 16;</code>
       */
      public Builder setGraphDirBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        graphDir_ = value;
        onChanged();
        return this;
      }

      private int numSelectFeatures_ ;
      /**
       * <code>int32 num_select_features = 17;</code>
       */
      public int getNumSelectFeatures() {
        return numSelectFeatures_;
      }
      /**
       * <code>int32 num_select_features = 17;</code>
       */
      public Builder setNumSelectFeatures(int value) {
        
        numSelectFeatures_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 num_select_features = 17;</code>
       */
      public Builder clearNumSelectFeatures() {
        
        numSelectFeatures_ = 0;
        onChanged();
        return this;
      }

      private int numClassesToTrack_ ;
      /**
       * <pre>
       * When using a FixedSizeSparseClassificationGrowStats, keep track of
       * this many classes.
       * </pre>
       *
       * <code>int32 num_classes_to_track = 24;</code>
       */
      public int getNumClassesToTrack() {
        return numClassesToTrack_;
      }
      /**
       * <pre>
       * When using a FixedSizeSparseClassificationGrowStats, keep track of
       * this many classes.
       * </pre>
       *
       * <code>int32 num_classes_to_track = 24;</code>
       */
      public Builder setNumClassesToTrack(int value) {
        
        numClassesToTrack_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * When using a FixedSizeSparseClassificationGrowStats, keep track of
       * this many classes.
       * </pre>
       *
       * <code>int32 num_classes_to_track = 24;</code>
       */
      public Builder clearNumClassesToTrack() {
        
        numClassesToTrack_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.TensorForestParams)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.TensorForestParams)
    private static final tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams();
    }

    public static tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TensorForestParams>
        PARSER = new com.google.protobuf.AbstractParser<TensorForestParams>() {
      public TensorForestParams parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TensorForestParams(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TensorForestParams> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TensorForestParams> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.TensorForestParamsOuterClass.TensorForestParams getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_SplitPruningConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_SplitPruningConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_SplitFinishConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_SplitFinishConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_LinearParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_LinearParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_ExponentialParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_ExponentialParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_ThresholdParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_ThresholdParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_DepthDependentParam_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_DepthDependentParam_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_TensorForestParams_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_TensorForestParams_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nAtensorflow/contrib/tensor_forest/proto" +
      "/tensor_forest_params.proto\022\027tensorflow." +
      "tensorforest\032@tensorflow/contrib/decisio" +
      "n_trees/proto/generic_tree_model.proto\"\240" +
      "\001\n\022SplitPruningConfig\022I\n\023prune_every_sam" +
      "ples\030\001 \001(\0132,.tensorflow.tensorforest.Dep" +
      "thDependentParam\022?\n\004type\030\002 \001(\01621.tensorf" +
      "low.tensorforest.SplitPruningStrategyTyp" +
      "e\"\234\001\n\021SplitFinishConfig\022G\n\021check_every_s" +
      "teps\030\001 \001(\0132,.tensorflow.tensorforest.Dep",
      "thDependentParam\022>\n\004type\030\002 \001(\01620.tensorf" +
      "low.tensorforest.SplitFinishStrategyType" +
      "\"S\n\013LinearParam\022\r\n\005slope\030\001 \001(\002\022\023\n\013y_inte" +
      "rcept\030\002 \001(\002\022\017\n\007min_val\030\003 \001(\002\022\017\n\007max_val\030" +
      "\004 \001(\002\"\\\n\020ExponentialParam\022\014\n\004bias\030\001 \001(\002\022" +
      "\014\n\004base\030\002 \001(\002\022\022\n\nmultiplier\030\003 \001(\002\022\030\n\020dep" +
      "th_multiplier\030\004 \001(\002\"H\n\016ThresholdParam\022\020\n" +
      "\010on_value\030\001 \001(\002\022\021\n\toff_value\030\002 \001(\002\022\021\n\tth" +
      "reshold\030\003 \001(\002\"\364\001\n\023DepthDependentParam\022\030\n" +
      "\016constant_value\030\001 \001(\002H\000\0226\n\006linear\030\002 \001(\0132",
      "$.tensorflow.tensorforest.LinearParamH\000\022" +
      "@\n\013exponential\030\003 \001(\0132).tensorflow.tensor" +
      "forest.ExponentialParamH\000\022<\n\tthreshold\030\004" +
      " \001(\0132\'.tensorflow.tensorforest.Threshold" +
      "ParamH\000B\013\n\tParamType\"\267\010\n\022TensorForestPar" +
      "ams\0229\n\tleaf_type\030\001 \001(\0162&.tensorflow.tens" +
      "orforest.LeafModelType\022;\n\nstats_type\030\002 \001" +
      "(\0162\'.tensorflow.tensorforest.StatsModelT" +
      "ype\022E\n\017collection_type\030\003 \001(\0162,.tensorflo" +
      "w.tensorforest.SplitCollectionType\022A\n\014pr",
      "uning_type\030\004 \001(\0132+.tensorflow.tensorfore" +
      "st.SplitPruningConfig\022?\n\013finish_type\030\005 \001" +
      "(\0132*.tensorflow.tensorforest.SplitFinish" +
      "Config\022\021\n\tnum_trees\030\006 \001(\005\022\021\n\tmax_nodes\030\007" +
      " \001(\005\022\024\n\014num_features\030\025 \001(\005\022L\n\024inequality" +
      "_test_type\030\023 \001(\0162..tensorflow.decision_t" +
      "rees.InequalityTest.Type\022\025\n\ris_regressio" +
      "n\030\010 \001(\010\022\030\n\020drop_final_class\030\t \001(\010\022\030\n\020col" +
      "late_examples\030\n \001(\010\022\030\n\020checkpoint_stats\030" +
      "\013 \001(\010\022 \n\030use_running_stats_method\030\024 \001(\010\022",
      "!\n\031initialize_average_splits\030\026 \001(\010\022\034\n\024in" +
      "ference_tree_paths\030\027 \001(\010\022\023\n\013num_outputs\030" +
      "\014 \001(\005\022L\n\026num_splits_to_consider\030\r \001(\0132,." +
      "tensorflow.tensorforest.DepthDependentPa" +
      "ram\022I\n\023split_after_samples\030\016 \001(\0132,.tenso" +
      "rflow.tensorforest.DepthDependentParam\022G" +
      "\n\021dominate_fraction\030\017 \001(\0132,.tensorflow.t" +
      "ensorforest.DepthDependentParam\022G\n\021min_s" +
      "plit_samples\030\022 \001(\0132,.tensorflow.tensorfo" +
      "rest.DepthDependentParam\022\021\n\tgraph_dir\030\020 ",
      "\001(\t\022\033\n\023num_select_features\030\021 \001(\005\022\034\n\024num_" +
      "classes_to_track\030\030 \001(\005*\220\001\n\rLeafModelType" +
      "\022\036\n\032MODEL_DENSE_CLASSIFICATION\020\000\022\037\n\033MODE" +
      "L_SPARSE_CLASSIFICATION\020\001\022\024\n\020MODEL_REGRE" +
      "SSION\020\002\022(\n$MODEL_SPARSE_OR_DENSE_CLASSIF" +
      "ICATION\020\003*\245\001\n\016StatsModelType\022\024\n\020STATS_DE" +
      "NSE_GINI\020\000\022\025\n\021STATS_SPARSE_GINI\020\001\022\"\n\036STA" +
      "TS_LEAST_SQUARES_REGRESSION\020\002\022 \n\034STATS_S" +
      "PARSE_THEN_DENSE_GINI\020\003\022 \n\034STATS_FIXED_S" +
      "IZE_SPARSE_GINI\020\004*H\n\023SplitCollectionType",
      "\022\024\n\020COLLECTION_BASIC\020\000\022\033\n\027GRAPH_RUNNER_C" +
      "OLLECTION\020\001*\226\001\n\030SplitPruningStrategyType" +
      "\022\024\n\020SPLIT_PRUNE_NONE\020\000\022\024\n\020SPLIT_PRUNE_HA" +
      "LF\020\001\022\027\n\023SPLIT_PRUNE_QUARTER\020\002\022\032\n\026SPLIT_P" +
      "RUNE_10_PERCENT\020\003\022\031\n\025SPLIT_PRUNE_HOEFFDI" +
      "NG\020\004*{\n\027SplitFinishStrategyType\022\026\n\022SPLIT" +
      "_FINISH_BASIC\020\000\022#\n\037SPLIT_FINISH_DOMINATE" +
      "_HOEFFDING\020\002\022#\n\037SPLIT_FINISH_DOMINATE_BO" +
      "OTSTRAP\020\003b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          tensorflow.decision_trees.GenericTreeModel.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_tensorforest_SplitPruningConfig_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_tensorforest_SplitPruningConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_SplitPruningConfig_descriptor,
        new java.lang.String[] { "PruneEverySamples", "Type", });
    internal_static_tensorflow_tensorforest_SplitFinishConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_tensorforest_SplitFinishConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_SplitFinishConfig_descriptor,
        new java.lang.String[] { "CheckEverySteps", "Type", });
    internal_static_tensorflow_tensorforest_LinearParam_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_tensorforest_LinearParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_LinearParam_descriptor,
        new java.lang.String[] { "Slope", "YIntercept", "MinVal", "MaxVal", });
    internal_static_tensorflow_tensorforest_ExponentialParam_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tensorflow_tensorforest_ExponentialParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_ExponentialParam_descriptor,
        new java.lang.String[] { "Bias", "Base", "Multiplier", "DepthMultiplier", });
    internal_static_tensorflow_tensorforest_ThresholdParam_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tensorflow_tensorforest_ThresholdParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_ThresholdParam_descriptor,
        new java.lang.String[] { "OnValue", "OffValue", "Threshold", });
    internal_static_tensorflow_tensorforest_DepthDependentParam_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_tensorflow_tensorforest_DepthDependentParam_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_DepthDependentParam_descriptor,
        new java.lang.String[] { "ConstantValue", "Linear", "Exponential", "Threshold", "ParamType", });
    internal_static_tensorflow_tensorforest_TensorForestParams_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_tensorflow_tensorforest_TensorForestParams_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_TensorForestParams_descriptor,
        new java.lang.String[] { "LeafType", "StatsType", "CollectionType", "PruningType", "FinishType", "NumTrees", "MaxNodes", "NumFeatures", "InequalityTestType", "IsRegression", "DropFinalClass", "CollateExamples", "CheckpointStats", "UseRunningStatsMethod", "InitializeAverageSplits", "InferenceTreePaths", "NumOutputs", "NumSplitsToConsider", "SplitAfterSamples", "DominateFraction", "MinSplitSamples", "GraphDir", "NumSelectFeatures", "NumClassesToTrack", });
    tensorflow.decision_trees.GenericTreeModel.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
