// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/contrib/tensor_forest/proto/fertile_stats.proto

package tensorflow.tensorforest;

public final class FertileStatsOuterClass {
  private FertileStatsOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FertileStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.FertileStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot> 
        getNodeToSlotList();
    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot getNodeToSlot(int index);
    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    int getNodeToSlotCount();
    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    java.util.List<? extends tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder> 
        getNodeToSlotOrBuilderList();
    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder getNodeToSlotOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code tensorflow.tensorforest.FertileStats}
   */
  public  static final class FertileStats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.FertileStats)
      FertileStatsOrBuilder {
    // Use FertileStats.newBuilder() to construct.
    private FertileStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FertileStats() {
      nodeToSlot_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FertileStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodeToSlot_ = new java.util.ArrayList<tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodeToSlot_.add(
                  input.readMessage(tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodeToSlot_ = java.util.Collections.unmodifiableList(nodeToSlot_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.FertileStatsOuterClass.FertileStats.class, tensorflow.tensorforest.FertileStatsOuterClass.FertileStats.Builder.class);
    }

    public static final int NODE_TO_SLOT_FIELD_NUMBER = 1;
    private java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot> nodeToSlot_;
    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    public java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot> getNodeToSlotList() {
      return nodeToSlot_;
    }
    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    public java.util.List<? extends tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder> 
        getNodeToSlotOrBuilderList() {
      return nodeToSlot_;
    }
    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    public int getNodeToSlotCount() {
      return nodeToSlot_.size();
    }
    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot getNodeToSlot(int index) {
      return nodeToSlot_.get(index);
    }
    /**
     * <pre>
     * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
     * This may be sized to max_nodes initially, or grow dynamically as needed.
     * </pre>
     *
     * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder getNodeToSlotOrBuilder(
        int index) {
      return nodeToSlot_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nodeToSlot_.size(); i++) {
        output.writeMessage(1, nodeToSlot_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodeToSlot_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodeToSlot_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.FertileStatsOuterClass.FertileStats)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.FertileStatsOuterClass.FertileStats other = (tensorflow.tensorforest.FertileStatsOuterClass.FertileStats) obj;

      boolean result = true;
      result = result && getNodeToSlotList()
          .equals(other.getNodeToSlotList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodeToSlotCount() > 0) {
        hash = (37 * hash) + NODE_TO_SLOT_FIELD_NUMBER;
        hash = (53 * hash) + getNodeToSlotList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.FertileStatsOuterClass.FertileStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tensorforest.FertileStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.FertileStats)
        tensorflow.tensorforest.FertileStatsOuterClass.FertileStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.FertileStatsOuterClass.FertileStats.class, tensorflow.tensorforest.FertileStatsOuterClass.FertileStats.Builder.class);
      }

      // Construct using tensorflow.tensorforest.FertileStatsOuterClass.FertileStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodeToSlotFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeToSlotBuilder_ == null) {
          nodeToSlot_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodeToSlotBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileStats_descriptor;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.FertileStats getDefaultInstanceForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.FertileStats.getDefaultInstance();
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.FertileStats build() {
        tensorflow.tensorforest.FertileStatsOuterClass.FertileStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.FertileStats buildPartial() {
        tensorflow.tensorforest.FertileStatsOuterClass.FertileStats result = new tensorflow.tensorforest.FertileStatsOuterClass.FertileStats(this);
        int from_bitField0_ = bitField0_;
        if (nodeToSlotBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodeToSlot_ = java.util.Collections.unmodifiableList(nodeToSlot_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodeToSlot_ = nodeToSlot_;
        } else {
          result.nodeToSlot_ = nodeToSlotBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.FertileStatsOuterClass.FertileStats) {
          return mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.FertileStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.FertileStatsOuterClass.FertileStats other) {
        if (other == tensorflow.tensorforest.FertileStatsOuterClass.FertileStats.getDefaultInstance()) return this;
        if (nodeToSlotBuilder_ == null) {
          if (!other.nodeToSlot_.isEmpty()) {
            if (nodeToSlot_.isEmpty()) {
              nodeToSlot_ = other.nodeToSlot_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodeToSlotIsMutable();
              nodeToSlot_.addAll(other.nodeToSlot_);
            }
            onChanged();
          }
        } else {
          if (!other.nodeToSlot_.isEmpty()) {
            if (nodeToSlotBuilder_.isEmpty()) {
              nodeToSlotBuilder_.dispose();
              nodeToSlotBuilder_ = null;
              nodeToSlot_ = other.nodeToSlot_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodeToSlotBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodeToSlotFieldBuilder() : null;
            } else {
              nodeToSlotBuilder_.addAllMessages(other.nodeToSlot_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.FertileStatsOuterClass.FertileStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.FertileStatsOuterClass.FertileStats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot> nodeToSlot_ =
        java.util.Collections.emptyList();
      private void ensureNodeToSlotIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodeToSlot_ = new java.util.ArrayList<tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot>(nodeToSlot_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder> nodeToSlotBuilder_;

      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot> getNodeToSlotList() {
        if (nodeToSlotBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodeToSlot_);
        } else {
          return nodeToSlotBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public int getNodeToSlotCount() {
        if (nodeToSlotBuilder_ == null) {
          return nodeToSlot_.size();
        } else {
          return nodeToSlotBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot getNodeToSlot(int index) {
        if (nodeToSlotBuilder_ == null) {
          return nodeToSlot_.get(index);
        } else {
          return nodeToSlotBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public Builder setNodeToSlot(
          int index, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot value) {
        if (nodeToSlotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeToSlotIsMutable();
          nodeToSlot_.set(index, value);
          onChanged();
        } else {
          nodeToSlotBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public Builder setNodeToSlot(
          int index, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder builderForValue) {
        if (nodeToSlotBuilder_ == null) {
          ensureNodeToSlotIsMutable();
          nodeToSlot_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodeToSlotBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public Builder addNodeToSlot(tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot value) {
        if (nodeToSlotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeToSlotIsMutable();
          nodeToSlot_.add(value);
          onChanged();
        } else {
          nodeToSlotBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public Builder addNodeToSlot(
          int index, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot value) {
        if (nodeToSlotBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeToSlotIsMutable();
          nodeToSlot_.add(index, value);
          onChanged();
        } else {
          nodeToSlotBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public Builder addNodeToSlot(
          tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder builderForValue) {
        if (nodeToSlotBuilder_ == null) {
          ensureNodeToSlotIsMutable();
          nodeToSlot_.add(builderForValue.build());
          onChanged();
        } else {
          nodeToSlotBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public Builder addNodeToSlot(
          int index, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder builderForValue) {
        if (nodeToSlotBuilder_ == null) {
          ensureNodeToSlotIsMutable();
          nodeToSlot_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodeToSlotBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public Builder addAllNodeToSlot(
          java.lang.Iterable<? extends tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot> values) {
        if (nodeToSlotBuilder_ == null) {
          ensureNodeToSlotIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodeToSlot_);
          onChanged();
        } else {
          nodeToSlotBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public Builder clearNodeToSlot() {
        if (nodeToSlotBuilder_ == null) {
          nodeToSlot_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodeToSlotBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public Builder removeNodeToSlot(int index) {
        if (nodeToSlotBuilder_ == null) {
          ensureNodeToSlotIsMutable();
          nodeToSlot_.remove(index);
          onChanged();
        } else {
          nodeToSlotBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder getNodeToSlotBuilder(
          int index) {
        return getNodeToSlotFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder getNodeToSlotOrBuilder(
          int index) {
        if (nodeToSlotBuilder_ == null) {
          return nodeToSlot_.get(index);  } else {
          return nodeToSlotBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public java.util.List<? extends tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder> 
           getNodeToSlotOrBuilderList() {
        if (nodeToSlotBuilder_ != null) {
          return nodeToSlotBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodeToSlot_);
        }
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder addNodeToSlotBuilder() {
        return getNodeToSlotFieldBuilder().addBuilder(
            tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.getDefaultInstance());
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder addNodeToSlotBuilder(
          int index) {
        return getNodeToSlotFieldBuilder().addBuilder(
            index, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.getDefaultInstance());
      }
      /**
       * <pre>
       * Tracks stats for each node.  node_to_slot[i] is the FertileSlot for node i.
       * This may be sized to max_nodes initially, or grow dynamically as needed.
       * </pre>
       *
       * <code>repeated .tensorflow.tensorforest.FertileSlot node_to_slot = 1;</code>
       */
      public java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder> 
           getNodeToSlotBuilderList() {
        return getNodeToSlotFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder> 
          getNodeToSlotFieldBuilder() {
        if (nodeToSlotBuilder_ == null) {
          nodeToSlotBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder>(
                  nodeToSlot_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodeToSlot_ = null;
        }
        return nodeToSlotBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.FertileStats)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.FertileStats)
    private static final tensorflow.tensorforest.FertileStatsOuterClass.FertileStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.FertileStatsOuterClass.FertileStats();
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FertileStats>
        PARSER = new com.google.protobuf.AbstractParser<FertileStats>() {
      public FertileStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FertileStats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FertileStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FertileStats> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.FertileStatsOuterClass.FertileStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GiniStatsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.GiniStats)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * This allows us to quickly track and calculate impurity (classification)
     *  by storing the sum of input weights and the sum of the squares of the
     * input weights.  Weighted gini is then: 1 - (square / sum * sum).
     * Updates to these numbers are:
     *   old_i = leaf-&gt;value(label)
     *   new_i = old_i + incoming_weight
     *   sum -&gt; sum + incoming_weight
     *   square -&gt; square - (old_i ^ 2) + (new_i ^ 2)
     *   total_left_sum -&gt; total_left_sum - old_left_i * old_total_i +
     *                                      new_left_i * new_total_i
     * </pre>
     *
     * <code>float square = 2;</code>
     */
    float getSquare();
  }
  /**
   * Protobuf type {@code tensorflow.tensorforest.GiniStats}
   */
  public  static final class GiniStats extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.GiniStats)
      GiniStatsOrBuilder {
    // Use GiniStats.newBuilder() to construct.
    private GiniStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GiniStats() {
      square_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private GiniStats(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 21: {

              square_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_GiniStats_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_GiniStats_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.class, tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.Builder.class);
    }

    public static final int SQUARE_FIELD_NUMBER = 2;
    private float square_;
    /**
     * <pre>
     * This allows us to quickly track and calculate impurity (classification)
     *  by storing the sum of input weights and the sum of the squares of the
     * input weights.  Weighted gini is then: 1 - (square / sum * sum).
     * Updates to these numbers are:
     *   old_i = leaf-&gt;value(label)
     *   new_i = old_i + incoming_weight
     *   sum -&gt; sum + incoming_weight
     *   square -&gt; square - (old_i ^ 2) + (new_i ^ 2)
     *   total_left_sum -&gt; total_left_sum - old_left_i * old_total_i +
     *                                      new_left_i * new_total_i
     * </pre>
     *
     * <code>float square = 2;</code>
     */
    public float getSquare() {
      return square_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (square_ != 0F) {
        output.writeFloat(2, square_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (square_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, square_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.FertileStatsOuterClass.GiniStats)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.FertileStatsOuterClass.GiniStats other = (tensorflow.tensorforest.FertileStatsOuterClass.GiniStats) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getSquare())
          == java.lang.Float.floatToIntBits(
              other.getSquare()));
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SQUARE_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getSquare());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.FertileStatsOuterClass.GiniStats prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tensorforest.GiniStats}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.GiniStats)
        tensorflow.tensorforest.FertileStatsOuterClass.GiniStatsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_GiniStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_GiniStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.class, tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.Builder.class);
      }

      // Construct using tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        square_ = 0F;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_GiniStats_descriptor;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.GiniStats getDefaultInstanceForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.getDefaultInstance();
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.GiniStats build() {
        tensorflow.tensorforest.FertileStatsOuterClass.GiniStats result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.GiniStats buildPartial() {
        tensorflow.tensorforest.FertileStatsOuterClass.GiniStats result = new tensorflow.tensorforest.FertileStatsOuterClass.GiniStats(this);
        result.square_ = square_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.FertileStatsOuterClass.GiniStats) {
          return mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.GiniStats)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.FertileStatsOuterClass.GiniStats other) {
        if (other == tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.getDefaultInstance()) return this;
        if (other.getSquare() != 0F) {
          setSquare(other.getSquare());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.FertileStatsOuterClass.GiniStats parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.FertileStatsOuterClass.GiniStats) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private float square_ ;
      /**
       * <pre>
       * This allows us to quickly track and calculate impurity (classification)
       *  by storing the sum of input weights and the sum of the squares of the
       * input weights.  Weighted gini is then: 1 - (square / sum * sum).
       * Updates to these numbers are:
       *   old_i = leaf-&gt;value(label)
       *   new_i = old_i + incoming_weight
       *   sum -&gt; sum + incoming_weight
       *   square -&gt; square - (old_i ^ 2) + (new_i ^ 2)
       *   total_left_sum -&gt; total_left_sum - old_left_i * old_total_i +
       *                                      new_left_i * new_total_i
       * </pre>
       *
       * <code>float square = 2;</code>
       */
      public float getSquare() {
        return square_;
      }
      /**
       * <pre>
       * This allows us to quickly track and calculate impurity (classification)
       *  by storing the sum of input weights and the sum of the squares of the
       * input weights.  Weighted gini is then: 1 - (square / sum * sum).
       * Updates to these numbers are:
       *   old_i = leaf-&gt;value(label)
       *   new_i = old_i + incoming_weight
       *   sum -&gt; sum + incoming_weight
       *   square -&gt; square - (old_i ^ 2) + (new_i ^ 2)
       *   total_left_sum -&gt; total_left_sum - old_left_i * old_total_i +
       *                                      new_left_i * new_total_i
       * </pre>
       *
       * <code>float square = 2;</code>
       */
      public Builder setSquare(float value) {
        
        square_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * This allows us to quickly track and calculate impurity (classification)
       *  by storing the sum of input weights and the sum of the squares of the
       * input weights.  Weighted gini is then: 1 - (square / sum * sum).
       * Updates to these numbers are:
       *   old_i = leaf-&gt;value(label)
       *   new_i = old_i + incoming_weight
       *   sum -&gt; sum + incoming_weight
       *   square -&gt; square - (old_i ^ 2) + (new_i ^ 2)
       *   total_left_sum -&gt; total_left_sum - old_left_i * old_total_i +
       *                                      new_left_i * new_total_i
       * </pre>
       *
       * <code>float square = 2;</code>
       */
      public Builder clearSquare() {
        
        square_ = 0F;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.GiniStats)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.GiniStats)
    private static final tensorflow.tensorforest.FertileStatsOuterClass.GiniStats DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.FertileStatsOuterClass.GiniStats();
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.GiniStats getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GiniStats>
        PARSER = new com.google.protobuf.AbstractParser<GiniStats>() {
      public GiniStats parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new GiniStats(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GiniStats> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GiniStats> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.FertileStatsOuterClass.GiniStats getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface LeafStatOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.LeafStat)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The sum of the weights of the training examples that we have seen.
     * This is here, outside of the leaf_stat oneof, because almost all
     * types will want it.
     * </pre>
     *
     * <code>float weight_sum = 3;</code>
     */
    float getWeightSum();

    /**
     * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats getClassification();
    /**
     * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStatsOrBuilder getClassificationOrBuilder();

    /**
     * <pre>
     * TODO(thomaswc): Add in v5's SparseClassStats.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats getRegression();
    /**
     * <pre>
     * TODO(thomaswc): Add in v5's SparseClassStats.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStatsOrBuilder getRegressionOrBuilder();

    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeafStatCase getLeafStatCase();
  }
  /**
   * Protobuf type {@code tensorflow.tensorforest.LeafStat}
   */
  public  static final class LeafStat extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.LeafStat)
      LeafStatOrBuilder {
    // Use LeafStat.newBuilder() to construct.
    private LeafStat(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private LeafStat() {
      weightSum_ = 0F;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private LeafStat(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.Builder subBuilder = null;
              if (leafStatCase_ == 1) {
                subBuilder = ((tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_).toBuilder();
              }
              leafStat_ =
                  input.readMessage(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_);
                leafStat_ = subBuilder.buildPartial();
              }
              leafStatCase_ = 1;
              break;
            }
            case 18: {
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.Builder subBuilder = null;
              if (leafStatCase_ == 2) {
                subBuilder = ((tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_).toBuilder();
              }
              leafStat_ =
                  input.readMessage(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_);
                leafStat_ = subBuilder.buildPartial();
              }
              leafStatCase_ = 2;
              break;
            }
            case 29: {

              weightSum_ = input.readFloat();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.class, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder.class);
    }

    public interface GiniImpurityClassificationStatsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
       */
      tensorflow.decision_trees.GenericTreeModel.Vector getDenseCounts();
      /**
       * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
       */
      tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder getDenseCountsOrBuilder();

      /**
       * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
       */
      tensorflow.decision_trees.GenericTreeModel.SparseVector getSparseCounts();
      /**
       * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
       */
      tensorflow.decision_trees.GenericTreeModel.SparseVectorOrBuilder getSparseCountsOrBuilder();

      /**
       * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
       */
      boolean hasGini();
      /**
       * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
       */
      tensorflow.tensorforest.FertileStatsOuterClass.GiniStats getGini();
      /**
       * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
       */
      tensorflow.tensorforest.FertileStatsOuterClass.GiniStatsOrBuilder getGiniOrBuilder();

      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.CountsCase getCountsCase();
    }
    /**
     * <pre>
     * TODO(thomaswc): Move the GiniStats out of LeafStats and into something
     * that only tracks them for splits.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats}
     */
    public  static final class GiniImpurityClassificationStats extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats)
        GiniImpurityClassificationStatsOrBuilder {
      // Use GiniImpurityClassificationStats.newBuilder() to construct.
      private GiniImpurityClassificationStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private GiniImpurityClassificationStats() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private GiniImpurityClassificationStats(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                tensorflow.decision_trees.GenericTreeModel.Vector.Builder subBuilder = null;
                if (countsCase_ == 1) {
                  subBuilder = ((tensorflow.decision_trees.GenericTreeModel.Vector) counts_).toBuilder();
                }
                counts_ =
                    input.readMessage(tensorflow.decision_trees.GenericTreeModel.Vector.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((tensorflow.decision_trees.GenericTreeModel.Vector) counts_);
                  counts_ = subBuilder.buildPartial();
                }
                countsCase_ = 1;
                break;
              }
              case 18: {
                tensorflow.decision_trees.GenericTreeModel.SparseVector.Builder subBuilder = null;
                if (countsCase_ == 2) {
                  subBuilder = ((tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_).toBuilder();
                }
                counts_ =
                    input.readMessage(tensorflow.decision_trees.GenericTreeModel.SparseVector.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_);
                  counts_ = subBuilder.buildPartial();
                }
                countsCase_ = 2;
                break;
              }
              case 26: {
                tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.Builder subBuilder = null;
                if (gini_ != null) {
                  subBuilder = gini_.toBuilder();
                }
                gini_ = input.readMessage(tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(gini_);
                  gini_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.class, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.Builder.class);
      }

      private int countsCase_ = 0;
      private java.lang.Object counts_;
      public enum CountsCase
          implements com.google.protobuf.Internal.EnumLite {
        DENSE_COUNTS(1),
        SPARSE_COUNTS(2),
        COUNTS_NOT_SET(0);
        private final int value;
        private CountsCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static CountsCase valueOf(int value) {
          return forNumber(value);
        }

        public static CountsCase forNumber(int value) {
          switch (value) {
            case 1: return DENSE_COUNTS;
            case 2: return SPARSE_COUNTS;
            case 0: return COUNTS_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public CountsCase
      getCountsCase() {
        return CountsCase.forNumber(
            countsCase_);
      }

      public static final int DENSE_COUNTS_FIELD_NUMBER = 1;
      /**
       * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.Vector getDenseCounts() {
        if (countsCase_ == 1) {
           return (tensorflow.decision_trees.GenericTreeModel.Vector) counts_;
        }
        return tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance();
      }
      /**
       * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder getDenseCountsOrBuilder() {
        if (countsCase_ == 1) {
           return (tensorflow.decision_trees.GenericTreeModel.Vector) counts_;
        }
        return tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance();
      }

      public static final int SPARSE_COUNTS_FIELD_NUMBER = 2;
      /**
       * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.SparseVector getSparseCounts() {
        if (countsCase_ == 2) {
           return (tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_;
        }
        return tensorflow.decision_trees.GenericTreeModel.SparseVector.getDefaultInstance();
      }
      /**
       * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.SparseVectorOrBuilder getSparseCountsOrBuilder() {
        if (countsCase_ == 2) {
           return (tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_;
        }
        return tensorflow.decision_trees.GenericTreeModel.SparseVector.getDefaultInstance();
      }

      public static final int GINI_FIELD_NUMBER = 3;
      private tensorflow.tensorforest.FertileStatsOuterClass.GiniStats gini_;
      /**
       * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
       */
      public boolean hasGini() {
        return gini_ != null;
      }
      /**
       * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.GiniStats getGini() {
        return gini_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.getDefaultInstance() : gini_;
      }
      /**
       * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.GiniStatsOrBuilder getGiniOrBuilder() {
        return getGini();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (countsCase_ == 1) {
          output.writeMessage(1, (tensorflow.decision_trees.GenericTreeModel.Vector) counts_);
        }
        if (countsCase_ == 2) {
          output.writeMessage(2, (tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_);
        }
        if (gini_ != null) {
          output.writeMessage(3, getGini());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (countsCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (tensorflow.decision_trees.GenericTreeModel.Vector) counts_);
        }
        if (countsCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_);
        }
        if (gini_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getGini());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats)) {
          return super.equals(obj);
        }
        tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats other = (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) obj;

        boolean result = true;
        result = result && (hasGini() == other.hasGini());
        if (hasGini()) {
          result = result && getGini()
              .equals(other.getGini());
        }
        result = result && getCountsCase().equals(
            other.getCountsCase());
        if (!result) return false;
        switch (countsCase_) {
          case 1:
            result = result && getDenseCounts()
                .equals(other.getDenseCounts());
            break;
          case 2:
            result = result && getSparseCounts()
                .equals(other.getSparseCounts());
            break;
          case 0:
          default:
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasGini()) {
          hash = (37 * hash) + GINI_FIELD_NUMBER;
          hash = (53 * hash) + getGini().hashCode();
        }
        switch (countsCase_) {
          case 1:
            hash = (37 * hash) + DENSE_COUNTS_FIELD_NUMBER;
            hash = (53 * hash) + getDenseCounts().hashCode();
            break;
          case 2:
            hash = (37 * hash) + SPARSE_COUNTS_FIELD_NUMBER;
            hash = (53 * hash) + getSparseCounts().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * TODO(thomaswc): Move the GiniStats out of LeafStats and into something
       * that only tracks them for splits.
       * </pre>
       *
       * Protobuf type {@code tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats)
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStatsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.class, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.Builder.class);
        }

        // Construct using tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          if (giniBuilder_ == null) {
            gini_ = null;
          } else {
            gini_ = null;
            giniBuilder_ = null;
          }
          countsCase_ = 0;
          counts_ = null;
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_descriptor;
        }

        public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats getDefaultInstanceForType() {
          return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.getDefaultInstance();
        }

        public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats build() {
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats buildPartial() {
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats result = new tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats(this);
          if (countsCase_ == 1) {
            if (denseCountsBuilder_ == null) {
              result.counts_ = counts_;
            } else {
              result.counts_ = denseCountsBuilder_.build();
            }
          }
          if (countsCase_ == 2) {
            if (sparseCountsBuilder_ == null) {
              result.counts_ = counts_;
            } else {
              result.counts_ = sparseCountsBuilder_.build();
            }
          }
          if (giniBuilder_ == null) {
            result.gini_ = gini_;
          } else {
            result.gini_ = giniBuilder_.build();
          }
          result.countsCase_ = countsCase_;
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) {
            return mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats other) {
          if (other == tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.getDefaultInstance()) return this;
          if (other.hasGini()) {
            mergeGini(other.getGini());
          }
          switch (other.getCountsCase()) {
            case DENSE_COUNTS: {
              mergeDenseCounts(other.getDenseCounts());
              break;
            }
            case SPARSE_COUNTS: {
              mergeSparseCounts(other.getSparseCounts());
              break;
            }
            case COUNTS_NOT_SET: {
              break;
            }
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int countsCase_ = 0;
        private java.lang.Object counts_;
        public CountsCase
            getCountsCase() {
          return CountsCase.forNumber(
              countsCase_);
        }

        public Builder clearCounts() {
          countsCase_ = 0;
          counts_ = null;
          onChanged();
          return this;
        }


        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.decision_trees.GenericTreeModel.Vector, tensorflow.decision_trees.GenericTreeModel.Vector.Builder, tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder> denseCountsBuilder_;
        /**
         * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.Vector getDenseCounts() {
          if (denseCountsBuilder_ == null) {
            if (countsCase_ == 1) {
              return (tensorflow.decision_trees.GenericTreeModel.Vector) counts_;
            }
            return tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance();
          } else {
            if (countsCase_ == 1) {
              return denseCountsBuilder_.getMessage();
            }
            return tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance();
          }
        }
        /**
         * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
         */
        public Builder setDenseCounts(tensorflow.decision_trees.GenericTreeModel.Vector value) {
          if (denseCountsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            counts_ = value;
            onChanged();
          } else {
            denseCountsBuilder_.setMessage(value);
          }
          countsCase_ = 1;
          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
         */
        public Builder setDenseCounts(
            tensorflow.decision_trees.GenericTreeModel.Vector.Builder builderForValue) {
          if (denseCountsBuilder_ == null) {
            counts_ = builderForValue.build();
            onChanged();
          } else {
            denseCountsBuilder_.setMessage(builderForValue.build());
          }
          countsCase_ = 1;
          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
         */
        public Builder mergeDenseCounts(tensorflow.decision_trees.GenericTreeModel.Vector value) {
          if (denseCountsBuilder_ == null) {
            if (countsCase_ == 1 &&
                counts_ != tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance()) {
              counts_ = tensorflow.decision_trees.GenericTreeModel.Vector.newBuilder((tensorflow.decision_trees.GenericTreeModel.Vector) counts_)
                  .mergeFrom(value).buildPartial();
            } else {
              counts_ = value;
            }
            onChanged();
          } else {
            if (countsCase_ == 1) {
              denseCountsBuilder_.mergeFrom(value);
            }
            denseCountsBuilder_.setMessage(value);
          }
          countsCase_ = 1;
          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
         */
        public Builder clearDenseCounts() {
          if (denseCountsBuilder_ == null) {
            if (countsCase_ == 1) {
              countsCase_ = 0;
              counts_ = null;
              onChanged();
            }
          } else {
            if (countsCase_ == 1) {
              countsCase_ = 0;
              counts_ = null;
            }
            denseCountsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.Vector.Builder getDenseCountsBuilder() {
          return getDenseCountsFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder getDenseCountsOrBuilder() {
          if ((countsCase_ == 1) && (denseCountsBuilder_ != null)) {
            return denseCountsBuilder_.getMessageOrBuilder();
          } else {
            if (countsCase_ == 1) {
              return (tensorflow.decision_trees.GenericTreeModel.Vector) counts_;
            }
            return tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance();
          }
        }
        /**
         * <code>.tensorflow.decision_trees.Vector dense_counts = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.decision_trees.GenericTreeModel.Vector, tensorflow.decision_trees.GenericTreeModel.Vector.Builder, tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder> 
            getDenseCountsFieldBuilder() {
          if (denseCountsBuilder_ == null) {
            if (!(countsCase_ == 1)) {
              counts_ = tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance();
            }
            denseCountsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                tensorflow.decision_trees.GenericTreeModel.Vector, tensorflow.decision_trees.GenericTreeModel.Vector.Builder, tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder>(
                    (tensorflow.decision_trees.GenericTreeModel.Vector) counts_,
                    getParentForChildren(),
                    isClean());
            counts_ = null;
          }
          countsCase_ = 1;
          onChanged();;
          return denseCountsBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.decision_trees.GenericTreeModel.SparseVector, tensorflow.decision_trees.GenericTreeModel.SparseVector.Builder, tensorflow.decision_trees.GenericTreeModel.SparseVectorOrBuilder> sparseCountsBuilder_;
        /**
         * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.SparseVector getSparseCounts() {
          if (sparseCountsBuilder_ == null) {
            if (countsCase_ == 2) {
              return (tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_;
            }
            return tensorflow.decision_trees.GenericTreeModel.SparseVector.getDefaultInstance();
          } else {
            if (countsCase_ == 2) {
              return sparseCountsBuilder_.getMessage();
            }
            return tensorflow.decision_trees.GenericTreeModel.SparseVector.getDefaultInstance();
          }
        }
        /**
         * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
         */
        public Builder setSparseCounts(tensorflow.decision_trees.GenericTreeModel.SparseVector value) {
          if (sparseCountsBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            counts_ = value;
            onChanged();
          } else {
            sparseCountsBuilder_.setMessage(value);
          }
          countsCase_ = 2;
          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
         */
        public Builder setSparseCounts(
            tensorflow.decision_trees.GenericTreeModel.SparseVector.Builder builderForValue) {
          if (sparseCountsBuilder_ == null) {
            counts_ = builderForValue.build();
            onChanged();
          } else {
            sparseCountsBuilder_.setMessage(builderForValue.build());
          }
          countsCase_ = 2;
          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
         */
        public Builder mergeSparseCounts(tensorflow.decision_trees.GenericTreeModel.SparseVector value) {
          if (sparseCountsBuilder_ == null) {
            if (countsCase_ == 2 &&
                counts_ != tensorflow.decision_trees.GenericTreeModel.SparseVector.getDefaultInstance()) {
              counts_ = tensorflow.decision_trees.GenericTreeModel.SparseVector.newBuilder((tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_)
                  .mergeFrom(value).buildPartial();
            } else {
              counts_ = value;
            }
            onChanged();
          } else {
            if (countsCase_ == 2) {
              sparseCountsBuilder_.mergeFrom(value);
            }
            sparseCountsBuilder_.setMessage(value);
          }
          countsCase_ = 2;
          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
         */
        public Builder clearSparseCounts() {
          if (sparseCountsBuilder_ == null) {
            if (countsCase_ == 2) {
              countsCase_ = 0;
              counts_ = null;
              onChanged();
            }
          } else {
            if (countsCase_ == 2) {
              countsCase_ = 0;
              counts_ = null;
            }
            sparseCountsBuilder_.clear();
          }
          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.SparseVector.Builder getSparseCountsBuilder() {
          return getSparseCountsFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.SparseVectorOrBuilder getSparseCountsOrBuilder() {
          if ((countsCase_ == 2) && (sparseCountsBuilder_ != null)) {
            return sparseCountsBuilder_.getMessageOrBuilder();
          } else {
            if (countsCase_ == 2) {
              return (tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_;
            }
            return tensorflow.decision_trees.GenericTreeModel.SparseVector.getDefaultInstance();
          }
        }
        /**
         * <code>.tensorflow.decision_trees.SparseVector sparse_counts = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.decision_trees.GenericTreeModel.SparseVector, tensorflow.decision_trees.GenericTreeModel.SparseVector.Builder, tensorflow.decision_trees.GenericTreeModel.SparseVectorOrBuilder> 
            getSparseCountsFieldBuilder() {
          if (sparseCountsBuilder_ == null) {
            if (!(countsCase_ == 2)) {
              counts_ = tensorflow.decision_trees.GenericTreeModel.SparseVector.getDefaultInstance();
            }
            sparseCountsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                tensorflow.decision_trees.GenericTreeModel.SparseVector, tensorflow.decision_trees.GenericTreeModel.SparseVector.Builder, tensorflow.decision_trees.GenericTreeModel.SparseVectorOrBuilder>(
                    (tensorflow.decision_trees.GenericTreeModel.SparseVector) counts_,
                    getParentForChildren(),
                    isClean());
            counts_ = null;
          }
          countsCase_ = 2;
          onChanged();;
          return sparseCountsBuilder_;
        }

        private tensorflow.tensorforest.FertileStatsOuterClass.GiniStats gini_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.tensorforest.FertileStatsOuterClass.GiniStats, tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.Builder, tensorflow.tensorforest.FertileStatsOuterClass.GiniStatsOrBuilder> giniBuilder_;
        /**
         * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
         */
        public boolean hasGini() {
          return giniBuilder_ != null || gini_ != null;
        }
        /**
         * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
         */
        public tensorflow.tensorforest.FertileStatsOuterClass.GiniStats getGini() {
          if (giniBuilder_ == null) {
            return gini_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.getDefaultInstance() : gini_;
          } else {
            return giniBuilder_.getMessage();
          }
        }
        /**
         * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
         */
        public Builder setGini(tensorflow.tensorforest.FertileStatsOuterClass.GiniStats value) {
          if (giniBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            gini_ = value;
            onChanged();
          } else {
            giniBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
         */
        public Builder setGini(
            tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.Builder builderForValue) {
          if (giniBuilder_ == null) {
            gini_ = builderForValue.build();
            onChanged();
          } else {
            giniBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
         */
        public Builder mergeGini(tensorflow.tensorforest.FertileStatsOuterClass.GiniStats value) {
          if (giniBuilder_ == null) {
            if (gini_ != null) {
              gini_ =
                tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.newBuilder(gini_).mergeFrom(value).buildPartial();
            } else {
              gini_ = value;
            }
            onChanged();
          } else {
            giniBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
         */
        public Builder clearGini() {
          if (giniBuilder_ == null) {
            gini_ = null;
            onChanged();
          } else {
            gini_ = null;
            giniBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
         */
        public tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.Builder getGiniBuilder() {
          
          onChanged();
          return getGiniFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
         */
        public tensorflow.tensorforest.FertileStatsOuterClass.GiniStatsOrBuilder getGiniOrBuilder() {
          if (giniBuilder_ != null) {
            return giniBuilder_.getMessageOrBuilder();
          } else {
            return gini_ == null ?
                tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.getDefaultInstance() : gini_;
          }
        }
        /**
         * <code>.tensorflow.tensorforest.GiniStats gini = 3;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.tensorforest.FertileStatsOuterClass.GiniStats, tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.Builder, tensorflow.tensorforest.FertileStatsOuterClass.GiniStatsOrBuilder> 
            getGiniFieldBuilder() {
          if (giniBuilder_ == null) {
            giniBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                tensorflow.tensorforest.FertileStatsOuterClass.GiniStats, tensorflow.tensorforest.FertileStatsOuterClass.GiniStats.Builder, tensorflow.tensorforest.FertileStatsOuterClass.GiniStatsOrBuilder>(
                    getGini(),
                    getParentForChildren(),
                    isClean());
            gini_ = null;
          }
          return giniBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats)
      private static final tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats();
      }

      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<GiniImpurityClassificationStats>
          PARSER = new com.google.protobuf.AbstractParser<GiniImpurityClassificationStats>() {
        public GiniImpurityClassificationStats parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new GiniImpurityClassificationStats(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<GiniImpurityClassificationStats> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<GiniImpurityClassificationStats> getParserForType() {
        return PARSER;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface LeastSquaresRegressionStatsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
       */
      boolean hasMeanOutput();
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
       */
      tensorflow.decision_trees.GenericTreeModel.Vector getMeanOutput();
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
       */
      tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder getMeanOutputOrBuilder();

      /**
       * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
       */
      boolean hasMeanOutputSquares();
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
       */
      tensorflow.decision_trees.GenericTreeModel.Vector getMeanOutputSquares();
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
       */
      tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder getMeanOutputSquaresOrBuilder();
    }
    /**
     * <pre>
     * This is the info needed for calculating variance for regression.
     * Variance will still have to be summed over every output, but the
     * number of outputs in regression problems is almost always 1.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats}
     */
    public  static final class LeastSquaresRegressionStats extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats)
        LeastSquaresRegressionStatsOrBuilder {
      // Use LeastSquaresRegressionStats.newBuilder() to construct.
      private LeastSquaresRegressionStats(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private LeastSquaresRegressionStats() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
      }
      private LeastSquaresRegressionStats(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        int mutable_bitField0_ = 0;
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!input.skipField(tag)) {
                  done = true;
                }
                break;
              }
              case 10: {
                tensorflow.decision_trees.GenericTreeModel.Vector.Builder subBuilder = null;
                if (meanOutput_ != null) {
                  subBuilder = meanOutput_.toBuilder();
                }
                meanOutput_ = input.readMessage(tensorflow.decision_trees.GenericTreeModel.Vector.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(meanOutput_);
                  meanOutput_ = subBuilder.buildPartial();
                }

                break;
              }
              case 18: {
                tensorflow.decision_trees.GenericTreeModel.Vector.Builder subBuilder = null;
                if (meanOutputSquares_ != null) {
                  subBuilder = meanOutputSquares_.toBuilder();
                }
                meanOutputSquares_ = input.readMessage(tensorflow.decision_trees.GenericTreeModel.Vector.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom(meanOutputSquares_);
                  meanOutputSquares_ = subBuilder.buildPartial();
                }

                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.class, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.Builder.class);
      }

      public static final int MEAN_OUTPUT_FIELD_NUMBER = 1;
      private tensorflow.decision_trees.GenericTreeModel.Vector meanOutput_;
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
       */
      public boolean hasMeanOutput() {
        return meanOutput_ != null;
      }
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.Vector getMeanOutput() {
        return meanOutput_ == null ? tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance() : meanOutput_;
      }
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder getMeanOutputOrBuilder() {
        return getMeanOutput();
      }

      public static final int MEAN_OUTPUT_SQUARES_FIELD_NUMBER = 2;
      private tensorflow.decision_trees.GenericTreeModel.Vector meanOutputSquares_;
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
       */
      public boolean hasMeanOutputSquares() {
        return meanOutputSquares_ != null;
      }
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.Vector getMeanOutputSquares() {
        return meanOutputSquares_ == null ? tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance() : meanOutputSquares_;
      }
      /**
       * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder getMeanOutputSquaresOrBuilder() {
        return getMeanOutputSquares();
      }

      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (meanOutput_ != null) {
          output.writeMessage(1, getMeanOutput());
        }
        if (meanOutputSquares_ != null) {
          output.writeMessage(2, getMeanOutputSquares());
        }
      }

      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (meanOutput_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getMeanOutput());
        }
        if (meanOutputSquares_ != null) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getMeanOutputSquares());
        }
        memoizedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats)) {
          return super.equals(obj);
        }
        tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats other = (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) obj;

        boolean result = true;
        result = result && (hasMeanOutput() == other.hasMeanOutput());
        if (hasMeanOutput()) {
          result = result && getMeanOutput()
              .equals(other.getMeanOutput());
        }
        result = result && (hasMeanOutputSquares() == other.hasMeanOutputSquares());
        if (hasMeanOutputSquares()) {
          result = result && getMeanOutputSquares()
              .equals(other.getMeanOutputSquares());
        }
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMeanOutput()) {
          hash = (37 * hash) + MEAN_OUTPUT_FIELD_NUMBER;
          hash = (53 * hash) + getMeanOutput().hashCode();
        }
        if (hasMeanOutputSquares()) {
          hash = (37 * hash) + MEAN_OUTPUT_SQUARES_FIELD_NUMBER;
          hash = (53 * hash) + getMeanOutputSquares().hashCode();
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * This is the info needed for calculating variance for regression.
       * Variance will still have to be summed over every output, but the
       * number of outputs in regression problems is almost always 1.
       * </pre>
       *
       * Protobuf type {@code tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats)
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStatsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_descriptor;
        }

        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.class, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.Builder.class);
        }

        // Construct using tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        public Builder clear() {
          super.clear();
          if (meanOutputBuilder_ == null) {
            meanOutput_ = null;
          } else {
            meanOutput_ = null;
            meanOutputBuilder_ = null;
          }
          if (meanOutputSquaresBuilder_ == null) {
            meanOutputSquares_ = null;
          } else {
            meanOutputSquares_ = null;
            meanOutputSquaresBuilder_ = null;
          }
          return this;
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_descriptor;
        }

        public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats getDefaultInstanceForType() {
          return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.getDefaultInstance();
        }

        public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats build() {
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats buildPartial() {
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats result = new tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats(this);
          if (meanOutputBuilder_ == null) {
            result.meanOutput_ = meanOutput_;
          } else {
            result.meanOutput_ = meanOutputBuilder_.build();
          }
          if (meanOutputSquaresBuilder_ == null) {
            result.meanOutputSquares_ = meanOutputSquares_;
          } else {
            result.meanOutputSquares_ = meanOutputSquaresBuilder_.build();
          }
          onBuilt();
          return result;
        }

        public Builder clone() {
          return (Builder) super.clone();
        }
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.setField(field, value);
        }
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) {
            return mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats other) {
          if (other == tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.getDefaultInstance()) return this;
          if (other.hasMeanOutput()) {
            mergeMeanOutput(other.getMeanOutput());
          }
          if (other.hasMeanOutputSquares()) {
            mergeMeanOutputSquares(other.getMeanOutputSquares());
          }
          onChanged();
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }

        private tensorflow.decision_trees.GenericTreeModel.Vector meanOutput_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.decision_trees.GenericTreeModel.Vector, tensorflow.decision_trees.GenericTreeModel.Vector.Builder, tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder> meanOutputBuilder_;
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
         */
        public boolean hasMeanOutput() {
          return meanOutputBuilder_ != null || meanOutput_ != null;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.Vector getMeanOutput() {
          if (meanOutputBuilder_ == null) {
            return meanOutput_ == null ? tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance() : meanOutput_;
          } else {
            return meanOutputBuilder_.getMessage();
          }
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
         */
        public Builder setMeanOutput(tensorflow.decision_trees.GenericTreeModel.Vector value) {
          if (meanOutputBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            meanOutput_ = value;
            onChanged();
          } else {
            meanOutputBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
         */
        public Builder setMeanOutput(
            tensorflow.decision_trees.GenericTreeModel.Vector.Builder builderForValue) {
          if (meanOutputBuilder_ == null) {
            meanOutput_ = builderForValue.build();
            onChanged();
          } else {
            meanOutputBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
         */
        public Builder mergeMeanOutput(tensorflow.decision_trees.GenericTreeModel.Vector value) {
          if (meanOutputBuilder_ == null) {
            if (meanOutput_ != null) {
              meanOutput_ =
                tensorflow.decision_trees.GenericTreeModel.Vector.newBuilder(meanOutput_).mergeFrom(value).buildPartial();
            } else {
              meanOutput_ = value;
            }
            onChanged();
          } else {
            meanOutputBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
         */
        public Builder clearMeanOutput() {
          if (meanOutputBuilder_ == null) {
            meanOutput_ = null;
            onChanged();
          } else {
            meanOutput_ = null;
            meanOutputBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.Vector.Builder getMeanOutputBuilder() {
          
          onChanged();
          return getMeanOutputFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder getMeanOutputOrBuilder() {
          if (meanOutputBuilder_ != null) {
            return meanOutputBuilder_.getMessageOrBuilder();
          } else {
            return meanOutput_ == null ?
                tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance() : meanOutput_;
          }
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.decision_trees.GenericTreeModel.Vector, tensorflow.decision_trees.GenericTreeModel.Vector.Builder, tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder> 
            getMeanOutputFieldBuilder() {
          if (meanOutputBuilder_ == null) {
            meanOutputBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                tensorflow.decision_trees.GenericTreeModel.Vector, tensorflow.decision_trees.GenericTreeModel.Vector.Builder, tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder>(
                    getMeanOutput(),
                    getParentForChildren(),
                    isClean());
            meanOutput_ = null;
          }
          return meanOutputBuilder_;
        }

        private tensorflow.decision_trees.GenericTreeModel.Vector meanOutputSquares_ = null;
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.decision_trees.GenericTreeModel.Vector, tensorflow.decision_trees.GenericTreeModel.Vector.Builder, tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder> meanOutputSquaresBuilder_;
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
         */
        public boolean hasMeanOutputSquares() {
          return meanOutputSquaresBuilder_ != null || meanOutputSquares_ != null;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.Vector getMeanOutputSquares() {
          if (meanOutputSquaresBuilder_ == null) {
            return meanOutputSquares_ == null ? tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance() : meanOutputSquares_;
          } else {
            return meanOutputSquaresBuilder_.getMessage();
          }
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
         */
        public Builder setMeanOutputSquares(tensorflow.decision_trees.GenericTreeModel.Vector value) {
          if (meanOutputSquaresBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            meanOutputSquares_ = value;
            onChanged();
          } else {
            meanOutputSquaresBuilder_.setMessage(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
         */
        public Builder setMeanOutputSquares(
            tensorflow.decision_trees.GenericTreeModel.Vector.Builder builderForValue) {
          if (meanOutputSquaresBuilder_ == null) {
            meanOutputSquares_ = builderForValue.build();
            onChanged();
          } else {
            meanOutputSquaresBuilder_.setMessage(builderForValue.build());
          }

          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
         */
        public Builder mergeMeanOutputSquares(tensorflow.decision_trees.GenericTreeModel.Vector value) {
          if (meanOutputSquaresBuilder_ == null) {
            if (meanOutputSquares_ != null) {
              meanOutputSquares_ =
                tensorflow.decision_trees.GenericTreeModel.Vector.newBuilder(meanOutputSquares_).mergeFrom(value).buildPartial();
            } else {
              meanOutputSquares_ = value;
            }
            onChanged();
          } else {
            meanOutputSquaresBuilder_.mergeFrom(value);
          }

          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
         */
        public Builder clearMeanOutputSquares() {
          if (meanOutputSquaresBuilder_ == null) {
            meanOutputSquares_ = null;
            onChanged();
          } else {
            meanOutputSquares_ = null;
            meanOutputSquaresBuilder_ = null;
          }

          return this;
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.Vector.Builder getMeanOutputSquaresBuilder() {
          
          onChanged();
          return getMeanOutputSquaresFieldBuilder().getBuilder();
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
         */
        public tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder getMeanOutputSquaresOrBuilder() {
          if (meanOutputSquaresBuilder_ != null) {
            return meanOutputSquaresBuilder_.getMessageOrBuilder();
          } else {
            return meanOutputSquares_ == null ?
                tensorflow.decision_trees.GenericTreeModel.Vector.getDefaultInstance() : meanOutputSquares_;
          }
        }
        /**
         * <code>.tensorflow.decision_trees.Vector mean_output_squares = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            tensorflow.decision_trees.GenericTreeModel.Vector, tensorflow.decision_trees.GenericTreeModel.Vector.Builder, tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder> 
            getMeanOutputSquaresFieldBuilder() {
          if (meanOutputSquaresBuilder_ == null) {
            meanOutputSquaresBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                tensorflow.decision_trees.GenericTreeModel.Vector, tensorflow.decision_trees.GenericTreeModel.Vector.Builder, tensorflow.decision_trees.GenericTreeModel.VectorOrBuilder>(
                    getMeanOutputSquares(),
                    getParentForChildren(),
                    isClean());
            meanOutputSquares_ = null;
          }
          return meanOutputSquaresBuilder_;
        }
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }

        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return this;
        }


        // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats)
      }

      // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats)
      private static final tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats();
      }

      public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<LeastSquaresRegressionStats>
          PARSER = new com.google.protobuf.AbstractParser<LeastSquaresRegressionStats>() {
        public LeastSquaresRegressionStats parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
            return new LeastSquaresRegressionStats(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<LeastSquaresRegressionStats> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<LeastSquaresRegressionStats> getParserForType() {
        return PARSER;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int leafStatCase_ = 0;
    private java.lang.Object leafStat_;
    public enum LeafStatCase
        implements com.google.protobuf.Internal.EnumLite {
      CLASSIFICATION(1),
      REGRESSION(2),
      LEAFSTAT_NOT_SET(0);
      private final int value;
      private LeafStatCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static LeafStatCase valueOf(int value) {
        return forNumber(value);
      }

      public static LeafStatCase forNumber(int value) {
        switch (value) {
          case 1: return CLASSIFICATION;
          case 2: return REGRESSION;
          case 0: return LEAFSTAT_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public LeafStatCase
    getLeafStatCase() {
      return LeafStatCase.forNumber(
          leafStatCase_);
    }

    public static final int WEIGHT_SUM_FIELD_NUMBER = 3;
    private float weightSum_;
    /**
     * <pre>
     * The sum of the weights of the training examples that we have seen.
     * This is here, outside of the leaf_stat oneof, because almost all
     * types will want it.
     * </pre>
     *
     * <code>float weight_sum = 3;</code>
     */
    public float getWeightSum() {
      return weightSum_;
    }

    public static final int CLASSIFICATION_FIELD_NUMBER = 1;
    /**
     * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats getClassification() {
      if (leafStatCase_ == 1) {
         return (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_;
      }
      return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.getDefaultInstance();
    }
    /**
     * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStatsOrBuilder getClassificationOrBuilder() {
      if (leafStatCase_ == 1) {
         return (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_;
      }
      return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.getDefaultInstance();
    }

    public static final int REGRESSION_FIELD_NUMBER = 2;
    /**
     * <pre>
     * TODO(thomaswc): Add in v5's SparseClassStats.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats getRegression() {
      if (leafStatCase_ == 2) {
         return (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_;
      }
      return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.getDefaultInstance();
    }
    /**
     * <pre>
     * TODO(thomaswc): Add in v5's SparseClassStats.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStatsOrBuilder getRegressionOrBuilder() {
      if (leafStatCase_ == 2) {
         return (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_;
      }
      return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (leafStatCase_ == 1) {
        output.writeMessage(1, (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_);
      }
      if (leafStatCase_ == 2) {
        output.writeMessage(2, (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_);
      }
      if (weightSum_ != 0F) {
        output.writeFloat(3, weightSum_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (leafStatCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_);
      }
      if (leafStatCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_);
      }
      if (weightSum_ != 0F) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, weightSum_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.FertileStatsOuterClass.LeafStat)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.FertileStatsOuterClass.LeafStat other = (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat) obj;

      boolean result = true;
      result = result && (
          java.lang.Float.floatToIntBits(getWeightSum())
          == java.lang.Float.floatToIntBits(
              other.getWeightSum()));
      result = result && getLeafStatCase().equals(
          other.getLeafStatCase());
      if (!result) return false;
      switch (leafStatCase_) {
        case 1:
          result = result && getClassification()
              .equals(other.getClassification());
          break;
        case 2:
          result = result && getRegression()
              .equals(other.getRegression());
          break;
        case 0:
        default:
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + WEIGHT_SUM_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getWeightSum());
      switch (leafStatCase_) {
        case 1:
          hash = (37 * hash) + CLASSIFICATION_FIELD_NUMBER;
          hash = (53 * hash) + getClassification().hashCode();
          break;
        case 2:
          hash = (37 * hash) + REGRESSION_FIELD_NUMBER;
          hash = (53 * hash) + getRegression().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tensorforest.LeafStat}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.LeafStat)
        tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.class, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder.class);
      }

      // Construct using tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        weightSum_ = 0F;

        leafStatCase_ = 0;
        leafStat_ = null;
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_LeafStat_descriptor;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getDefaultInstanceForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance();
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat build() {
        tensorflow.tensorforest.FertileStatsOuterClass.LeafStat result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat buildPartial() {
        tensorflow.tensorforest.FertileStatsOuterClass.LeafStat result = new tensorflow.tensorforest.FertileStatsOuterClass.LeafStat(this);
        result.weightSum_ = weightSum_;
        if (leafStatCase_ == 1) {
          if (classificationBuilder_ == null) {
            result.leafStat_ = leafStat_;
          } else {
            result.leafStat_ = classificationBuilder_.build();
          }
        }
        if (leafStatCase_ == 2) {
          if (regressionBuilder_ == null) {
            result.leafStat_ = leafStat_;
          } else {
            result.leafStat_ = regressionBuilder_.build();
          }
        }
        result.leafStatCase_ = leafStatCase_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.FertileStatsOuterClass.LeafStat) {
          return mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.LeafStat)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat other) {
        if (other == tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance()) return this;
        if (other.getWeightSum() != 0F) {
          setWeightSum(other.getWeightSum());
        }
        switch (other.getLeafStatCase()) {
          case CLASSIFICATION: {
            mergeClassification(other.getClassification());
            break;
          }
          case REGRESSION: {
            mergeRegression(other.getRegression());
            break;
          }
          case LEAFSTAT_NOT_SET: {
            break;
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.FertileStatsOuterClass.LeafStat parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int leafStatCase_ = 0;
      private java.lang.Object leafStat_;
      public LeafStatCase
          getLeafStatCase() {
        return LeafStatCase.forNumber(
            leafStatCase_);
      }

      public Builder clearLeafStat() {
        leafStatCase_ = 0;
        leafStat_ = null;
        onChanged();
        return this;
      }


      private float weightSum_ ;
      /**
       * <pre>
       * The sum of the weights of the training examples that we have seen.
       * This is here, outside of the leaf_stat oneof, because almost all
       * types will want it.
       * </pre>
       *
       * <code>float weight_sum = 3;</code>
       */
      public float getWeightSum() {
        return weightSum_;
      }
      /**
       * <pre>
       * The sum of the weights of the training examples that we have seen.
       * This is here, outside of the leaf_stat oneof, because almost all
       * types will want it.
       * </pre>
       *
       * <code>float weight_sum = 3;</code>
       */
      public Builder setWeightSum(float value) {
        
        weightSum_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The sum of the weights of the training examples that we have seen.
       * This is here, outside of the leaf_stat oneof, because almost all
       * types will want it.
       * </pre>
       *
       * <code>float weight_sum = 3;</code>
       */
      public Builder clearWeightSum() {
        
        weightSum_ = 0F;
        onChanged();
        return this;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStatsOrBuilder> classificationBuilder_;
      /**
       * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats getClassification() {
        if (classificationBuilder_ == null) {
          if (leafStatCase_ == 1) {
            return (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_;
          }
          return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.getDefaultInstance();
        } else {
          if (leafStatCase_ == 1) {
            return classificationBuilder_.getMessage();
          }
          return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
       */
      public Builder setClassification(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats value) {
        if (classificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leafStat_ = value;
          onChanged();
        } else {
          classificationBuilder_.setMessage(value);
        }
        leafStatCase_ = 1;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
       */
      public Builder setClassification(
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.Builder builderForValue) {
        if (classificationBuilder_ == null) {
          leafStat_ = builderForValue.build();
          onChanged();
        } else {
          classificationBuilder_.setMessage(builderForValue.build());
        }
        leafStatCase_ = 1;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
       */
      public Builder mergeClassification(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats value) {
        if (classificationBuilder_ == null) {
          if (leafStatCase_ == 1 &&
              leafStat_ != tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.getDefaultInstance()) {
            leafStat_ = tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.newBuilder((tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_)
                .mergeFrom(value).buildPartial();
          } else {
            leafStat_ = value;
          }
          onChanged();
        } else {
          if (leafStatCase_ == 1) {
            classificationBuilder_.mergeFrom(value);
          }
          classificationBuilder_.setMessage(value);
        }
        leafStatCase_ = 1;
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
       */
      public Builder clearClassification() {
        if (classificationBuilder_ == null) {
          if (leafStatCase_ == 1) {
            leafStatCase_ = 0;
            leafStat_ = null;
            onChanged();
          }
        } else {
          if (leafStatCase_ == 1) {
            leafStatCase_ = 0;
            leafStat_ = null;
          }
          classificationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.Builder getClassificationBuilder() {
        return getClassificationFieldBuilder().getBuilder();
      }
      /**
       * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStatsOrBuilder getClassificationOrBuilder() {
        if ((leafStatCase_ == 1) && (classificationBuilder_ != null)) {
          return classificationBuilder_.getMessageOrBuilder();
        } else {
          if (leafStatCase_ == 1) {
            return (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_;
          }
          return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.getDefaultInstance();
        }
      }
      /**
       * <code>.tensorflow.tensorforest.LeafStat.GiniImpurityClassificationStats classification = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStatsOrBuilder> 
          getClassificationFieldBuilder() {
        if (classificationBuilder_ == null) {
          if (!(leafStatCase_ == 1)) {
            leafStat_ = tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.getDefaultInstance();
          }
          classificationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStatsOrBuilder>(
                  (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.GiniImpurityClassificationStats) leafStat_,
                  getParentForChildren(),
                  isClean());
          leafStat_ = null;
        }
        leafStatCase_ = 1;
        onChanged();;
        return classificationBuilder_;
      }

      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStatsOrBuilder> regressionBuilder_;
      /**
       * <pre>
       * TODO(thomaswc): Add in v5's SparseClassStats.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats getRegression() {
        if (regressionBuilder_ == null) {
          if (leafStatCase_ == 2) {
            return (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_;
          }
          return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.getDefaultInstance();
        } else {
          if (leafStatCase_ == 2) {
            return regressionBuilder_.getMessage();
          }
          return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * TODO(thomaswc): Add in v5's SparseClassStats.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
       */
      public Builder setRegression(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats value) {
        if (regressionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leafStat_ = value;
          onChanged();
        } else {
          regressionBuilder_.setMessage(value);
        }
        leafStatCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * TODO(thomaswc): Add in v5's SparseClassStats.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
       */
      public Builder setRegression(
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.Builder builderForValue) {
        if (regressionBuilder_ == null) {
          leafStat_ = builderForValue.build();
          onChanged();
        } else {
          regressionBuilder_.setMessage(builderForValue.build());
        }
        leafStatCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * TODO(thomaswc): Add in v5's SparseClassStats.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
       */
      public Builder mergeRegression(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats value) {
        if (regressionBuilder_ == null) {
          if (leafStatCase_ == 2 &&
              leafStat_ != tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.getDefaultInstance()) {
            leafStat_ = tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.newBuilder((tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_)
                .mergeFrom(value).buildPartial();
          } else {
            leafStat_ = value;
          }
          onChanged();
        } else {
          if (leafStatCase_ == 2) {
            regressionBuilder_.mergeFrom(value);
          }
          regressionBuilder_.setMessage(value);
        }
        leafStatCase_ = 2;
        return this;
      }
      /**
       * <pre>
       * TODO(thomaswc): Add in v5's SparseClassStats.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
       */
      public Builder clearRegression() {
        if (regressionBuilder_ == null) {
          if (leafStatCase_ == 2) {
            leafStatCase_ = 0;
            leafStat_ = null;
            onChanged();
          }
        } else {
          if (leafStatCase_ == 2) {
            leafStatCase_ = 0;
            leafStat_ = null;
          }
          regressionBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * TODO(thomaswc): Add in v5's SparseClassStats.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.Builder getRegressionBuilder() {
        return getRegressionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * TODO(thomaswc): Add in v5's SparseClassStats.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStatsOrBuilder getRegressionOrBuilder() {
        if ((leafStatCase_ == 2) && (regressionBuilder_ != null)) {
          return regressionBuilder_.getMessageOrBuilder();
        } else {
          if (leafStatCase_ == 2) {
            return (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_;
          }
          return tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * TODO(thomaswc): Add in v5's SparseClassStats.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat.LeastSquaresRegressionStats regression = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStatsOrBuilder> 
          getRegressionFieldBuilder() {
        if (regressionBuilder_ == null) {
          if (!(leafStatCase_ == 2)) {
            leafStat_ = tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.getDefaultInstance();
          }
          regressionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStatsOrBuilder>(
                  (tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.LeastSquaresRegressionStats) leafStat_,
                  getParentForChildren(),
                  isClean());
          leafStat_ = null;
        }
        leafStatCase_ = 2;
        onChanged();;
        return regressionBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.LeafStat)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.LeafStat)
    private static final tensorflow.tensorforest.FertileStatsOuterClass.LeafStat DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.FertileStatsOuterClass.LeafStat();
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<LeafStat>
        PARSER = new com.google.protobuf.AbstractParser<LeafStat>() {
      public LeafStat parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new LeafStat(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<LeafStat> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<LeafStat> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FertileSlotOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.FertileSlot)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The statistics for *all* the examples seen at this leaf.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
     */
    boolean hasLeafStats();
    /**
     * <pre>
     * The statistics for *all* the examples seen at this leaf.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getLeafStats();
    /**
     * <pre>
     * The statistics for *all* the examples seen at this leaf.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getLeafStatsOrBuilder();

    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate> 
        getCandidatesList();
    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate getCandidates(int index);
    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    int getCandidatesCount();
    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    java.util.List<? extends tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder> 
        getCandidatesOrBuilderList();
    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder getCandidatesOrBuilder(
        int index);

    /**
     * <pre>
     * The statistics for the examples seen at this leaf after all the
     * splits have been initialized.  If post_init_leaf_stats.weight_sum
     * is &gt; 0, then all candidates have been initialized.  We need to track
     * both leaf_stats and post_init_leaf_stats because the first is used
     * to create the decision_tree::Leaf and the second is used to infer
     * the statistics for the right side of a split (given the leaf side
     * stats).
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
     */
    boolean hasPostInitLeafStats();
    /**
     * <pre>
     * The statistics for the examples seen at this leaf after all the
     * splits have been initialized.  If post_init_leaf_stats.weight_sum
     * is &gt; 0, then all candidates have been initialized.  We need to track
     * both leaf_stats and post_init_leaf_stats because the first is used
     * to create the decision_tree::Leaf and the second is used to infer
     * the statistics for the right side of a split (given the leaf side
     * stats).
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getPostInitLeafStats();
    /**
     * <pre>
     * The statistics for the examples seen at this leaf after all the
     * splits have been initialized.  If post_init_leaf_stats.weight_sum
     * is &gt; 0, then all candidates have been initialized.  We need to track
     * both leaf_stats and post_init_leaf_stats because the first is used
     * to create the decision_tree::Leaf and the second is used to infer
     * the statistics for the right side of a split (given the leaf side
     * stats).
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getPostInitLeafStatsOrBuilder();

    /**
     * <code>int32 node_id = 5;</code>
     */
    int getNodeId();

    /**
     * <code>int32 depth = 7;</code>
     */
    int getDepth();
  }
  /**
   * Protobuf type {@code tensorflow.tensorforest.FertileSlot}
   */
  public  static final class FertileSlot extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.FertileSlot)
      FertileSlotOrBuilder {
    // Use FertileSlot.newBuilder() to construct.
    private FertileSlot(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FertileSlot() {
      candidates_ = java.util.Collections.emptyList();
      nodeId_ = 0;
      depth_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private FertileSlot(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                candidates_ = new java.util.ArrayList<tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate>();
                mutable_bitField0_ |= 0x00000002;
              }
              candidates_.add(
                  input.readMessage(tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.parser(), extensionRegistry));
              break;
            }
            case 34: {
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder subBuilder = null;
              if (leafStats_ != null) {
                subBuilder = leafStats_.toBuilder();
              }
              leafStats_ = input.readMessage(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(leafStats_);
                leafStats_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              nodeId_ = input.readInt32();
              break;
            }
            case 50: {
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder subBuilder = null;
              if (postInitLeafStats_ != null) {
                subBuilder = postInitLeafStats_.toBuilder();
              }
              postInitLeafStats_ = input.readMessage(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(postInitLeafStats_);
                postInitLeafStats_ = subBuilder.buildPartial();
              }

              break;
            }
            case 56: {

              depth_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          candidates_ = java.util.Collections.unmodifiableList(candidates_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileSlot_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileSlot_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.class, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder.class);
    }

    private int bitField0_;
    public static final int LEAF_STATS_FIELD_NUMBER = 4;
    private tensorflow.tensorforest.FertileStatsOuterClass.LeafStat leafStats_;
    /**
     * <pre>
     * The statistics for *all* the examples seen at this leaf.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
     */
    public boolean hasLeafStats() {
      return leafStats_ != null;
    }
    /**
     * <pre>
     * The statistics for *all* the examples seen at this leaf.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getLeafStats() {
      return leafStats_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : leafStats_;
    }
    /**
     * <pre>
     * The statistics for *all* the examples seen at this leaf.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getLeafStatsOrBuilder() {
      return getLeafStats();
    }

    public static final int CANDIDATES_FIELD_NUMBER = 1;
    private java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate> candidates_;
    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    public java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate> getCandidatesList() {
      return candidates_;
    }
    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    public java.util.List<? extends tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder> 
        getCandidatesOrBuilderList() {
      return candidates_;
    }
    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    public int getCandidatesCount() {
      return candidates_.size();
    }
    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate getCandidates(int index) {
      return candidates_.get(index);
    }
    /**
     * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder getCandidatesOrBuilder(
        int index) {
      return candidates_.get(index);
    }

    public static final int POST_INIT_LEAF_STATS_FIELD_NUMBER = 6;
    private tensorflow.tensorforest.FertileStatsOuterClass.LeafStat postInitLeafStats_;
    /**
     * <pre>
     * The statistics for the examples seen at this leaf after all the
     * splits have been initialized.  If post_init_leaf_stats.weight_sum
     * is &gt; 0, then all candidates have been initialized.  We need to track
     * both leaf_stats and post_init_leaf_stats because the first is used
     * to create the decision_tree::Leaf and the second is used to infer
     * the statistics for the right side of a split (given the leaf side
     * stats).
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
     */
    public boolean hasPostInitLeafStats() {
      return postInitLeafStats_ != null;
    }
    /**
     * <pre>
     * The statistics for the examples seen at this leaf after all the
     * splits have been initialized.  If post_init_leaf_stats.weight_sum
     * is &gt; 0, then all candidates have been initialized.  We need to track
     * both leaf_stats and post_init_leaf_stats because the first is used
     * to create the decision_tree::Leaf and the second is used to infer
     * the statistics for the right side of a split (given the leaf side
     * stats).
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getPostInitLeafStats() {
      return postInitLeafStats_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : postInitLeafStats_;
    }
    /**
     * <pre>
     * The statistics for the examples seen at this leaf after all the
     * splits have been initialized.  If post_init_leaf_stats.weight_sum
     * is &gt; 0, then all candidates have been initialized.  We need to track
     * both leaf_stats and post_init_leaf_stats because the first is used
     * to create the decision_tree::Leaf and the second is used to infer
     * the statistics for the right side of a split (given the leaf side
     * stats).
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getPostInitLeafStatsOrBuilder() {
      return getPostInitLeafStats();
    }

    public static final int NODE_ID_FIELD_NUMBER = 5;
    private int nodeId_;
    /**
     * <code>int32 node_id = 5;</code>
     */
    public int getNodeId() {
      return nodeId_;
    }

    public static final int DEPTH_FIELD_NUMBER = 7;
    private int depth_;
    /**
     * <code>int32 depth = 7;</code>
     */
    public int getDepth() {
      return depth_;
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < candidates_.size(); i++) {
        output.writeMessage(1, candidates_.get(i));
      }
      if (leafStats_ != null) {
        output.writeMessage(4, getLeafStats());
      }
      if (nodeId_ != 0) {
        output.writeInt32(5, nodeId_);
      }
      if (postInitLeafStats_ != null) {
        output.writeMessage(6, getPostInitLeafStats());
      }
      if (depth_ != 0) {
        output.writeInt32(7, depth_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < candidates_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, candidates_.get(i));
      }
      if (leafStats_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLeafStats());
      }
      if (nodeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, nodeId_);
      }
      if (postInitLeafStats_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPostInitLeafStats());
      }
      if (depth_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, depth_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot other = (tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot) obj;

      boolean result = true;
      result = result && (hasLeafStats() == other.hasLeafStats());
      if (hasLeafStats()) {
        result = result && getLeafStats()
            .equals(other.getLeafStats());
      }
      result = result && getCandidatesList()
          .equals(other.getCandidatesList());
      result = result && (hasPostInitLeafStats() == other.hasPostInitLeafStats());
      if (hasPostInitLeafStats()) {
        result = result && getPostInitLeafStats()
            .equals(other.getPostInitLeafStats());
      }
      result = result && (getNodeId()
          == other.getNodeId());
      result = result && (getDepth()
          == other.getDepth());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasLeafStats()) {
        hash = (37 * hash) + LEAF_STATS_FIELD_NUMBER;
        hash = (53 * hash) + getLeafStats().hashCode();
      }
      if (getCandidatesCount() > 0) {
        hash = (37 * hash) + CANDIDATES_FIELD_NUMBER;
        hash = (53 * hash) + getCandidatesList().hashCode();
      }
      if (hasPostInitLeafStats()) {
        hash = (37 * hash) + POST_INIT_LEAF_STATS_FIELD_NUMBER;
        hash = (53 * hash) + getPostInitLeafStats().hashCode();
      }
      hash = (37 * hash) + NODE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getNodeId();
      hash = (37 * hash) + DEPTH_FIELD_NUMBER;
      hash = (53 * hash) + getDepth();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tensorforest.FertileSlot}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.FertileSlot)
        tensorflow.tensorforest.FertileStatsOuterClass.FertileSlotOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileSlot_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileSlot_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.class, tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.Builder.class);
      }

      // Construct using tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCandidatesFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (leafStatsBuilder_ == null) {
          leafStats_ = null;
        } else {
          leafStats_ = null;
          leafStatsBuilder_ = null;
        }
        if (candidatesBuilder_ == null) {
          candidates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          candidatesBuilder_.clear();
        }
        if (postInitLeafStatsBuilder_ == null) {
          postInitLeafStats_ = null;
        } else {
          postInitLeafStats_ = null;
          postInitLeafStatsBuilder_ = null;
        }
        nodeId_ = 0;

        depth_ = 0;

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_FertileSlot_descriptor;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot getDefaultInstanceForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.getDefaultInstance();
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot build() {
        tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot buildPartial() {
        tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot result = new tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (leafStatsBuilder_ == null) {
          result.leafStats_ = leafStats_;
        } else {
          result.leafStats_ = leafStatsBuilder_.build();
        }
        if (candidatesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            candidates_ = java.util.Collections.unmodifiableList(candidates_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.candidates_ = candidates_;
        } else {
          result.candidates_ = candidatesBuilder_.build();
        }
        if (postInitLeafStatsBuilder_ == null) {
          result.postInitLeafStats_ = postInitLeafStats_;
        } else {
          result.postInitLeafStats_ = postInitLeafStatsBuilder_.build();
        }
        result.nodeId_ = nodeId_;
        result.depth_ = depth_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot) {
          return mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot other) {
        if (other == tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot.getDefaultInstance()) return this;
        if (other.hasLeafStats()) {
          mergeLeafStats(other.getLeafStats());
        }
        if (candidatesBuilder_ == null) {
          if (!other.candidates_.isEmpty()) {
            if (candidates_.isEmpty()) {
              candidates_ = other.candidates_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureCandidatesIsMutable();
              candidates_.addAll(other.candidates_);
            }
            onChanged();
          }
        } else {
          if (!other.candidates_.isEmpty()) {
            if (candidatesBuilder_.isEmpty()) {
              candidatesBuilder_.dispose();
              candidatesBuilder_ = null;
              candidates_ = other.candidates_;
              bitField0_ = (bitField0_ & ~0x00000002);
              candidatesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCandidatesFieldBuilder() : null;
            } else {
              candidatesBuilder_.addAllMessages(other.candidates_);
            }
          }
        }
        if (other.hasPostInitLeafStats()) {
          mergePostInitLeafStats(other.getPostInitLeafStats());
        }
        if (other.getNodeId() != 0) {
          setNodeId(other.getNodeId());
        }
        if (other.getDepth() != 0) {
          setDepth(other.getDepth());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private tensorflow.tensorforest.FertileStatsOuterClass.LeafStat leafStats_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder> leafStatsBuilder_;
      /**
       * <pre>
       * The statistics for *all* the examples seen at this leaf.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
       */
      public boolean hasLeafStats() {
        return leafStatsBuilder_ != null || leafStats_ != null;
      }
      /**
       * <pre>
       * The statistics for *all* the examples seen at this leaf.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getLeafStats() {
        if (leafStatsBuilder_ == null) {
          return leafStats_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : leafStats_;
        } else {
          return leafStatsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The statistics for *all* the examples seen at this leaf.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
       */
      public Builder setLeafStats(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat value) {
        if (leafStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leafStats_ = value;
          onChanged();
        } else {
          leafStatsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The statistics for *all* the examples seen at this leaf.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
       */
      public Builder setLeafStats(
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder builderForValue) {
        if (leafStatsBuilder_ == null) {
          leafStats_ = builderForValue.build();
          onChanged();
        } else {
          leafStatsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The statistics for *all* the examples seen at this leaf.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
       */
      public Builder mergeLeafStats(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat value) {
        if (leafStatsBuilder_ == null) {
          if (leafStats_ != null) {
            leafStats_ =
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.newBuilder(leafStats_).mergeFrom(value).buildPartial();
          } else {
            leafStats_ = value;
          }
          onChanged();
        } else {
          leafStatsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The statistics for *all* the examples seen at this leaf.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
       */
      public Builder clearLeafStats() {
        if (leafStatsBuilder_ == null) {
          leafStats_ = null;
          onChanged();
        } else {
          leafStats_ = null;
          leafStatsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The statistics for *all* the examples seen at this leaf.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder getLeafStatsBuilder() {
        
        onChanged();
        return getLeafStatsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The statistics for *all* the examples seen at this leaf.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getLeafStatsOrBuilder() {
        if (leafStatsBuilder_ != null) {
          return leafStatsBuilder_.getMessageOrBuilder();
        } else {
          return leafStats_ == null ?
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : leafStats_;
        }
      }
      /**
       * <pre>
       * The statistics for *all* the examples seen at this leaf.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat leaf_stats = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder> 
          getLeafStatsFieldBuilder() {
        if (leafStatsBuilder_ == null) {
          leafStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder>(
                  getLeafStats(),
                  getParentForChildren(),
                  isClean());
          leafStats_ = null;
        }
        return leafStatsBuilder_;
      }

      private java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate> candidates_ =
        java.util.Collections.emptyList();
      private void ensureCandidatesIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          candidates_ = new java.util.ArrayList<tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate>(candidates_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder> candidatesBuilder_;

      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate> getCandidatesList() {
        if (candidatesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(candidates_);
        } else {
          return candidatesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public int getCandidatesCount() {
        if (candidatesBuilder_ == null) {
          return candidates_.size();
        } else {
          return candidatesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate getCandidates(int index) {
        if (candidatesBuilder_ == null) {
          return candidates_.get(index);
        } else {
          return candidatesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public Builder setCandidates(
          int index, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate value) {
        if (candidatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCandidatesIsMutable();
          candidates_.set(index, value);
          onChanged();
        } else {
          candidatesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public Builder setCandidates(
          int index, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder builderForValue) {
        if (candidatesBuilder_ == null) {
          ensureCandidatesIsMutable();
          candidates_.set(index, builderForValue.build());
          onChanged();
        } else {
          candidatesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public Builder addCandidates(tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate value) {
        if (candidatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCandidatesIsMutable();
          candidates_.add(value);
          onChanged();
        } else {
          candidatesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public Builder addCandidates(
          int index, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate value) {
        if (candidatesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCandidatesIsMutable();
          candidates_.add(index, value);
          onChanged();
        } else {
          candidatesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public Builder addCandidates(
          tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder builderForValue) {
        if (candidatesBuilder_ == null) {
          ensureCandidatesIsMutable();
          candidates_.add(builderForValue.build());
          onChanged();
        } else {
          candidatesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public Builder addCandidates(
          int index, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder builderForValue) {
        if (candidatesBuilder_ == null) {
          ensureCandidatesIsMutable();
          candidates_.add(index, builderForValue.build());
          onChanged();
        } else {
          candidatesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public Builder addAllCandidates(
          java.lang.Iterable<? extends tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate> values) {
        if (candidatesBuilder_ == null) {
          ensureCandidatesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, candidates_);
          onChanged();
        } else {
          candidatesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public Builder clearCandidates() {
        if (candidatesBuilder_ == null) {
          candidates_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          candidatesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public Builder removeCandidates(int index) {
        if (candidatesBuilder_ == null) {
          ensureCandidatesIsMutable();
          candidates_.remove(index);
          onChanged();
        } else {
          candidatesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder getCandidatesBuilder(
          int index) {
        return getCandidatesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder getCandidatesOrBuilder(
          int index) {
        if (candidatesBuilder_ == null) {
          return candidates_.get(index);  } else {
          return candidatesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public java.util.List<? extends tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder> 
           getCandidatesOrBuilderList() {
        if (candidatesBuilder_ != null) {
          return candidatesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(candidates_);
        }
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder addCandidatesBuilder() {
        return getCandidatesFieldBuilder().addBuilder(
            tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder addCandidatesBuilder(
          int index) {
        return getCandidatesFieldBuilder().addBuilder(
            index, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.getDefaultInstance());
      }
      /**
       * <code>repeated .tensorflow.tensorforest.SplitCandidate candidates = 1;</code>
       */
      public java.util.List<tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder> 
           getCandidatesBuilderList() {
        return getCandidatesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder> 
          getCandidatesFieldBuilder() {
        if (candidatesBuilder_ == null) {
          candidatesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder>(
                  candidates_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          candidates_ = null;
        }
        return candidatesBuilder_;
      }

      private tensorflow.tensorforest.FertileStatsOuterClass.LeafStat postInitLeafStats_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder> postInitLeafStatsBuilder_;
      /**
       * <pre>
       * The statistics for the examples seen at this leaf after all the
       * splits have been initialized.  If post_init_leaf_stats.weight_sum
       * is &gt; 0, then all candidates have been initialized.  We need to track
       * both leaf_stats and post_init_leaf_stats because the first is used
       * to create the decision_tree::Leaf and the second is used to infer
       * the statistics for the right side of a split (given the leaf side
       * stats).
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
       */
      public boolean hasPostInitLeafStats() {
        return postInitLeafStatsBuilder_ != null || postInitLeafStats_ != null;
      }
      /**
       * <pre>
       * The statistics for the examples seen at this leaf after all the
       * splits have been initialized.  If post_init_leaf_stats.weight_sum
       * is &gt; 0, then all candidates have been initialized.  We need to track
       * both leaf_stats and post_init_leaf_stats because the first is used
       * to create the decision_tree::Leaf and the second is used to infer
       * the statistics for the right side of a split (given the leaf side
       * stats).
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getPostInitLeafStats() {
        if (postInitLeafStatsBuilder_ == null) {
          return postInitLeafStats_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : postInitLeafStats_;
        } else {
          return postInitLeafStatsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The statistics for the examples seen at this leaf after all the
       * splits have been initialized.  If post_init_leaf_stats.weight_sum
       * is &gt; 0, then all candidates have been initialized.  We need to track
       * both leaf_stats and post_init_leaf_stats because the first is used
       * to create the decision_tree::Leaf and the second is used to infer
       * the statistics for the right side of a split (given the leaf side
       * stats).
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
       */
      public Builder setPostInitLeafStats(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat value) {
        if (postInitLeafStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          postInitLeafStats_ = value;
          onChanged();
        } else {
          postInitLeafStatsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The statistics for the examples seen at this leaf after all the
       * splits have been initialized.  If post_init_leaf_stats.weight_sum
       * is &gt; 0, then all candidates have been initialized.  We need to track
       * both leaf_stats and post_init_leaf_stats because the first is used
       * to create the decision_tree::Leaf and the second is used to infer
       * the statistics for the right side of a split (given the leaf side
       * stats).
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
       */
      public Builder setPostInitLeafStats(
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder builderForValue) {
        if (postInitLeafStatsBuilder_ == null) {
          postInitLeafStats_ = builderForValue.build();
          onChanged();
        } else {
          postInitLeafStatsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The statistics for the examples seen at this leaf after all the
       * splits have been initialized.  If post_init_leaf_stats.weight_sum
       * is &gt; 0, then all candidates have been initialized.  We need to track
       * both leaf_stats and post_init_leaf_stats because the first is used
       * to create the decision_tree::Leaf and the second is used to infer
       * the statistics for the right side of a split (given the leaf side
       * stats).
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
       */
      public Builder mergePostInitLeafStats(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat value) {
        if (postInitLeafStatsBuilder_ == null) {
          if (postInitLeafStats_ != null) {
            postInitLeafStats_ =
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.newBuilder(postInitLeafStats_).mergeFrom(value).buildPartial();
          } else {
            postInitLeafStats_ = value;
          }
          onChanged();
        } else {
          postInitLeafStatsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The statistics for the examples seen at this leaf after all the
       * splits have been initialized.  If post_init_leaf_stats.weight_sum
       * is &gt; 0, then all candidates have been initialized.  We need to track
       * both leaf_stats and post_init_leaf_stats because the first is used
       * to create the decision_tree::Leaf and the second is used to infer
       * the statistics for the right side of a split (given the leaf side
       * stats).
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
       */
      public Builder clearPostInitLeafStats() {
        if (postInitLeafStatsBuilder_ == null) {
          postInitLeafStats_ = null;
          onChanged();
        } else {
          postInitLeafStats_ = null;
          postInitLeafStatsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The statistics for the examples seen at this leaf after all the
       * splits have been initialized.  If post_init_leaf_stats.weight_sum
       * is &gt; 0, then all candidates have been initialized.  We need to track
       * both leaf_stats and post_init_leaf_stats because the first is used
       * to create the decision_tree::Leaf and the second is used to infer
       * the statistics for the right side of a split (given the leaf side
       * stats).
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder getPostInitLeafStatsBuilder() {
        
        onChanged();
        return getPostInitLeafStatsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The statistics for the examples seen at this leaf after all the
       * splits have been initialized.  If post_init_leaf_stats.weight_sum
       * is &gt; 0, then all candidates have been initialized.  We need to track
       * both leaf_stats and post_init_leaf_stats because the first is used
       * to create the decision_tree::Leaf and the second is used to infer
       * the statistics for the right side of a split (given the leaf side
       * stats).
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getPostInitLeafStatsOrBuilder() {
        if (postInitLeafStatsBuilder_ != null) {
          return postInitLeafStatsBuilder_.getMessageOrBuilder();
        } else {
          return postInitLeafStats_ == null ?
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : postInitLeafStats_;
        }
      }
      /**
       * <pre>
       * The statistics for the examples seen at this leaf after all the
       * splits have been initialized.  If post_init_leaf_stats.weight_sum
       * is &gt; 0, then all candidates have been initialized.  We need to track
       * both leaf_stats and post_init_leaf_stats because the first is used
       * to create the decision_tree::Leaf and the second is used to infer
       * the statistics for the right side of a split (given the leaf side
       * stats).
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat post_init_leaf_stats = 6;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder> 
          getPostInitLeafStatsFieldBuilder() {
        if (postInitLeafStatsBuilder_ == null) {
          postInitLeafStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder>(
                  getPostInitLeafStats(),
                  getParentForChildren(),
                  isClean());
          postInitLeafStats_ = null;
        }
        return postInitLeafStatsBuilder_;
      }

      private int nodeId_ ;
      /**
       * <code>int32 node_id = 5;</code>
       */
      public int getNodeId() {
        return nodeId_;
      }
      /**
       * <code>int32 node_id = 5;</code>
       */
      public Builder setNodeId(int value) {
        
        nodeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 node_id = 5;</code>
       */
      public Builder clearNodeId() {
        
        nodeId_ = 0;
        onChanged();
        return this;
      }

      private int depth_ ;
      /**
       * <code>int32 depth = 7;</code>
       */
      public int getDepth() {
        return depth_;
      }
      /**
       * <code>int32 depth = 7;</code>
       */
      public Builder setDepth(int value) {
        
        depth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 depth = 7;</code>
       */
      public Builder clearDepth() {
        
        depth_ = 0;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.FertileSlot)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.FertileSlot)
    private static final tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot();
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FertileSlot>
        PARSER = new com.google.protobuf.AbstractParser<FertileSlot>() {
      public FertileSlot parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new FertileSlot(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FertileSlot> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FertileSlot> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.FertileStatsOuterClass.FertileSlot getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SplitCandidateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.SplitCandidate)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * proto representing the potential node.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
     */
    boolean hasSplit();
    /**
     * <pre>
     * proto representing the potential node.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
     */
    tensorflow.decision_trees.GenericTreeModel.BinaryNode getSplit();
    /**
     * <pre>
     * proto representing the potential node.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
     */
    tensorflow.decision_trees.GenericTreeModel.BinaryNodeOrBuilder getSplitOrBuilder();

    /**
     * <pre>
     * Right counts are inferred from FertileSlot.leaf_stats and left.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
     */
    boolean hasLeftStats();
    /**
     * <pre>
     * Right counts are inferred from FertileSlot.leaf_stats and left.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getLeftStats();
    /**
     * <pre>
     * Right counts are inferred from FertileSlot.leaf_stats and left.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getLeftStatsOrBuilder();

    /**
     * <pre>
     * Right stats (not full counts) are kept here.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
     */
    boolean hasRightStats();
    /**
     * <pre>
     * Right stats (not full counts) are kept here.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getRightStats();
    /**
     * <pre>
     * Right stats (not full counts) are kept here.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
     */
    tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getRightStatsOrBuilder();

    /**
     * <pre>
     * Fields used when training with a graph runner.
     * </pre>
     *
     * <code>string unique_id = 6;</code>
     */
    java.lang.String getUniqueId();
    /**
     * <pre>
     * Fields used when training with a graph runner.
     * </pre>
     *
     * <code>string unique_id = 6;</code>
     */
    com.google.protobuf.ByteString
        getUniqueIdBytes();
  }
  /**
   * Protobuf type {@code tensorflow.tensorforest.SplitCandidate}
   */
  public  static final class SplitCandidate extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.SplitCandidate)
      SplitCandidateOrBuilder {
    // Use SplitCandidate.newBuilder() to construct.
    private SplitCandidate(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SplitCandidate() {
      uniqueId_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SplitCandidate(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              tensorflow.decision_trees.GenericTreeModel.BinaryNode.Builder subBuilder = null;
              if (split_ != null) {
                subBuilder = split_.toBuilder();
              }
              split_ = input.readMessage(tensorflow.decision_trees.GenericTreeModel.BinaryNode.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(split_);
                split_ = subBuilder.buildPartial();
              }

              break;
            }
            case 34: {
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder subBuilder = null;
              if (leftStats_ != null) {
                subBuilder = leftStats_.toBuilder();
              }
              leftStats_ = input.readMessage(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(leftStats_);
                leftStats_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder subBuilder = null;
              if (rightStats_ != null) {
                subBuilder = rightStats_.toBuilder();
              }
              rightStats_ = input.readMessage(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(rightStats_);
                rightStats_ = subBuilder.buildPartial();
              }

              break;
            }
            case 50: {
              java.lang.String s = input.readStringRequireUtf8();

              uniqueId_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_SplitCandidate_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_SplitCandidate_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.class, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder.class);
    }

    public static final int SPLIT_FIELD_NUMBER = 1;
    private tensorflow.decision_trees.GenericTreeModel.BinaryNode split_;
    /**
     * <pre>
     * proto representing the potential node.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
     */
    public boolean hasSplit() {
      return split_ != null;
    }
    /**
     * <pre>
     * proto representing the potential node.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
     */
    public tensorflow.decision_trees.GenericTreeModel.BinaryNode getSplit() {
      return split_ == null ? tensorflow.decision_trees.GenericTreeModel.BinaryNode.getDefaultInstance() : split_;
    }
    /**
     * <pre>
     * proto representing the potential node.
     * </pre>
     *
     * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
     */
    public tensorflow.decision_trees.GenericTreeModel.BinaryNodeOrBuilder getSplitOrBuilder() {
      return getSplit();
    }

    public static final int LEFT_STATS_FIELD_NUMBER = 4;
    private tensorflow.tensorforest.FertileStatsOuterClass.LeafStat leftStats_;
    /**
     * <pre>
     * Right counts are inferred from FertileSlot.leaf_stats and left.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
     */
    public boolean hasLeftStats() {
      return leftStats_ != null;
    }
    /**
     * <pre>
     * Right counts are inferred from FertileSlot.leaf_stats and left.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getLeftStats() {
      return leftStats_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : leftStats_;
    }
    /**
     * <pre>
     * Right counts are inferred from FertileSlot.leaf_stats and left.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getLeftStatsOrBuilder() {
      return getLeftStats();
    }

    public static final int RIGHT_STATS_FIELD_NUMBER = 5;
    private tensorflow.tensorforest.FertileStatsOuterClass.LeafStat rightStats_;
    /**
     * <pre>
     * Right stats (not full counts) are kept here.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
     */
    public boolean hasRightStats() {
      return rightStats_ != null;
    }
    /**
     * <pre>
     * Right stats (not full counts) are kept here.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getRightStats() {
      return rightStats_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : rightStats_;
    }
    /**
     * <pre>
     * Right stats (not full counts) are kept here.
     * </pre>
     *
     * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
     */
    public tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getRightStatsOrBuilder() {
      return getRightStats();
    }

    public static final int UNIQUE_ID_FIELD_NUMBER = 6;
    private volatile java.lang.Object uniqueId_;
    /**
     * <pre>
     * Fields used when training with a graph runner.
     * </pre>
     *
     * <code>string unique_id = 6;</code>
     */
    public java.lang.String getUniqueId() {
      java.lang.Object ref = uniqueId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        uniqueId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Fields used when training with a graph runner.
     * </pre>
     *
     * <code>string unique_id = 6;</code>
     */
    public com.google.protobuf.ByteString
        getUniqueIdBytes() {
      java.lang.Object ref = uniqueId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        uniqueId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (split_ != null) {
        output.writeMessage(1, getSplit());
      }
      if (leftStats_ != null) {
        output.writeMessage(4, getLeftStats());
      }
      if (rightStats_ != null) {
        output.writeMessage(5, getRightStats());
      }
      if (!getUniqueIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 6, uniqueId_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (split_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getSplit());
      }
      if (leftStats_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLeftStats());
      }
      if (rightStats_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getRightStats());
      }
      if (!getUniqueIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, uniqueId_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate other = (tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate) obj;

      boolean result = true;
      result = result && (hasSplit() == other.hasSplit());
      if (hasSplit()) {
        result = result && getSplit()
            .equals(other.getSplit());
      }
      result = result && (hasLeftStats() == other.hasLeftStats());
      if (hasLeftStats()) {
        result = result && getLeftStats()
            .equals(other.getLeftStats());
      }
      result = result && (hasRightStats() == other.hasRightStats());
      if (hasRightStats()) {
        result = result && getRightStats()
            .equals(other.getRightStats());
      }
      result = result && getUniqueId()
          .equals(other.getUniqueId());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasSplit()) {
        hash = (37 * hash) + SPLIT_FIELD_NUMBER;
        hash = (53 * hash) + getSplit().hashCode();
      }
      if (hasLeftStats()) {
        hash = (37 * hash) + LEFT_STATS_FIELD_NUMBER;
        hash = (53 * hash) + getLeftStats().hashCode();
      }
      if (hasRightStats()) {
        hash = (37 * hash) + RIGHT_STATS_FIELD_NUMBER;
        hash = (53 * hash) + getRightStats().hashCode();
      }
      hash = (37 * hash) + UNIQUE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getUniqueId().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code tensorflow.tensorforest.SplitCandidate}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.SplitCandidate)
        tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_SplitCandidate_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_SplitCandidate_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.class, tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.Builder.class);
      }

      // Construct using tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (splitBuilder_ == null) {
          split_ = null;
        } else {
          split_ = null;
          splitBuilder_ = null;
        }
        if (leftStatsBuilder_ == null) {
          leftStats_ = null;
        } else {
          leftStats_ = null;
          leftStatsBuilder_ = null;
        }
        if (rightStatsBuilder_ == null) {
          rightStats_ = null;
        } else {
          rightStats_ = null;
          rightStatsBuilder_ = null;
        }
        uniqueId_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_SplitCandidate_descriptor;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate getDefaultInstanceForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.getDefaultInstance();
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate build() {
        tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate buildPartial() {
        tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate result = new tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate(this);
        if (splitBuilder_ == null) {
          result.split_ = split_;
        } else {
          result.split_ = splitBuilder_.build();
        }
        if (leftStatsBuilder_ == null) {
          result.leftStats_ = leftStats_;
        } else {
          result.leftStats_ = leftStatsBuilder_.build();
        }
        if (rightStatsBuilder_ == null) {
          result.rightStats_ = rightStats_;
        } else {
          result.rightStats_ = rightStatsBuilder_.build();
        }
        result.uniqueId_ = uniqueId_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate) {
          return mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate other) {
        if (other == tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate.getDefaultInstance()) return this;
        if (other.hasSplit()) {
          mergeSplit(other.getSplit());
        }
        if (other.hasLeftStats()) {
          mergeLeftStats(other.getLeftStats());
        }
        if (other.hasRightStats()) {
          mergeRightStats(other.getRightStats());
        }
        if (!other.getUniqueId().isEmpty()) {
          uniqueId_ = other.uniqueId_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private tensorflow.decision_trees.GenericTreeModel.BinaryNode split_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.decision_trees.GenericTreeModel.BinaryNode, tensorflow.decision_trees.GenericTreeModel.BinaryNode.Builder, tensorflow.decision_trees.GenericTreeModel.BinaryNodeOrBuilder> splitBuilder_;
      /**
       * <pre>
       * proto representing the potential node.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
       */
      public boolean hasSplit() {
        return splitBuilder_ != null || split_ != null;
      }
      /**
       * <pre>
       * proto representing the potential node.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.BinaryNode getSplit() {
        if (splitBuilder_ == null) {
          return split_ == null ? tensorflow.decision_trees.GenericTreeModel.BinaryNode.getDefaultInstance() : split_;
        } else {
          return splitBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * proto representing the potential node.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
       */
      public Builder setSplit(tensorflow.decision_trees.GenericTreeModel.BinaryNode value) {
        if (splitBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          split_ = value;
          onChanged();
        } else {
          splitBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * proto representing the potential node.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
       */
      public Builder setSplit(
          tensorflow.decision_trees.GenericTreeModel.BinaryNode.Builder builderForValue) {
        if (splitBuilder_ == null) {
          split_ = builderForValue.build();
          onChanged();
        } else {
          splitBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * proto representing the potential node.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
       */
      public Builder mergeSplit(tensorflow.decision_trees.GenericTreeModel.BinaryNode value) {
        if (splitBuilder_ == null) {
          if (split_ != null) {
            split_ =
              tensorflow.decision_trees.GenericTreeModel.BinaryNode.newBuilder(split_).mergeFrom(value).buildPartial();
          } else {
            split_ = value;
          }
          onChanged();
        } else {
          splitBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * proto representing the potential node.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
       */
      public Builder clearSplit() {
        if (splitBuilder_ == null) {
          split_ = null;
          onChanged();
        } else {
          split_ = null;
          splitBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * proto representing the potential node.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.BinaryNode.Builder getSplitBuilder() {
        
        onChanged();
        return getSplitFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * proto representing the potential node.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.BinaryNodeOrBuilder getSplitOrBuilder() {
        if (splitBuilder_ != null) {
          return splitBuilder_.getMessageOrBuilder();
        } else {
          return split_ == null ?
              tensorflow.decision_trees.GenericTreeModel.BinaryNode.getDefaultInstance() : split_;
        }
      }
      /**
       * <pre>
       * proto representing the potential node.
       * </pre>
       *
       * <code>.tensorflow.decision_trees.BinaryNode split = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.decision_trees.GenericTreeModel.BinaryNode, tensorflow.decision_trees.GenericTreeModel.BinaryNode.Builder, tensorflow.decision_trees.GenericTreeModel.BinaryNodeOrBuilder> 
          getSplitFieldBuilder() {
        if (splitBuilder_ == null) {
          splitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.decision_trees.GenericTreeModel.BinaryNode, tensorflow.decision_trees.GenericTreeModel.BinaryNode.Builder, tensorflow.decision_trees.GenericTreeModel.BinaryNodeOrBuilder>(
                  getSplit(),
                  getParentForChildren(),
                  isClean());
          split_ = null;
        }
        return splitBuilder_;
      }

      private tensorflow.tensorforest.FertileStatsOuterClass.LeafStat leftStats_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder> leftStatsBuilder_;
      /**
       * <pre>
       * Right counts are inferred from FertileSlot.leaf_stats and left.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
       */
      public boolean hasLeftStats() {
        return leftStatsBuilder_ != null || leftStats_ != null;
      }
      /**
       * <pre>
       * Right counts are inferred from FertileSlot.leaf_stats and left.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getLeftStats() {
        if (leftStatsBuilder_ == null) {
          return leftStats_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : leftStats_;
        } else {
          return leftStatsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Right counts are inferred from FertileSlot.leaf_stats and left.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
       */
      public Builder setLeftStats(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat value) {
        if (leftStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          leftStats_ = value;
          onChanged();
        } else {
          leftStatsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Right counts are inferred from FertileSlot.leaf_stats and left.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
       */
      public Builder setLeftStats(
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder builderForValue) {
        if (leftStatsBuilder_ == null) {
          leftStats_ = builderForValue.build();
          onChanged();
        } else {
          leftStatsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Right counts are inferred from FertileSlot.leaf_stats and left.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
       */
      public Builder mergeLeftStats(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat value) {
        if (leftStatsBuilder_ == null) {
          if (leftStats_ != null) {
            leftStats_ =
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.newBuilder(leftStats_).mergeFrom(value).buildPartial();
          } else {
            leftStats_ = value;
          }
          onChanged();
        } else {
          leftStatsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Right counts are inferred from FertileSlot.leaf_stats and left.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
       */
      public Builder clearLeftStats() {
        if (leftStatsBuilder_ == null) {
          leftStats_ = null;
          onChanged();
        } else {
          leftStats_ = null;
          leftStatsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Right counts are inferred from FertileSlot.leaf_stats and left.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder getLeftStatsBuilder() {
        
        onChanged();
        return getLeftStatsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Right counts are inferred from FertileSlot.leaf_stats and left.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getLeftStatsOrBuilder() {
        if (leftStatsBuilder_ != null) {
          return leftStatsBuilder_.getMessageOrBuilder();
        } else {
          return leftStats_ == null ?
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : leftStats_;
        }
      }
      /**
       * <pre>
       * Right counts are inferred from FertileSlot.leaf_stats and left.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat left_stats = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder> 
          getLeftStatsFieldBuilder() {
        if (leftStatsBuilder_ == null) {
          leftStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder>(
                  getLeftStats(),
                  getParentForChildren(),
                  isClean());
          leftStats_ = null;
        }
        return leftStatsBuilder_;
      }

      private tensorflow.tensorforest.FertileStatsOuterClass.LeafStat rightStats_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder> rightStatsBuilder_;
      /**
       * <pre>
       * Right stats (not full counts) are kept here.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
       */
      public boolean hasRightStats() {
        return rightStatsBuilder_ != null || rightStats_ != null;
      }
      /**
       * <pre>
       * Right stats (not full counts) are kept here.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat getRightStats() {
        if (rightStatsBuilder_ == null) {
          return rightStats_ == null ? tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : rightStats_;
        } else {
          return rightStatsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Right stats (not full counts) are kept here.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
       */
      public Builder setRightStats(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat value) {
        if (rightStatsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          rightStats_ = value;
          onChanged();
        } else {
          rightStatsBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Right stats (not full counts) are kept here.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
       */
      public Builder setRightStats(
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder builderForValue) {
        if (rightStatsBuilder_ == null) {
          rightStats_ = builderForValue.build();
          onChanged();
        } else {
          rightStatsBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Right stats (not full counts) are kept here.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
       */
      public Builder mergeRightStats(tensorflow.tensorforest.FertileStatsOuterClass.LeafStat value) {
        if (rightStatsBuilder_ == null) {
          if (rightStats_ != null) {
            rightStats_ =
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.newBuilder(rightStats_).mergeFrom(value).buildPartial();
          } else {
            rightStats_ = value;
          }
          onChanged();
        } else {
          rightStatsBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Right stats (not full counts) are kept here.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
       */
      public Builder clearRightStats() {
        if (rightStatsBuilder_ == null) {
          rightStats_ = null;
          onChanged();
        } else {
          rightStats_ = null;
          rightStatsBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Right stats (not full counts) are kept here.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder getRightStatsBuilder() {
        
        onChanged();
        return getRightStatsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Right stats (not full counts) are kept here.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
       */
      public tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder getRightStatsOrBuilder() {
        if (rightStatsBuilder_ != null) {
          return rightStatsBuilder_.getMessageOrBuilder();
        } else {
          return rightStats_ == null ?
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.getDefaultInstance() : rightStats_;
        }
      }
      /**
       * <pre>
       * Right stats (not full counts) are kept here.
       * </pre>
       *
       * <code>.tensorflow.tensorforest.LeafStat right_stats = 5;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder> 
          getRightStatsFieldBuilder() {
        if (rightStatsBuilder_ == null) {
          rightStatsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              tensorflow.tensorforest.FertileStatsOuterClass.LeafStat, tensorflow.tensorforest.FertileStatsOuterClass.LeafStat.Builder, tensorflow.tensorforest.FertileStatsOuterClass.LeafStatOrBuilder>(
                  getRightStats(),
                  getParentForChildren(),
                  isClean());
          rightStats_ = null;
        }
        return rightStatsBuilder_;
      }

      private java.lang.Object uniqueId_ = "";
      /**
       * <pre>
       * Fields used when training with a graph runner.
       * </pre>
       *
       * <code>string unique_id = 6;</code>
       */
      public java.lang.String getUniqueId() {
        java.lang.Object ref = uniqueId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          uniqueId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Fields used when training with a graph runner.
       * </pre>
       *
       * <code>string unique_id = 6;</code>
       */
      public com.google.protobuf.ByteString
          getUniqueIdBytes() {
        java.lang.Object ref = uniqueId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          uniqueId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Fields used when training with a graph runner.
       * </pre>
       *
       * <code>string unique_id = 6;</code>
       */
      public Builder setUniqueId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        uniqueId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fields used when training with a graph runner.
       * </pre>
       *
       * <code>string unique_id = 6;</code>
       */
      public Builder clearUniqueId() {
        
        uniqueId_ = getDefaultInstance().getUniqueId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Fields used when training with a graph runner.
       * </pre>
       *
       * <code>string unique_id = 6;</code>
       */
      public Builder setUniqueIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        uniqueId_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.SplitCandidate)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.SplitCandidate)
    private static final tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate();
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SplitCandidate>
        PARSER = new com.google.protobuf.AbstractParser<SplitCandidate>() {
      public SplitCandidate parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SplitCandidate(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SplitCandidate> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SplitCandidate> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.FertileStatsOuterClass.SplitCandidate getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TreePathOrBuilder extends
      // @@protoc_insertion_point(interface_extends:tensorflow.tensorforest.TreePath)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    java.util.List<tensorflow.decision_trees.GenericTreeModel.TreeNode> 
        getNodesVisitedList();
    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    tensorflow.decision_trees.GenericTreeModel.TreeNode getNodesVisited(int index);
    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    int getNodesVisitedCount();
    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    java.util.List<? extends tensorflow.decision_trees.GenericTreeModel.TreeNodeOrBuilder> 
        getNodesVisitedOrBuilderList();
    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    tensorflow.decision_trees.GenericTreeModel.TreeNodeOrBuilder getNodesVisitedOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Proto used for tracking tree paths during inference time.
   * </pre>
   *
   * Protobuf type {@code tensorflow.tensorforest.TreePath}
   */
  public  static final class TreePath extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:tensorflow.tensorforest.TreePath)
      TreePathOrBuilder {
    // Use TreePath.newBuilder() to construct.
    private TreePath(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TreePath() {
      nodesVisited_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private TreePath(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                nodesVisited_ = new java.util.ArrayList<tensorflow.decision_trees.GenericTreeModel.TreeNode>();
                mutable_bitField0_ |= 0x00000001;
              }
              nodesVisited_.add(
                  input.readMessage(tensorflow.decision_trees.GenericTreeModel.TreeNode.parser(), extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          nodesVisited_ = java.util.Collections.unmodifiableList(nodesVisited_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_TreePath_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_TreePath_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              tensorflow.tensorforest.FertileStatsOuterClass.TreePath.class, tensorflow.tensorforest.FertileStatsOuterClass.TreePath.Builder.class);
    }

    public static final int NODES_VISITED_FIELD_NUMBER = 1;
    private java.util.List<tensorflow.decision_trees.GenericTreeModel.TreeNode> nodesVisited_;
    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    public java.util.List<tensorflow.decision_trees.GenericTreeModel.TreeNode> getNodesVisitedList() {
      return nodesVisited_;
    }
    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    public java.util.List<? extends tensorflow.decision_trees.GenericTreeModel.TreeNodeOrBuilder> 
        getNodesVisitedOrBuilderList() {
      return nodesVisited_;
    }
    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    public int getNodesVisitedCount() {
      return nodesVisited_.size();
    }
    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    public tensorflow.decision_trees.GenericTreeModel.TreeNode getNodesVisited(int index) {
      return nodesVisited_.get(index);
    }
    /**
     * <pre>
     * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
     * is the tree's root node.
     * </pre>
     *
     * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
     */
    public tensorflow.decision_trees.GenericTreeModel.TreeNodeOrBuilder getNodesVisitedOrBuilder(
        int index) {
      return nodesVisited_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < nodesVisited_.size(); i++) {
        output.writeMessage(1, nodesVisited_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < nodesVisited_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, nodesVisited_.get(i));
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof tensorflow.tensorforest.FertileStatsOuterClass.TreePath)) {
        return super.equals(obj);
      }
      tensorflow.tensorforest.FertileStatsOuterClass.TreePath other = (tensorflow.tensorforest.FertileStatsOuterClass.TreePath) obj;

      boolean result = true;
      result = result && getNodesVisitedList()
          .equals(other.getNodesVisitedList());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodesVisitedCount() > 0) {
        hash = (37 * hash) + NODES_VISITED_FIELD_NUMBER;
        hash = (53 * hash) + getNodesVisitedList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(tensorflow.tensorforest.FertileStatsOuterClass.TreePath prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Proto used for tracking tree paths during inference time.
     * </pre>
     *
     * Protobuf type {@code tensorflow.tensorforest.TreePath}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:tensorflow.tensorforest.TreePath)
        tensorflow.tensorforest.FertileStatsOuterClass.TreePathOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_TreePath_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_TreePath_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                tensorflow.tensorforest.FertileStatsOuterClass.TreePath.class, tensorflow.tensorforest.FertileStatsOuterClass.TreePath.Builder.class);
      }

      // Construct using tensorflow.tensorforest.FertileStatsOuterClass.TreePath.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodesVisitedFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodesVisitedBuilder_ == null) {
          nodesVisited_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodesVisitedBuilder_.clear();
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.internal_static_tensorflow_tensorforest_TreePath_descriptor;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.TreePath getDefaultInstanceForType() {
        return tensorflow.tensorforest.FertileStatsOuterClass.TreePath.getDefaultInstance();
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.TreePath build() {
        tensorflow.tensorforest.FertileStatsOuterClass.TreePath result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public tensorflow.tensorforest.FertileStatsOuterClass.TreePath buildPartial() {
        tensorflow.tensorforest.FertileStatsOuterClass.TreePath result = new tensorflow.tensorforest.FertileStatsOuterClass.TreePath(this);
        int from_bitField0_ = bitField0_;
        if (nodesVisitedBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            nodesVisited_ = java.util.Collections.unmodifiableList(nodesVisited_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.nodesVisited_ = nodesVisited_;
        } else {
          result.nodesVisited_ = nodesVisitedBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof tensorflow.tensorforest.FertileStatsOuterClass.TreePath) {
          return mergeFrom((tensorflow.tensorforest.FertileStatsOuterClass.TreePath)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(tensorflow.tensorforest.FertileStatsOuterClass.TreePath other) {
        if (other == tensorflow.tensorforest.FertileStatsOuterClass.TreePath.getDefaultInstance()) return this;
        if (nodesVisitedBuilder_ == null) {
          if (!other.nodesVisited_.isEmpty()) {
            if (nodesVisited_.isEmpty()) {
              nodesVisited_ = other.nodesVisited_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodesVisitedIsMutable();
              nodesVisited_.addAll(other.nodesVisited_);
            }
            onChanged();
          }
        } else {
          if (!other.nodesVisited_.isEmpty()) {
            if (nodesVisitedBuilder_.isEmpty()) {
              nodesVisitedBuilder_.dispose();
              nodesVisitedBuilder_ = null;
              nodesVisited_ = other.nodesVisited_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodesVisitedBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodesVisitedFieldBuilder() : null;
            } else {
              nodesVisitedBuilder_.addAllMessages(other.nodesVisited_);
            }
          }
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        tensorflow.tensorforest.FertileStatsOuterClass.TreePath parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (tensorflow.tensorforest.FertileStatsOuterClass.TreePath) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<tensorflow.decision_trees.GenericTreeModel.TreeNode> nodesVisited_ =
        java.util.Collections.emptyList();
      private void ensureNodesVisitedIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          nodesVisited_ = new java.util.ArrayList<tensorflow.decision_trees.GenericTreeModel.TreeNode>(nodesVisited_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.decision_trees.GenericTreeModel.TreeNode, tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder, tensorflow.decision_trees.GenericTreeModel.TreeNodeOrBuilder> nodesVisitedBuilder_;

      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public java.util.List<tensorflow.decision_trees.GenericTreeModel.TreeNode> getNodesVisitedList() {
        if (nodesVisitedBuilder_ == null) {
          return java.util.Collections.unmodifiableList(nodesVisited_);
        } else {
          return nodesVisitedBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public int getNodesVisitedCount() {
        if (nodesVisitedBuilder_ == null) {
          return nodesVisited_.size();
        } else {
          return nodesVisitedBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.TreeNode getNodesVisited(int index) {
        if (nodesVisitedBuilder_ == null) {
          return nodesVisited_.get(index);
        } else {
          return nodesVisitedBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public Builder setNodesVisited(
          int index, tensorflow.decision_trees.GenericTreeModel.TreeNode value) {
        if (nodesVisitedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesVisitedIsMutable();
          nodesVisited_.set(index, value);
          onChanged();
        } else {
          nodesVisitedBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public Builder setNodesVisited(
          int index, tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder builderForValue) {
        if (nodesVisitedBuilder_ == null) {
          ensureNodesVisitedIsMutable();
          nodesVisited_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodesVisitedBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public Builder addNodesVisited(tensorflow.decision_trees.GenericTreeModel.TreeNode value) {
        if (nodesVisitedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesVisitedIsMutable();
          nodesVisited_.add(value);
          onChanged();
        } else {
          nodesVisitedBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public Builder addNodesVisited(
          int index, tensorflow.decision_trees.GenericTreeModel.TreeNode value) {
        if (nodesVisitedBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodesVisitedIsMutable();
          nodesVisited_.add(index, value);
          onChanged();
        } else {
          nodesVisitedBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public Builder addNodesVisited(
          tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder builderForValue) {
        if (nodesVisitedBuilder_ == null) {
          ensureNodesVisitedIsMutable();
          nodesVisited_.add(builderForValue.build());
          onChanged();
        } else {
          nodesVisitedBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public Builder addNodesVisited(
          int index, tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder builderForValue) {
        if (nodesVisitedBuilder_ == null) {
          ensureNodesVisitedIsMutable();
          nodesVisited_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodesVisitedBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public Builder addAllNodesVisited(
          java.lang.Iterable<? extends tensorflow.decision_trees.GenericTreeModel.TreeNode> values) {
        if (nodesVisitedBuilder_ == null) {
          ensureNodesVisitedIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, nodesVisited_);
          onChanged();
        } else {
          nodesVisitedBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public Builder clearNodesVisited() {
        if (nodesVisitedBuilder_ == null) {
          nodesVisited_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodesVisitedBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public Builder removeNodesVisited(int index) {
        if (nodesVisitedBuilder_ == null) {
          ensureNodesVisitedIsMutable();
          nodesVisited_.remove(index);
          onChanged();
        } else {
          nodesVisitedBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder getNodesVisitedBuilder(
          int index) {
        return getNodesVisitedFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.TreeNodeOrBuilder getNodesVisitedOrBuilder(
          int index) {
        if (nodesVisitedBuilder_ == null) {
          return nodesVisited_.get(index);  } else {
          return nodesVisitedBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public java.util.List<? extends tensorflow.decision_trees.GenericTreeModel.TreeNodeOrBuilder> 
           getNodesVisitedOrBuilderList() {
        if (nodesVisitedBuilder_ != null) {
          return nodesVisitedBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(nodesVisited_);
        }
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder addNodesVisitedBuilder() {
        return getNodesVisitedFieldBuilder().addBuilder(
            tensorflow.decision_trees.GenericTreeModel.TreeNode.getDefaultInstance());
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder addNodesVisitedBuilder(
          int index) {
        return getNodesVisitedFieldBuilder().addBuilder(
            index, tensorflow.decision_trees.GenericTreeModel.TreeNode.getDefaultInstance());
      }
      /**
       * <pre>
       * Nodes are listed in order that they were traversed. i.e. nodes_visited[0]
       * is the tree's root node.
       * </pre>
       *
       * <code>repeated .tensorflow.decision_trees.TreeNode nodes_visited = 1;</code>
       */
      public java.util.List<tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder> 
           getNodesVisitedBuilderList() {
        return getNodesVisitedFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          tensorflow.decision_trees.GenericTreeModel.TreeNode, tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder, tensorflow.decision_trees.GenericTreeModel.TreeNodeOrBuilder> 
          getNodesVisitedFieldBuilder() {
        if (nodesVisitedBuilder_ == null) {
          nodesVisitedBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              tensorflow.decision_trees.GenericTreeModel.TreeNode, tensorflow.decision_trees.GenericTreeModel.TreeNode.Builder, tensorflow.decision_trees.GenericTreeModel.TreeNodeOrBuilder>(
                  nodesVisited_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          nodesVisited_ = null;
        }
        return nodesVisitedBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:tensorflow.tensorforest.TreePath)
    }

    // @@protoc_insertion_point(class_scope:tensorflow.tensorforest.TreePath)
    private static final tensorflow.tensorforest.FertileStatsOuterClass.TreePath DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new tensorflow.tensorforest.FertileStatsOuterClass.TreePath();
    }

    public static tensorflow.tensorforest.FertileStatsOuterClass.TreePath getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TreePath>
        PARSER = new com.google.protobuf.AbstractParser<TreePath>() {
      public TreePath parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new TreePath(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TreePath> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TreePath> getParserForType() {
      return PARSER;
    }

    public tensorflow.tensorforest.FertileStatsOuterClass.TreePath getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_FertileStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_FertileStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_GiniStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_GiniStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_LeafStat_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_LeafStat_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_FertileSlot_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_FertileSlot_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_SplitCandidate_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_SplitCandidate_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_tensorflow_tensorforest_TreePath_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_tensorflow_tensorforest_TreePath_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n:tensorflow/contrib/tensor_forest/proto" +
      "/fertile_stats.proto\022\027tensorflow.tensorf" +
      "orest\032@tensorflow/contrib/decision_trees" +
      "/proto/generic_tree_model.proto\"J\n\014Ferti" +
      "leStats\022:\n\014node_to_slot\030\001 \003(\0132$.tensorfl" +
      "ow.tensorforest.FertileSlot\"\033\n\tGiniStats" +
      "\022\016\n\006square\030\002 \001(\002\"\322\004\n\010LeafStat\022\022\n\nweight_" +
      "sum\030\003 \001(\002\022[\n\016classification\030\001 \001(\0132A.tens" +
      "orflow.tensorforest.LeafStat.GiniImpurit" +
      "yClassificationStatsH\000\022S\n\nregression\030\002 \001",
      "(\0132=.tensorflow.tensorforest.LeafStat.Le" +
      "astSquaresRegressionStatsH\000\032\332\001\n\037GiniImpu" +
      "rityClassificationStats\0229\n\014dense_counts\030" +
      "\001 \001(\0132!.tensorflow.decision_trees.Vector" +
      "H\000\022@\n\rsparse_counts\030\002 \001(\0132\'.tensorflow.d" +
      "ecision_trees.SparseVectorH\000\0220\n\004gini\030\003 \001" +
      "(\0132\".tensorflow.tensorforest.GiniStatsB\010" +
      "\n\006counts\032\225\001\n\033LeastSquaresRegressionStats" +
      "\0226\n\013mean_output\030\001 \001(\0132!.tensorflow.decis" +
      "ion_trees.Vector\022>\n\023mean_output_squares\030",
      "\002 \001(\0132!.tensorflow.decision_trees.Vector" +
      "B\013\n\tleaf_stat\"\342\001\n\013FertileSlot\0225\n\nleaf_st" +
      "ats\030\004 \001(\0132!.tensorflow.tensorforest.Leaf" +
      "Stat\022;\n\ncandidates\030\001 \003(\0132\'.tensorflow.te" +
      "nsorforest.SplitCandidate\022?\n\024post_init_l" +
      "eaf_stats\030\006 \001(\0132!.tensorflow.tensorfores" +
      "t.LeafStat\022\017\n\007node_id\030\005 \001(\005\022\r\n\005depth\030\007 \001" +
      "(\005\"\310\001\n\016SplitCandidate\0224\n\005split\030\001 \001(\0132%.t" +
      "ensorflow.decision_trees.BinaryNode\0225\n\nl" +
      "eft_stats\030\004 \001(\0132!.tensorflow.tensorfores",
      "t.LeafStat\0226\n\013right_stats\030\005 \001(\0132!.tensor" +
      "flow.tensorforest.LeafStat\022\021\n\tunique_id\030" +
      "\006 \001(\t\"F\n\010TreePath\022:\n\rnodes_visited\030\001 \003(\013" +
      "2#.tensorflow.decision_trees.TreeNodeB\003\370" +
      "\001\001b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          tensorflow.decision_trees.GenericTreeModel.getDescriptor(),
        }, assigner);
    internal_static_tensorflow_tensorforest_FertileStats_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_tensorflow_tensorforest_FertileStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_FertileStats_descriptor,
        new java.lang.String[] { "NodeToSlot", });
    internal_static_tensorflow_tensorforest_GiniStats_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_tensorflow_tensorforest_GiniStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_GiniStats_descriptor,
        new java.lang.String[] { "Square", });
    internal_static_tensorflow_tensorforest_LeafStat_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_tensorflow_tensorforest_LeafStat_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_LeafStat_descriptor,
        new java.lang.String[] { "WeightSum", "Classification", "Regression", "LeafStat", });
    internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_descriptor =
      internal_static_tensorflow_tensorforest_LeafStat_descriptor.getNestedTypes().get(0);
    internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_LeafStat_GiniImpurityClassificationStats_descriptor,
        new java.lang.String[] { "DenseCounts", "SparseCounts", "Gini", "Counts", });
    internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_descriptor =
      internal_static_tensorflow_tensorforest_LeafStat_descriptor.getNestedTypes().get(1);
    internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_LeafStat_LeastSquaresRegressionStats_descriptor,
        new java.lang.String[] { "MeanOutput", "MeanOutputSquares", });
    internal_static_tensorflow_tensorforest_FertileSlot_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_tensorflow_tensorforest_FertileSlot_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_FertileSlot_descriptor,
        new java.lang.String[] { "LeafStats", "Candidates", "PostInitLeafStats", "NodeId", "Depth", });
    internal_static_tensorflow_tensorforest_SplitCandidate_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_tensorflow_tensorforest_SplitCandidate_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_SplitCandidate_descriptor,
        new java.lang.String[] { "Split", "LeftStats", "RightStats", "UniqueId", });
    internal_static_tensorflow_tensorforest_TreePath_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_tensorflow_tensorforest_TreePath_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_tensorflow_tensorforest_TreePath_descriptor,
        new java.lang.String[] { "NodesVisited", });
    tensorflow.decision_trees.GenericTreeModel.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
