// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/compiler/xla/service/session.proto

package xla;

public final class Session {
  private Session() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface OperationRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.OperationRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.xla.ComputationDataHandle output_handle = 1;</code>
     */
    boolean hasOutputHandle();
    /**
     * <code>.xla.ComputationDataHandle output_handle = 1;</code>
     */
    xla.XlaData.ComputationDataHandle getOutputHandle();
    /**
     * <code>.xla.ComputationDataHandle output_handle = 1;</code>
     */
    xla.XlaData.ComputationDataHandleOrBuilder getOutputHandleOrBuilder();

    /**
     * <code>.xla.Shape output_shape = 2;</code>
     */
    boolean hasOutputShape();
    /**
     * <code>.xla.Shape output_shape = 2;</code>
     */
    xla.XlaData.Shape getOutputShape();
    /**
     * <code>.xla.Shape output_shape = 2;</code>
     */
    xla.XlaData.ShapeOrBuilder getOutputShapeOrBuilder();

    /**
     * <pre>
     * For operations which call embedded computations such as "Map", these are
     * the version(s) that the embedded computation should be called at. A version
     * value of a computation is the ComputationDataHandle of the root of the
     * computation at the point in time.
     * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
     * embedded computation so this field will have a single value for those
     * operations.
     * "While" operation takes two; index 0 is the "condition" version and index 1
     * is the "body" version.
     * </pre>
     *
     * <code>repeated int64 embedded_computation_versions = 3;</code>
     */
    java.util.List<java.lang.Long> getEmbeddedComputationVersionsList();
    /**
     * <pre>
     * For operations which call embedded computations such as "Map", these are
     * the version(s) that the embedded computation should be called at. A version
     * value of a computation is the ComputationDataHandle of the root of the
     * computation at the point in time.
     * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
     * embedded computation so this field will have a single value for those
     * operations.
     * "While" operation takes two; index 0 is the "condition" version and index 1
     * is the "body" version.
     * </pre>
     *
     * <code>repeated int64 embedded_computation_versions = 3;</code>
     */
    int getEmbeddedComputationVersionsCount();
    /**
     * <pre>
     * For operations which call embedded computations such as "Map", these are
     * the version(s) that the embedded computation should be called at. A version
     * value of a computation is the ComputationDataHandle of the root of the
     * computation at the point in time.
     * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
     * embedded computation so this field will have a single value for those
     * operations.
     * "While" operation takes two; index 0 is the "condition" version and index 1
     * is the "body" version.
     * </pre>
     *
     * <code>repeated int64 embedded_computation_versions = 3;</code>
     */
    long getEmbeddedComputationVersions(int index);

    /**
     * <pre>
     * The actual request, which in itself is a tagged union of all possible
     * operation request types.
     * </pre>
     *
     * <code>.xla.OpRequest request = 4;</code>
     */
    boolean hasRequest();
    /**
     * <pre>
     * The actual request, which in itself is a tagged union of all possible
     * operation request types.
     * </pre>
     *
     * <code>.xla.OpRequest request = 4;</code>
     */
    xla.XlaData.OpRequest getRequest();
    /**
     * <pre>
     * The actual request, which in itself is a tagged union of all possible
     * operation request types.
     * </pre>
     *
     * <code>.xla.OpRequest request = 4;</code>
     */
    xla.XlaData.OpRequestOrBuilder getRequestOrBuilder();
  }
  /**
   * <pre>
   * Describes a single operation request.
   * </pre>
   *
   * Protobuf type {@code xla.OperationRequest}
   */
  public  static final class OperationRequest extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.OperationRequest)
      OperationRequestOrBuilder {
    // Use OperationRequest.newBuilder() to construct.
    private OperationRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private OperationRequest() {
      embeddedComputationVersions_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private OperationRequest(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              xla.XlaData.ComputationDataHandle.Builder subBuilder = null;
              if (outputHandle_ != null) {
                subBuilder = outputHandle_.toBuilder();
              }
              outputHandle_ = input.readMessage(xla.XlaData.ComputationDataHandle.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputHandle_);
                outputHandle_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              xla.XlaData.Shape.Builder subBuilder = null;
              if (outputShape_ != null) {
                subBuilder = outputShape_.toBuilder();
              }
              outputShape_ = input.readMessage(xla.XlaData.Shape.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(outputShape_);
                outputShape_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                embeddedComputationVersions_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              embeddedComputationVersions_.add(input.readInt64());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                embeddedComputationVersions_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                embeddedComputationVersions_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              xla.XlaData.OpRequest.Builder subBuilder = null;
              if (request_ != null) {
                subBuilder = request_.toBuilder();
              }
              request_ = input.readMessage(xla.XlaData.OpRequest.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(request_);
                request_ = subBuilder.buildPartial();
              }

              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          embeddedComputationVersions_ = java.util.Collections.unmodifiableList(embeddedComputationVersions_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.Session.internal_static_xla_OperationRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.Session.internal_static_xla_OperationRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.Session.OperationRequest.class, xla.Session.OperationRequest.Builder.class);
    }

    private int bitField0_;
    public static final int OUTPUT_HANDLE_FIELD_NUMBER = 1;
    private xla.XlaData.ComputationDataHandle outputHandle_;
    /**
     * <code>.xla.ComputationDataHandle output_handle = 1;</code>
     */
    public boolean hasOutputHandle() {
      return outputHandle_ != null;
    }
    /**
     * <code>.xla.ComputationDataHandle output_handle = 1;</code>
     */
    public xla.XlaData.ComputationDataHandle getOutputHandle() {
      return outputHandle_ == null ? xla.XlaData.ComputationDataHandle.getDefaultInstance() : outputHandle_;
    }
    /**
     * <code>.xla.ComputationDataHandle output_handle = 1;</code>
     */
    public xla.XlaData.ComputationDataHandleOrBuilder getOutputHandleOrBuilder() {
      return getOutputHandle();
    }

    public static final int OUTPUT_SHAPE_FIELD_NUMBER = 2;
    private xla.XlaData.Shape outputShape_;
    /**
     * <code>.xla.Shape output_shape = 2;</code>
     */
    public boolean hasOutputShape() {
      return outputShape_ != null;
    }
    /**
     * <code>.xla.Shape output_shape = 2;</code>
     */
    public xla.XlaData.Shape getOutputShape() {
      return outputShape_ == null ? xla.XlaData.Shape.getDefaultInstance() : outputShape_;
    }
    /**
     * <code>.xla.Shape output_shape = 2;</code>
     */
    public xla.XlaData.ShapeOrBuilder getOutputShapeOrBuilder() {
      return getOutputShape();
    }

    public static final int EMBEDDED_COMPUTATION_VERSIONS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Long> embeddedComputationVersions_;
    /**
     * <pre>
     * For operations which call embedded computations such as "Map", these are
     * the version(s) that the embedded computation should be called at. A version
     * value of a computation is the ComputationDataHandle of the root of the
     * computation at the point in time.
     * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
     * embedded computation so this field will have a single value for those
     * operations.
     * "While" operation takes two; index 0 is the "condition" version and index 1
     * is the "body" version.
     * </pre>
     *
     * <code>repeated int64 embedded_computation_versions = 3;</code>
     */
    public java.util.List<java.lang.Long>
        getEmbeddedComputationVersionsList() {
      return embeddedComputationVersions_;
    }
    /**
     * <pre>
     * For operations which call embedded computations such as "Map", these are
     * the version(s) that the embedded computation should be called at. A version
     * value of a computation is the ComputationDataHandle of the root of the
     * computation at the point in time.
     * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
     * embedded computation so this field will have a single value for those
     * operations.
     * "While" operation takes two; index 0 is the "condition" version and index 1
     * is the "body" version.
     * </pre>
     *
     * <code>repeated int64 embedded_computation_versions = 3;</code>
     */
    public int getEmbeddedComputationVersionsCount() {
      return embeddedComputationVersions_.size();
    }
    /**
     * <pre>
     * For operations which call embedded computations such as "Map", these are
     * the version(s) that the embedded computation should be called at. A version
     * value of a computation is the ComputationDataHandle of the root of the
     * computation at the point in time.
     * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
     * embedded computation so this field will have a single value for those
     * operations.
     * "While" operation takes two; index 0 is the "condition" version and index 1
     * is the "body" version.
     * </pre>
     *
     * <code>repeated int64 embedded_computation_versions = 3;</code>
     */
    public long getEmbeddedComputationVersions(int index) {
      return embeddedComputationVersions_.get(index);
    }
    private int embeddedComputationVersionsMemoizedSerializedSize = -1;

    public static final int REQUEST_FIELD_NUMBER = 4;
    private xla.XlaData.OpRequest request_;
    /**
     * <pre>
     * The actual request, which in itself is a tagged union of all possible
     * operation request types.
     * </pre>
     *
     * <code>.xla.OpRequest request = 4;</code>
     */
    public boolean hasRequest() {
      return request_ != null;
    }
    /**
     * <pre>
     * The actual request, which in itself is a tagged union of all possible
     * operation request types.
     * </pre>
     *
     * <code>.xla.OpRequest request = 4;</code>
     */
    public xla.XlaData.OpRequest getRequest() {
      return request_ == null ? xla.XlaData.OpRequest.getDefaultInstance() : request_;
    }
    /**
     * <pre>
     * The actual request, which in itself is a tagged union of all possible
     * operation request types.
     * </pre>
     *
     * <code>.xla.OpRequest request = 4;</code>
     */
    public xla.XlaData.OpRequestOrBuilder getRequestOrBuilder() {
      return getRequest();
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (outputHandle_ != null) {
        output.writeMessage(1, getOutputHandle());
      }
      if (outputShape_ != null) {
        output.writeMessage(2, getOutputShape());
      }
      if (getEmbeddedComputationVersionsList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(embeddedComputationVersionsMemoizedSerializedSize);
      }
      for (int i = 0; i < embeddedComputationVersions_.size(); i++) {
        output.writeInt64NoTag(embeddedComputationVersions_.get(i));
      }
      if (request_ != null) {
        output.writeMessage(4, getRequest());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (outputHandle_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getOutputHandle());
      }
      if (outputShape_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getOutputShape());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < embeddedComputationVersions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(embeddedComputationVersions_.get(i));
        }
        size += dataSize;
        if (!getEmbeddedComputationVersionsList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        embeddedComputationVersionsMemoizedSerializedSize = dataSize;
      }
      if (request_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getRequest());
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.Session.OperationRequest)) {
        return super.equals(obj);
      }
      xla.Session.OperationRequest other = (xla.Session.OperationRequest) obj;

      boolean result = true;
      result = result && (hasOutputHandle() == other.hasOutputHandle());
      if (hasOutputHandle()) {
        result = result && getOutputHandle()
            .equals(other.getOutputHandle());
      }
      result = result && (hasOutputShape() == other.hasOutputShape());
      if (hasOutputShape()) {
        result = result && getOutputShape()
            .equals(other.getOutputShape());
      }
      result = result && getEmbeddedComputationVersionsList()
          .equals(other.getEmbeddedComputationVersionsList());
      result = result && (hasRequest() == other.hasRequest());
      if (hasRequest()) {
        result = result && getRequest()
            .equals(other.getRequest());
      }
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOutputHandle()) {
        hash = (37 * hash) + OUTPUT_HANDLE_FIELD_NUMBER;
        hash = (53 * hash) + getOutputHandle().hashCode();
      }
      if (hasOutputShape()) {
        hash = (37 * hash) + OUTPUT_SHAPE_FIELD_NUMBER;
        hash = (53 * hash) + getOutputShape().hashCode();
      }
      if (getEmbeddedComputationVersionsCount() > 0) {
        hash = (37 * hash) + EMBEDDED_COMPUTATION_VERSIONS_FIELD_NUMBER;
        hash = (53 * hash) + getEmbeddedComputationVersionsList().hashCode();
      }
      if (hasRequest()) {
        hash = (37 * hash) + REQUEST_FIELD_NUMBER;
        hash = (53 * hash) + getRequest().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.Session.OperationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.Session.OperationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.Session.OperationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.Session.OperationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.Session.OperationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.Session.OperationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.Session.OperationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.Session.OperationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.Session.OperationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.Session.OperationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.Session.OperationRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a single operation request.
     * </pre>
     *
     * Protobuf type {@code xla.OperationRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.OperationRequest)
        xla.Session.OperationRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.Session.internal_static_xla_OperationRequest_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.Session.internal_static_xla_OperationRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.Session.OperationRequest.class, xla.Session.OperationRequest.Builder.class);
      }

      // Construct using xla.Session.OperationRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        if (outputHandleBuilder_ == null) {
          outputHandle_ = null;
        } else {
          outputHandle_ = null;
          outputHandleBuilder_ = null;
        }
        if (outputShapeBuilder_ == null) {
          outputShape_ = null;
        } else {
          outputShape_ = null;
          outputShapeBuilder_ = null;
        }
        embeddedComputationVersions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        if (requestBuilder_ == null) {
          request_ = null;
        } else {
          request_ = null;
          requestBuilder_ = null;
        }
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.Session.internal_static_xla_OperationRequest_descriptor;
      }

      public xla.Session.OperationRequest getDefaultInstanceForType() {
        return xla.Session.OperationRequest.getDefaultInstance();
      }

      public xla.Session.OperationRequest build() {
        xla.Session.OperationRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public xla.Session.OperationRequest buildPartial() {
        xla.Session.OperationRequest result = new xla.Session.OperationRequest(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (outputHandleBuilder_ == null) {
          result.outputHandle_ = outputHandle_;
        } else {
          result.outputHandle_ = outputHandleBuilder_.build();
        }
        if (outputShapeBuilder_ == null) {
          result.outputShape_ = outputShape_;
        } else {
          result.outputShape_ = outputShapeBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          embeddedComputationVersions_ = java.util.Collections.unmodifiableList(embeddedComputationVersions_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.embeddedComputationVersions_ = embeddedComputationVersions_;
        if (requestBuilder_ == null) {
          result.request_ = request_;
        } else {
          result.request_ = requestBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.Session.OperationRequest) {
          return mergeFrom((xla.Session.OperationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.Session.OperationRequest other) {
        if (other == xla.Session.OperationRequest.getDefaultInstance()) return this;
        if (other.hasOutputHandle()) {
          mergeOutputHandle(other.getOutputHandle());
        }
        if (other.hasOutputShape()) {
          mergeOutputShape(other.getOutputShape());
        }
        if (!other.embeddedComputationVersions_.isEmpty()) {
          if (embeddedComputationVersions_.isEmpty()) {
            embeddedComputationVersions_ = other.embeddedComputationVersions_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureEmbeddedComputationVersionsIsMutable();
            embeddedComputationVersions_.addAll(other.embeddedComputationVersions_);
          }
          onChanged();
        }
        if (other.hasRequest()) {
          mergeRequest(other.getRequest());
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xla.Session.OperationRequest parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xla.Session.OperationRequest) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private xla.XlaData.ComputationDataHandle outputHandle_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ComputationDataHandle, xla.XlaData.ComputationDataHandle.Builder, xla.XlaData.ComputationDataHandleOrBuilder> outputHandleBuilder_;
      /**
       * <code>.xla.ComputationDataHandle output_handle = 1;</code>
       */
      public boolean hasOutputHandle() {
        return outputHandleBuilder_ != null || outputHandle_ != null;
      }
      /**
       * <code>.xla.ComputationDataHandle output_handle = 1;</code>
       */
      public xla.XlaData.ComputationDataHandle getOutputHandle() {
        if (outputHandleBuilder_ == null) {
          return outputHandle_ == null ? xla.XlaData.ComputationDataHandle.getDefaultInstance() : outputHandle_;
        } else {
          return outputHandleBuilder_.getMessage();
        }
      }
      /**
       * <code>.xla.ComputationDataHandle output_handle = 1;</code>
       */
      public Builder setOutputHandle(xla.XlaData.ComputationDataHandle value) {
        if (outputHandleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputHandle_ = value;
          onChanged();
        } else {
          outputHandleBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.xla.ComputationDataHandle output_handle = 1;</code>
       */
      public Builder setOutputHandle(
          xla.XlaData.ComputationDataHandle.Builder builderForValue) {
        if (outputHandleBuilder_ == null) {
          outputHandle_ = builderForValue.build();
          onChanged();
        } else {
          outputHandleBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.xla.ComputationDataHandle output_handle = 1;</code>
       */
      public Builder mergeOutputHandle(xla.XlaData.ComputationDataHandle value) {
        if (outputHandleBuilder_ == null) {
          if (outputHandle_ != null) {
            outputHandle_ =
              xla.XlaData.ComputationDataHandle.newBuilder(outputHandle_).mergeFrom(value).buildPartial();
          } else {
            outputHandle_ = value;
          }
          onChanged();
        } else {
          outputHandleBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.xla.ComputationDataHandle output_handle = 1;</code>
       */
      public Builder clearOutputHandle() {
        if (outputHandleBuilder_ == null) {
          outputHandle_ = null;
          onChanged();
        } else {
          outputHandle_ = null;
          outputHandleBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.xla.ComputationDataHandle output_handle = 1;</code>
       */
      public xla.XlaData.ComputationDataHandle.Builder getOutputHandleBuilder() {
        
        onChanged();
        return getOutputHandleFieldBuilder().getBuilder();
      }
      /**
       * <code>.xla.ComputationDataHandle output_handle = 1;</code>
       */
      public xla.XlaData.ComputationDataHandleOrBuilder getOutputHandleOrBuilder() {
        if (outputHandleBuilder_ != null) {
          return outputHandleBuilder_.getMessageOrBuilder();
        } else {
          return outputHandle_ == null ?
              xla.XlaData.ComputationDataHandle.getDefaultInstance() : outputHandle_;
        }
      }
      /**
       * <code>.xla.ComputationDataHandle output_handle = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ComputationDataHandle, xla.XlaData.ComputationDataHandle.Builder, xla.XlaData.ComputationDataHandleOrBuilder> 
          getOutputHandleFieldBuilder() {
        if (outputHandleBuilder_ == null) {
          outputHandleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.ComputationDataHandle, xla.XlaData.ComputationDataHandle.Builder, xla.XlaData.ComputationDataHandleOrBuilder>(
                  getOutputHandle(),
                  getParentForChildren(),
                  isClean());
          outputHandle_ = null;
        }
        return outputHandleBuilder_;
      }

      private xla.XlaData.Shape outputShape_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.Shape, xla.XlaData.Shape.Builder, xla.XlaData.ShapeOrBuilder> outputShapeBuilder_;
      /**
       * <code>.xla.Shape output_shape = 2;</code>
       */
      public boolean hasOutputShape() {
        return outputShapeBuilder_ != null || outputShape_ != null;
      }
      /**
       * <code>.xla.Shape output_shape = 2;</code>
       */
      public xla.XlaData.Shape getOutputShape() {
        if (outputShapeBuilder_ == null) {
          return outputShape_ == null ? xla.XlaData.Shape.getDefaultInstance() : outputShape_;
        } else {
          return outputShapeBuilder_.getMessage();
        }
      }
      /**
       * <code>.xla.Shape output_shape = 2;</code>
       */
      public Builder setOutputShape(xla.XlaData.Shape value) {
        if (outputShapeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          outputShape_ = value;
          onChanged();
        } else {
          outputShapeBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.xla.Shape output_shape = 2;</code>
       */
      public Builder setOutputShape(
          xla.XlaData.Shape.Builder builderForValue) {
        if (outputShapeBuilder_ == null) {
          outputShape_ = builderForValue.build();
          onChanged();
        } else {
          outputShapeBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.xla.Shape output_shape = 2;</code>
       */
      public Builder mergeOutputShape(xla.XlaData.Shape value) {
        if (outputShapeBuilder_ == null) {
          if (outputShape_ != null) {
            outputShape_ =
              xla.XlaData.Shape.newBuilder(outputShape_).mergeFrom(value).buildPartial();
          } else {
            outputShape_ = value;
          }
          onChanged();
        } else {
          outputShapeBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.xla.Shape output_shape = 2;</code>
       */
      public Builder clearOutputShape() {
        if (outputShapeBuilder_ == null) {
          outputShape_ = null;
          onChanged();
        } else {
          outputShape_ = null;
          outputShapeBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.xla.Shape output_shape = 2;</code>
       */
      public xla.XlaData.Shape.Builder getOutputShapeBuilder() {
        
        onChanged();
        return getOutputShapeFieldBuilder().getBuilder();
      }
      /**
       * <code>.xla.Shape output_shape = 2;</code>
       */
      public xla.XlaData.ShapeOrBuilder getOutputShapeOrBuilder() {
        if (outputShapeBuilder_ != null) {
          return outputShapeBuilder_.getMessageOrBuilder();
        } else {
          return outputShape_ == null ?
              xla.XlaData.Shape.getDefaultInstance() : outputShape_;
        }
      }
      /**
       * <code>.xla.Shape output_shape = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.Shape, xla.XlaData.Shape.Builder, xla.XlaData.ShapeOrBuilder> 
          getOutputShapeFieldBuilder() {
        if (outputShapeBuilder_ == null) {
          outputShapeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.Shape, xla.XlaData.Shape.Builder, xla.XlaData.ShapeOrBuilder>(
                  getOutputShape(),
                  getParentForChildren(),
                  isClean());
          outputShape_ = null;
        }
        return outputShapeBuilder_;
      }

      private java.util.List<java.lang.Long> embeddedComputationVersions_ = java.util.Collections.emptyList();
      private void ensureEmbeddedComputationVersionsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          embeddedComputationVersions_ = new java.util.ArrayList<java.lang.Long>(embeddedComputationVersions_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <pre>
       * For operations which call embedded computations such as "Map", these are
       * the version(s) that the embedded computation should be called at. A version
       * value of a computation is the ComputationDataHandle of the root of the
       * computation at the point in time.
       * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
       * embedded computation so this field will have a single value for those
       * operations.
       * "While" operation takes two; index 0 is the "condition" version and index 1
       * is the "body" version.
       * </pre>
       *
       * <code>repeated int64 embedded_computation_versions = 3;</code>
       */
      public java.util.List<java.lang.Long>
          getEmbeddedComputationVersionsList() {
        return java.util.Collections.unmodifiableList(embeddedComputationVersions_);
      }
      /**
       * <pre>
       * For operations which call embedded computations such as "Map", these are
       * the version(s) that the embedded computation should be called at. A version
       * value of a computation is the ComputationDataHandle of the root of the
       * computation at the point in time.
       * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
       * embedded computation so this field will have a single value for those
       * operations.
       * "While" operation takes two; index 0 is the "condition" version and index 1
       * is the "body" version.
       * </pre>
       *
       * <code>repeated int64 embedded_computation_versions = 3;</code>
       */
      public int getEmbeddedComputationVersionsCount() {
        return embeddedComputationVersions_.size();
      }
      /**
       * <pre>
       * For operations which call embedded computations such as "Map", these are
       * the version(s) that the embedded computation should be called at. A version
       * value of a computation is the ComputationDataHandle of the root of the
       * computation at the point in time.
       * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
       * embedded computation so this field will have a single value for those
       * operations.
       * "While" operation takes two; index 0 is the "condition" version and index 1
       * is the "body" version.
       * </pre>
       *
       * <code>repeated int64 embedded_computation_versions = 3;</code>
       */
      public long getEmbeddedComputationVersions(int index) {
        return embeddedComputationVersions_.get(index);
      }
      /**
       * <pre>
       * For operations which call embedded computations such as "Map", these are
       * the version(s) that the embedded computation should be called at. A version
       * value of a computation is the ComputationDataHandle of the root of the
       * computation at the point in time.
       * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
       * embedded computation so this field will have a single value for those
       * operations.
       * "While" operation takes two; index 0 is the "condition" version and index 1
       * is the "body" version.
       * </pre>
       *
       * <code>repeated int64 embedded_computation_versions = 3;</code>
       */
      public Builder setEmbeddedComputationVersions(
          int index, long value) {
        ensureEmbeddedComputationVersionsIsMutable();
        embeddedComputationVersions_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For operations which call embedded computations such as "Map", these are
       * the version(s) that the embedded computation should be called at. A version
       * value of a computation is the ComputationDataHandle of the root of the
       * computation at the point in time.
       * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
       * embedded computation so this field will have a single value for those
       * operations.
       * "While" operation takes two; index 0 is the "condition" version and index 1
       * is the "body" version.
       * </pre>
       *
       * <code>repeated int64 embedded_computation_versions = 3;</code>
       */
      public Builder addEmbeddedComputationVersions(long value) {
        ensureEmbeddedComputationVersionsIsMutable();
        embeddedComputationVersions_.add(value);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For operations which call embedded computations such as "Map", these are
       * the version(s) that the embedded computation should be called at. A version
       * value of a computation is the ComputationDataHandle of the root of the
       * computation at the point in time.
       * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
       * embedded computation so this field will have a single value for those
       * operations.
       * "While" operation takes two; index 0 is the "condition" version and index 1
       * is the "body" version.
       * </pre>
       *
       * <code>repeated int64 embedded_computation_versions = 3;</code>
       */
      public Builder addAllEmbeddedComputationVersions(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureEmbeddedComputationVersionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, embeddedComputationVersions_);
        onChanged();
        return this;
      }
      /**
       * <pre>
       * For operations which call embedded computations such as "Map", these are
       * the version(s) that the embedded computation should be called at. A version
       * value of a computation is the ComputationDataHandle of the root of the
       * computation at the point in time.
       * "Call", "Map", "Reduce", and "ReduceWindow" operations take a single
       * embedded computation so this field will have a single value for those
       * operations.
       * "While" operation takes two; index 0 is the "condition" version and index 1
       * is the "body" version.
       * </pre>
       *
       * <code>repeated int64 embedded_computation_versions = 3;</code>
       */
      public Builder clearEmbeddedComputationVersions() {
        embeddedComputationVersions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private xla.XlaData.OpRequest request_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.OpRequest, xla.XlaData.OpRequest.Builder, xla.XlaData.OpRequestOrBuilder> requestBuilder_;
      /**
       * <pre>
       * The actual request, which in itself is a tagged union of all possible
       * operation request types.
       * </pre>
       *
       * <code>.xla.OpRequest request = 4;</code>
       */
      public boolean hasRequest() {
        return requestBuilder_ != null || request_ != null;
      }
      /**
       * <pre>
       * The actual request, which in itself is a tagged union of all possible
       * operation request types.
       * </pre>
       *
       * <code>.xla.OpRequest request = 4;</code>
       */
      public xla.XlaData.OpRequest getRequest() {
        if (requestBuilder_ == null) {
          return request_ == null ? xla.XlaData.OpRequest.getDefaultInstance() : request_;
        } else {
          return requestBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The actual request, which in itself is a tagged union of all possible
       * operation request types.
       * </pre>
       *
       * <code>.xla.OpRequest request = 4;</code>
       */
      public Builder setRequest(xla.XlaData.OpRequest value) {
        if (requestBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          request_ = value;
          onChanged();
        } else {
          requestBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The actual request, which in itself is a tagged union of all possible
       * operation request types.
       * </pre>
       *
       * <code>.xla.OpRequest request = 4;</code>
       */
      public Builder setRequest(
          xla.XlaData.OpRequest.Builder builderForValue) {
        if (requestBuilder_ == null) {
          request_ = builderForValue.build();
          onChanged();
        } else {
          requestBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The actual request, which in itself is a tagged union of all possible
       * operation request types.
       * </pre>
       *
       * <code>.xla.OpRequest request = 4;</code>
       */
      public Builder mergeRequest(xla.XlaData.OpRequest value) {
        if (requestBuilder_ == null) {
          if (request_ != null) {
            request_ =
              xla.XlaData.OpRequest.newBuilder(request_).mergeFrom(value).buildPartial();
          } else {
            request_ = value;
          }
          onChanged();
        } else {
          requestBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The actual request, which in itself is a tagged union of all possible
       * operation request types.
       * </pre>
       *
       * <code>.xla.OpRequest request = 4;</code>
       */
      public Builder clearRequest() {
        if (requestBuilder_ == null) {
          request_ = null;
          onChanged();
        } else {
          request_ = null;
          requestBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The actual request, which in itself is a tagged union of all possible
       * operation request types.
       * </pre>
       *
       * <code>.xla.OpRequest request = 4;</code>
       */
      public xla.XlaData.OpRequest.Builder getRequestBuilder() {
        
        onChanged();
        return getRequestFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The actual request, which in itself is a tagged union of all possible
       * operation request types.
       * </pre>
       *
       * <code>.xla.OpRequest request = 4;</code>
       */
      public xla.XlaData.OpRequestOrBuilder getRequestOrBuilder() {
        if (requestBuilder_ != null) {
          return requestBuilder_.getMessageOrBuilder();
        } else {
          return request_ == null ?
              xla.XlaData.OpRequest.getDefaultInstance() : request_;
        }
      }
      /**
       * <pre>
       * The actual request, which in itself is a tagged union of all possible
       * operation request types.
       * </pre>
       *
       * <code>.xla.OpRequest request = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.OpRequest, xla.XlaData.OpRequest.Builder, xla.XlaData.OpRequestOrBuilder> 
          getRequestFieldBuilder() {
        if (requestBuilder_ == null) {
          requestBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.OpRequest, xla.XlaData.OpRequest.Builder, xla.XlaData.OpRequestOrBuilder>(
                  getRequest(),
                  getParentForChildren(),
                  isClean());
          request_ = null;
        }
        return requestBuilder_;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:xla.OperationRequest)
    }

    // @@protoc_insertion_point(class_scope:xla.OperationRequest)
    private static final xla.Session.OperationRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.Session.OperationRequest();
    }

    public static xla.Session.OperationRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<OperationRequest>
        PARSER = new com.google.protobuf.AbstractParser<OperationRequest>() {
      public OperationRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new OperationRequest(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<OperationRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<OperationRequest> getParserForType() {
      return PARSER;
    }

    public xla.Session.OperationRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SessionComputationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.SessionComputation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * The ComputationHandle used to refer to this computation in the XLA
     * service.
     * </pre>
     *
     * <code>.xla.ComputationHandle computation_handle = 2;</code>
     */
    boolean hasComputationHandle();
    /**
     * <pre>
     * The ComputationHandle used to refer to this computation in the XLA
     * service.
     * </pre>
     *
     * <code>.xla.ComputationHandle computation_handle = 2;</code>
     */
    xla.XlaData.ComputationHandle getComputationHandle();
    /**
     * <pre>
     * The ComputationHandle used to refer to this computation in the XLA
     * service.
     * </pre>
     *
     * <code>.xla.ComputationHandle computation_handle = 2;</code>
     */
    xla.XlaData.ComputationHandleOrBuilder getComputationHandleOrBuilder();

    /**
     * <pre>
     * Map from ComputationDataHandle value to operation request. The highest
     * ComputationDataHandle value corresponds to the root of the computation.
     * </pre>
     *
     * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
     */
    int getRequestsCount();
    /**
     * <pre>
     * Map from ComputationDataHandle value to operation request. The highest
     * ComputationDataHandle value corresponds to the root of the computation.
     * </pre>
     *
     * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
     */
    boolean containsRequests(
        long key);
    /**
     * Use {@link #getRequestsMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Long, xla.Session.OperationRequest>
    getRequests();
    /**
     * <pre>
     * Map from ComputationDataHandle value to operation request. The highest
     * ComputationDataHandle value corresponds to the root of the computation.
     * </pre>
     *
     * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
     */
    java.util.Map<java.lang.Long, xla.Session.OperationRequest>
    getRequestsMap();
    /**
     * <pre>
     * Map from ComputationDataHandle value to operation request. The highest
     * ComputationDataHandle value corresponds to the root of the computation.
     * </pre>
     *
     * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
     */

    xla.Session.OperationRequest getRequestsOrDefault(
        long key,
        xla.Session.OperationRequest defaultValue);
    /**
     * <pre>
     * Map from ComputationDataHandle value to operation request. The highest
     * ComputationDataHandle value corresponds to the root of the computation.
     * </pre>
     *
     * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
     */

    xla.Session.OperationRequest getRequestsOrThrow(
        long key);
  }
  /**
   * <pre>
   * Describes a sequence of operation requests which define an XLA
   * computation.
   * </pre>
   *
   * Protobuf type {@code xla.SessionComputation}
   */
  public  static final class SessionComputation extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.SessionComputation)
      SessionComputationOrBuilder {
    // Use SessionComputation.newBuilder() to construct.
    private SessionComputation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SessionComputation() {
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SessionComputation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              xla.XlaData.ComputationHandle.Builder subBuilder = null;
              if (computationHandle_ != null) {
                subBuilder = computationHandle_.toBuilder();
              }
              computationHandle_ = input.readMessage(xla.XlaData.ComputationHandle.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(computationHandle_);
                computationHandle_ = subBuilder.buildPartial();
              }

              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                requests_ = com.google.protobuf.MapField.newMapField(
                    RequestsDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Long, xla.Session.OperationRequest>
              requests__ = input.readMessage(
                  RequestsDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              requests_.getMutableMap().put(
                  requests__.getKey(), requests__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.Session.internal_static_xla_SessionComputation_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetRequests();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.Session.internal_static_xla_SessionComputation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.Session.SessionComputation.class, xla.Session.SessionComputation.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int COMPUTATION_HANDLE_FIELD_NUMBER = 2;
    private xla.XlaData.ComputationHandle computationHandle_;
    /**
     * <pre>
     * The ComputationHandle used to refer to this computation in the XLA
     * service.
     * </pre>
     *
     * <code>.xla.ComputationHandle computation_handle = 2;</code>
     */
    public boolean hasComputationHandle() {
      return computationHandle_ != null;
    }
    /**
     * <pre>
     * The ComputationHandle used to refer to this computation in the XLA
     * service.
     * </pre>
     *
     * <code>.xla.ComputationHandle computation_handle = 2;</code>
     */
    public xla.XlaData.ComputationHandle getComputationHandle() {
      return computationHandle_ == null ? xla.XlaData.ComputationHandle.getDefaultInstance() : computationHandle_;
    }
    /**
     * <pre>
     * The ComputationHandle used to refer to this computation in the XLA
     * service.
     * </pre>
     *
     * <code>.xla.ComputationHandle computation_handle = 2;</code>
     */
    public xla.XlaData.ComputationHandleOrBuilder getComputationHandleOrBuilder() {
      return getComputationHandle();
    }

    public static final int REQUESTS_FIELD_NUMBER = 3;
    private static final class RequestsDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Long, xla.Session.OperationRequest> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Long, xla.Session.OperationRequest>newDefaultInstance(
                  xla.Session.internal_static_xla_SessionComputation_RequestsEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.INT64,
                  0L,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  xla.Session.OperationRequest.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Long, xla.Session.OperationRequest> requests_;
    private com.google.protobuf.MapField<java.lang.Long, xla.Session.OperationRequest>
    internalGetRequests() {
      if (requests_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            RequestsDefaultEntryHolder.defaultEntry);
      }
      return requests_;
    }

    public int getRequestsCount() {
      return internalGetRequests().getMap().size();
    }
    /**
     * <pre>
     * Map from ComputationDataHandle value to operation request. The highest
     * ComputationDataHandle value corresponds to the root of the computation.
     * </pre>
     *
     * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
     */

    public boolean containsRequests(
        long key) {
      
      return internalGetRequests().getMap().containsKey(key);
    }
    /**
     * Use {@link #getRequestsMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.Long, xla.Session.OperationRequest> getRequests() {
      return getRequestsMap();
    }
    /**
     * <pre>
     * Map from ComputationDataHandle value to operation request. The highest
     * ComputationDataHandle value corresponds to the root of the computation.
     * </pre>
     *
     * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
     */

    public java.util.Map<java.lang.Long, xla.Session.OperationRequest> getRequestsMap() {
      return internalGetRequests().getMap();
    }
    /**
     * <pre>
     * Map from ComputationDataHandle value to operation request. The highest
     * ComputationDataHandle value corresponds to the root of the computation.
     * </pre>
     *
     * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
     */

    public xla.Session.OperationRequest getRequestsOrDefault(
        long key,
        xla.Session.OperationRequest defaultValue) {
      
      java.util.Map<java.lang.Long, xla.Session.OperationRequest> map =
          internalGetRequests().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Map from ComputationDataHandle value to operation request. The highest
     * ComputationDataHandle value corresponds to the root of the computation.
     * </pre>
     *
     * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
     */

    public xla.Session.OperationRequest getRequestsOrThrow(
        long key) {
      
      java.util.Map<java.lang.Long, xla.Session.OperationRequest> map =
          internalGetRequests().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      if (computationHandle_ != null) {
        output.writeMessage(2, getComputationHandle());
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeLongMapTo(
          output,
          internalGetRequests(),
          RequestsDefaultEntryHolder.defaultEntry,
          3);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      if (computationHandle_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getComputationHandle());
      }
      for (java.util.Map.Entry<java.lang.Long, xla.Session.OperationRequest> entry
           : internalGetRequests().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Long, xla.Session.OperationRequest>
        requests__ = RequestsDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, requests__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.Session.SessionComputation)) {
        return super.equals(obj);
      }
      xla.Session.SessionComputation other = (xla.Session.SessionComputation) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && (hasComputationHandle() == other.hasComputationHandle());
      if (hasComputationHandle()) {
        result = result && getComputationHandle()
            .equals(other.getComputationHandle());
      }
      result = result && internalGetRequests().equals(
          other.internalGetRequests());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (hasComputationHandle()) {
        hash = (37 * hash) + COMPUTATION_HANDLE_FIELD_NUMBER;
        hash = (53 * hash) + getComputationHandle().hashCode();
      }
      if (!internalGetRequests().getMap().isEmpty()) {
        hash = (37 * hash) + REQUESTS_FIELD_NUMBER;
        hash = (53 * hash) + internalGetRequests().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.Session.SessionComputation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.Session.SessionComputation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.Session.SessionComputation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.Session.SessionComputation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.Session.SessionComputation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.Session.SessionComputation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.Session.SessionComputation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.Session.SessionComputation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.Session.SessionComputation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.Session.SessionComputation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.Session.SessionComputation prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a sequence of operation requests which define an XLA
     * computation.
     * </pre>
     *
     * Protobuf type {@code xla.SessionComputation}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.SessionComputation)
        xla.Session.SessionComputationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.Session.internal_static_xla_SessionComputation_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetRequests();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableRequests();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.Session.internal_static_xla_SessionComputation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.Session.SessionComputation.class, xla.Session.SessionComputation.Builder.class);
      }

      // Construct using xla.Session.SessionComputation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        if (computationHandleBuilder_ == null) {
          computationHandle_ = null;
        } else {
          computationHandle_ = null;
          computationHandleBuilder_ = null;
        }
        internalGetMutableRequests().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.Session.internal_static_xla_SessionComputation_descriptor;
      }

      public xla.Session.SessionComputation getDefaultInstanceForType() {
        return xla.Session.SessionComputation.getDefaultInstance();
      }

      public xla.Session.SessionComputation build() {
        xla.Session.SessionComputation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public xla.Session.SessionComputation buildPartial() {
        xla.Session.SessionComputation result = new xla.Session.SessionComputation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        if (computationHandleBuilder_ == null) {
          result.computationHandle_ = computationHandle_;
        } else {
          result.computationHandle_ = computationHandleBuilder_.build();
        }
        result.requests_ = internalGetRequests();
        result.requests_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.Session.SessionComputation) {
          return mergeFrom((xla.Session.SessionComputation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.Session.SessionComputation other) {
        if (other == xla.Session.SessionComputation.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        if (other.hasComputationHandle()) {
          mergeComputationHandle(other.getComputationHandle());
        }
        internalGetMutableRequests().mergeFrom(
            other.internalGetRequests());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xla.Session.SessionComputation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xla.Session.SessionComputation) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private xla.XlaData.ComputationHandle computationHandle_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ComputationHandle, xla.XlaData.ComputationHandle.Builder, xla.XlaData.ComputationHandleOrBuilder> computationHandleBuilder_;
      /**
       * <pre>
       * The ComputationHandle used to refer to this computation in the XLA
       * service.
       * </pre>
       *
       * <code>.xla.ComputationHandle computation_handle = 2;</code>
       */
      public boolean hasComputationHandle() {
        return computationHandleBuilder_ != null || computationHandle_ != null;
      }
      /**
       * <pre>
       * The ComputationHandle used to refer to this computation in the XLA
       * service.
       * </pre>
       *
       * <code>.xla.ComputationHandle computation_handle = 2;</code>
       */
      public xla.XlaData.ComputationHandle getComputationHandle() {
        if (computationHandleBuilder_ == null) {
          return computationHandle_ == null ? xla.XlaData.ComputationHandle.getDefaultInstance() : computationHandle_;
        } else {
          return computationHandleBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The ComputationHandle used to refer to this computation in the XLA
       * service.
       * </pre>
       *
       * <code>.xla.ComputationHandle computation_handle = 2;</code>
       */
      public Builder setComputationHandle(xla.XlaData.ComputationHandle value) {
        if (computationHandleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          computationHandle_ = value;
          onChanged();
        } else {
          computationHandleBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The ComputationHandle used to refer to this computation in the XLA
       * service.
       * </pre>
       *
       * <code>.xla.ComputationHandle computation_handle = 2;</code>
       */
      public Builder setComputationHandle(
          xla.XlaData.ComputationHandle.Builder builderForValue) {
        if (computationHandleBuilder_ == null) {
          computationHandle_ = builderForValue.build();
          onChanged();
        } else {
          computationHandleBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The ComputationHandle used to refer to this computation in the XLA
       * service.
       * </pre>
       *
       * <code>.xla.ComputationHandle computation_handle = 2;</code>
       */
      public Builder mergeComputationHandle(xla.XlaData.ComputationHandle value) {
        if (computationHandleBuilder_ == null) {
          if (computationHandle_ != null) {
            computationHandle_ =
              xla.XlaData.ComputationHandle.newBuilder(computationHandle_).mergeFrom(value).buildPartial();
          } else {
            computationHandle_ = value;
          }
          onChanged();
        } else {
          computationHandleBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The ComputationHandle used to refer to this computation in the XLA
       * service.
       * </pre>
       *
       * <code>.xla.ComputationHandle computation_handle = 2;</code>
       */
      public Builder clearComputationHandle() {
        if (computationHandleBuilder_ == null) {
          computationHandle_ = null;
          onChanged();
        } else {
          computationHandle_ = null;
          computationHandleBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The ComputationHandle used to refer to this computation in the XLA
       * service.
       * </pre>
       *
       * <code>.xla.ComputationHandle computation_handle = 2;</code>
       */
      public xla.XlaData.ComputationHandle.Builder getComputationHandleBuilder() {
        
        onChanged();
        return getComputationHandleFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The ComputationHandle used to refer to this computation in the XLA
       * service.
       * </pre>
       *
       * <code>.xla.ComputationHandle computation_handle = 2;</code>
       */
      public xla.XlaData.ComputationHandleOrBuilder getComputationHandleOrBuilder() {
        if (computationHandleBuilder_ != null) {
          return computationHandleBuilder_.getMessageOrBuilder();
        } else {
          return computationHandle_ == null ?
              xla.XlaData.ComputationHandle.getDefaultInstance() : computationHandle_;
        }
      }
      /**
       * <pre>
       * The ComputationHandle used to refer to this computation in the XLA
       * service.
       * </pre>
       *
       * <code>.xla.ComputationHandle computation_handle = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.ComputationHandle, xla.XlaData.ComputationHandle.Builder, xla.XlaData.ComputationHandleOrBuilder> 
          getComputationHandleFieldBuilder() {
        if (computationHandleBuilder_ == null) {
          computationHandleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.ComputationHandle, xla.XlaData.ComputationHandle.Builder, xla.XlaData.ComputationHandleOrBuilder>(
                  getComputationHandle(),
                  getParentForChildren(),
                  isClean());
          computationHandle_ = null;
        }
        return computationHandleBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Long, xla.Session.OperationRequest> requests_;
      private com.google.protobuf.MapField<java.lang.Long, xla.Session.OperationRequest>
      internalGetRequests() {
        if (requests_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              RequestsDefaultEntryHolder.defaultEntry);
        }
        return requests_;
      }
      private com.google.protobuf.MapField<java.lang.Long, xla.Session.OperationRequest>
      internalGetMutableRequests() {
        onChanged();;
        if (requests_ == null) {
          requests_ = com.google.protobuf.MapField.newMapField(
              RequestsDefaultEntryHolder.defaultEntry);
        }
        if (!requests_.isMutable()) {
          requests_ = requests_.copy();
        }
        return requests_;
      }

      public int getRequestsCount() {
        return internalGetRequests().getMap().size();
      }
      /**
       * <pre>
       * Map from ComputationDataHandle value to operation request. The highest
       * ComputationDataHandle value corresponds to the root of the computation.
       * </pre>
       *
       * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
       */

      public boolean containsRequests(
          long key) {
        
        return internalGetRequests().getMap().containsKey(key);
      }
      /**
       * Use {@link #getRequestsMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, xla.Session.OperationRequest> getRequests() {
        return getRequestsMap();
      }
      /**
       * <pre>
       * Map from ComputationDataHandle value to operation request. The highest
       * ComputationDataHandle value corresponds to the root of the computation.
       * </pre>
       *
       * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
       */

      public java.util.Map<java.lang.Long, xla.Session.OperationRequest> getRequestsMap() {
        return internalGetRequests().getMap();
      }
      /**
       * <pre>
       * Map from ComputationDataHandle value to operation request. The highest
       * ComputationDataHandle value corresponds to the root of the computation.
       * </pre>
       *
       * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
       */

      public xla.Session.OperationRequest getRequestsOrDefault(
          long key,
          xla.Session.OperationRequest defaultValue) {
        
        java.util.Map<java.lang.Long, xla.Session.OperationRequest> map =
            internalGetRequests().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Map from ComputationDataHandle value to operation request. The highest
       * ComputationDataHandle value corresponds to the root of the computation.
       * </pre>
       *
       * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
       */

      public xla.Session.OperationRequest getRequestsOrThrow(
          long key) {
        
        java.util.Map<java.lang.Long, xla.Session.OperationRequest> map =
            internalGetRequests().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearRequests() {
        internalGetMutableRequests().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Map from ComputationDataHandle value to operation request. The highest
       * ComputationDataHandle value corresponds to the root of the computation.
       * </pre>
       *
       * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
       */

      public Builder removeRequests(
          long key) {
        
        internalGetMutableRequests().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Long, xla.Session.OperationRequest>
      getMutableRequests() {
        return internalGetMutableRequests().getMutableMap();
      }
      /**
       * <pre>
       * Map from ComputationDataHandle value to operation request. The highest
       * ComputationDataHandle value corresponds to the root of the computation.
       * </pre>
       *
       * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
       */
      public Builder putRequests(
          long key,
          xla.Session.OperationRequest value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableRequests().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Map from ComputationDataHandle value to operation request. The highest
       * ComputationDataHandle value corresponds to the root of the computation.
       * </pre>
       *
       * <code>map&lt;int64, .xla.OperationRequest&gt; requests = 3;</code>
       */

      public Builder putAllRequests(
          java.util.Map<java.lang.Long, xla.Session.OperationRequest> values) {
        internalGetMutableRequests().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:xla.SessionComputation)
    }

    // @@protoc_insertion_point(class_scope:xla.SessionComputation)
    private static final xla.Session.SessionComputation DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.Session.SessionComputation();
    }

    public static xla.Session.SessionComputation getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SessionComputation>
        PARSER = new com.google.protobuf.AbstractParser<SessionComputation>() {
      public SessionComputation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SessionComputation(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SessionComputation> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SessionComputation> getParserForType() {
      return PARSER;
    }

    public xla.Session.SessionComputation getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SessionModuleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:xla.SessionModule)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The entry computation, which was requested for serialization. This may have
     * referred to embedded computations, which are reflected below.
     * </pre>
     *
     * <code>.xla.SessionComputation entry = 1;</code>
     */
    boolean hasEntry();
    /**
     * <pre>
     * The entry computation, which was requested for serialization. This may have
     * referred to embedded computations, which are reflected below.
     * </pre>
     *
     * <code>.xla.SessionComputation entry = 1;</code>
     */
    xla.Session.SessionComputation getEntry();
    /**
     * <pre>
     * The entry computation, which was requested for serialization. This may have
     * referred to embedded computations, which are reflected below.
     * </pre>
     *
     * <code>.xla.SessionComputation entry = 1;</code>
     */
    xla.Session.SessionComputationOrBuilder getEntryOrBuilder();

    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    java.util.List<xla.Session.SessionComputation> 
        getEmbeddedComputationsList();
    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    xla.Session.SessionComputation getEmbeddedComputations(int index);
    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    int getEmbeddedComputationsCount();
    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    java.util.List<? extends xla.Session.SessionComputationOrBuilder> 
        getEmbeddedComputationsOrBuilderList();
    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    xla.Session.SessionComputationOrBuilder getEmbeddedComputationsOrBuilder(
        int index);

    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    java.util.List<xla.XlaData.LiteralProto> 
        getArgumentsList();
    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    xla.XlaData.LiteralProto getArguments(int index);
    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    int getArgumentsCount();
    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    java.util.List<? extends xla.XlaData.LiteralProtoOrBuilder> 
        getArgumentsOrBuilderList();
    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    xla.XlaData.LiteralProtoOrBuilder getArgumentsOrBuilder(
        int index);

    /**
     * <pre>
     * The result of the computation.
     * </pre>
     *
     * <code>.xla.LiteralProto result = 4;</code>
     */
    boolean hasResult();
    /**
     * <pre>
     * The result of the computation.
     * </pre>
     *
     * <code>.xla.LiteralProto result = 4;</code>
     */
    xla.XlaData.LiteralProto getResult();
    /**
     * <pre>
     * The result of the computation.
     * </pre>
     *
     * <code>.xla.LiteralProto result = 4;</code>
     */
    xla.XlaData.LiteralProtoOrBuilder getResultOrBuilder();

    /**
     * <pre>
     * The name of the platform used to run the computation.
     * </pre>
     *
     * <code>string execution_platform = 5;</code>
     */
    java.lang.String getExecutionPlatform();
    /**
     * <pre>
     * The name of the platform used to run the computation.
     * </pre>
     *
     * <code>string execution_platform = 5;</code>
     */
    com.google.protobuf.ByteString
        getExecutionPlatformBytes();
  }
  /**
   * <pre>
   * Describes a group of SessionComputations with an "entry point" computation
   * that may refer to the other non-entry (AKA embedded) computations.
   * This message is used to serialize a computation that has been built via the
   * XLA service API, along with its dependencies, for purposes such as
   * analysis/replay/file-storage.
   * </pre>
   *
   * Protobuf type {@code xla.SessionModule}
   */
  public  static final class SessionModule extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:xla.SessionModule)
      SessionModuleOrBuilder {
    // Use SessionModule.newBuilder() to construct.
    private SessionModule(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SessionModule() {
      embeddedComputations_ = java.util.Collections.emptyList();
      arguments_ = java.util.Collections.emptyList();
      executionPlatform_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private SessionModule(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              xla.Session.SessionComputation.Builder subBuilder = null;
              if (entry_ != null) {
                subBuilder = entry_.toBuilder();
              }
              entry_ = input.readMessage(xla.Session.SessionComputation.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(entry_);
                entry_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                embeddedComputations_ = new java.util.ArrayList<xla.Session.SessionComputation>();
                mutable_bitField0_ |= 0x00000002;
              }
              embeddedComputations_.add(
                  input.readMessage(xla.Session.SessionComputation.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                arguments_ = new java.util.ArrayList<xla.XlaData.LiteralProto>();
                mutable_bitField0_ |= 0x00000004;
              }
              arguments_.add(
                  input.readMessage(xla.XlaData.LiteralProto.parser(), extensionRegistry));
              break;
            }
            case 34: {
              xla.XlaData.LiteralProto.Builder subBuilder = null;
              if (result_ != null) {
                subBuilder = result_.toBuilder();
              }
              result_ = input.readMessage(xla.XlaData.LiteralProto.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(result_);
                result_ = subBuilder.buildPartial();
              }

              break;
            }
            case 42: {
              java.lang.String s = input.readStringRequireUtf8();

              executionPlatform_ = s;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          embeddedComputations_ = java.util.Collections.unmodifiableList(embeddedComputations_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          arguments_ = java.util.Collections.unmodifiableList(arguments_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return xla.Session.internal_static_xla_SessionModule_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return xla.Session.internal_static_xla_SessionModule_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              xla.Session.SessionModule.class, xla.Session.SessionModule.Builder.class);
    }

    private int bitField0_;
    public static final int ENTRY_FIELD_NUMBER = 1;
    private xla.Session.SessionComputation entry_;
    /**
     * <pre>
     * The entry computation, which was requested for serialization. This may have
     * referred to embedded computations, which are reflected below.
     * </pre>
     *
     * <code>.xla.SessionComputation entry = 1;</code>
     */
    public boolean hasEntry() {
      return entry_ != null;
    }
    /**
     * <pre>
     * The entry computation, which was requested for serialization. This may have
     * referred to embedded computations, which are reflected below.
     * </pre>
     *
     * <code>.xla.SessionComputation entry = 1;</code>
     */
    public xla.Session.SessionComputation getEntry() {
      return entry_ == null ? xla.Session.SessionComputation.getDefaultInstance() : entry_;
    }
    /**
     * <pre>
     * The entry computation, which was requested for serialization. This may have
     * referred to embedded computations, which are reflected below.
     * </pre>
     *
     * <code>.xla.SessionComputation entry = 1;</code>
     */
    public xla.Session.SessionComputationOrBuilder getEntryOrBuilder() {
      return getEntry();
    }

    public static final int EMBEDDED_COMPUTATIONS_FIELD_NUMBER = 2;
    private java.util.List<xla.Session.SessionComputation> embeddedComputations_;
    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    public java.util.List<xla.Session.SessionComputation> getEmbeddedComputationsList() {
      return embeddedComputations_;
    }
    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    public java.util.List<? extends xla.Session.SessionComputationOrBuilder> 
        getEmbeddedComputationsOrBuilderList() {
      return embeddedComputations_;
    }
    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    public int getEmbeddedComputationsCount() {
      return embeddedComputations_.size();
    }
    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    public xla.Session.SessionComputation getEmbeddedComputations(int index) {
      return embeddedComputations_.get(index);
    }
    /**
     * <pre>
     * Embedded computations that are transitively referred to by the entry
     * computation.
     * </pre>
     *
     * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
     */
    public xla.Session.SessionComputationOrBuilder getEmbeddedComputationsOrBuilder(
        int index) {
      return embeddedComputations_.get(index);
    }

    public static final int ARGUMENTS_FIELD_NUMBER = 3;
    private java.util.List<xla.XlaData.LiteralProto> arguments_;
    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    public java.util.List<xla.XlaData.LiteralProto> getArgumentsList() {
      return arguments_;
    }
    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    public java.util.List<? extends xla.XlaData.LiteralProtoOrBuilder> 
        getArgumentsOrBuilderList() {
      return arguments_;
    }
    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    public int getArgumentsCount() {
      return arguments_.size();
    }
    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    public xla.XlaData.LiteralProto getArguments(int index) {
      return arguments_.get(index);
    }
    /**
     * <pre>
     * The arguments passed to the computation.
     * </pre>
     *
     * <code>repeated .xla.LiteralProto arguments = 3;</code>
     */
    public xla.XlaData.LiteralProtoOrBuilder getArgumentsOrBuilder(
        int index) {
      return arguments_.get(index);
    }

    public static final int RESULT_FIELD_NUMBER = 4;
    private xla.XlaData.LiteralProto result_;
    /**
     * <pre>
     * The result of the computation.
     * </pre>
     *
     * <code>.xla.LiteralProto result = 4;</code>
     */
    public boolean hasResult() {
      return result_ != null;
    }
    /**
     * <pre>
     * The result of the computation.
     * </pre>
     *
     * <code>.xla.LiteralProto result = 4;</code>
     */
    public xla.XlaData.LiteralProto getResult() {
      return result_ == null ? xla.XlaData.LiteralProto.getDefaultInstance() : result_;
    }
    /**
     * <pre>
     * The result of the computation.
     * </pre>
     *
     * <code>.xla.LiteralProto result = 4;</code>
     */
    public xla.XlaData.LiteralProtoOrBuilder getResultOrBuilder() {
      return getResult();
    }

    public static final int EXECUTION_PLATFORM_FIELD_NUMBER = 5;
    private volatile java.lang.Object executionPlatform_;
    /**
     * <pre>
     * The name of the platform used to run the computation.
     * </pre>
     *
     * <code>string execution_platform = 5;</code>
     */
    public java.lang.String getExecutionPlatform() {
      java.lang.Object ref = executionPlatform_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        executionPlatform_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The name of the platform used to run the computation.
     * </pre>
     *
     * <code>string execution_platform = 5;</code>
     */
    public com.google.protobuf.ByteString
        getExecutionPlatformBytes() {
      java.lang.Object ref = executionPlatform_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        executionPlatform_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (entry_ != null) {
        output.writeMessage(1, getEntry());
      }
      for (int i = 0; i < embeddedComputations_.size(); i++) {
        output.writeMessage(2, embeddedComputations_.get(i));
      }
      for (int i = 0; i < arguments_.size(); i++) {
        output.writeMessage(3, arguments_.get(i));
      }
      if (result_ != null) {
        output.writeMessage(4, getResult());
      }
      if (!getExecutionPlatformBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 5, executionPlatform_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (entry_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getEntry());
      }
      for (int i = 0; i < embeddedComputations_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, embeddedComputations_.get(i));
      }
      for (int i = 0; i < arguments_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, arguments_.get(i));
      }
      if (result_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getResult());
      }
      if (!getExecutionPlatformBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, executionPlatform_);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof xla.Session.SessionModule)) {
        return super.equals(obj);
      }
      xla.Session.SessionModule other = (xla.Session.SessionModule) obj;

      boolean result = true;
      result = result && (hasEntry() == other.hasEntry());
      if (hasEntry()) {
        result = result && getEntry()
            .equals(other.getEntry());
      }
      result = result && getEmbeddedComputationsList()
          .equals(other.getEmbeddedComputationsList());
      result = result && getArgumentsList()
          .equals(other.getArgumentsList());
      result = result && (hasResult() == other.hasResult());
      if (hasResult()) {
        result = result && getResult()
            .equals(other.getResult());
      }
      result = result && getExecutionPlatform()
          .equals(other.getExecutionPlatform());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasEntry()) {
        hash = (37 * hash) + ENTRY_FIELD_NUMBER;
        hash = (53 * hash) + getEntry().hashCode();
      }
      if (getEmbeddedComputationsCount() > 0) {
        hash = (37 * hash) + EMBEDDED_COMPUTATIONS_FIELD_NUMBER;
        hash = (53 * hash) + getEmbeddedComputationsList().hashCode();
      }
      if (getArgumentsCount() > 0) {
        hash = (37 * hash) + ARGUMENTS_FIELD_NUMBER;
        hash = (53 * hash) + getArgumentsList().hashCode();
      }
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + getResult().hashCode();
      }
      hash = (37 * hash) + EXECUTION_PLATFORM_FIELD_NUMBER;
      hash = (53 * hash) + getExecutionPlatform().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static xla.Session.SessionModule parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.Session.SessionModule parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.Session.SessionModule parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static xla.Session.SessionModule parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static xla.Session.SessionModule parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.Session.SessionModule parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.Session.SessionModule parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static xla.Session.SessionModule parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static xla.Session.SessionModule parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static xla.Session.SessionModule parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(xla.Session.SessionModule prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Describes a group of SessionComputations with an "entry point" computation
     * that may refer to the other non-entry (AKA embedded) computations.
     * This message is used to serialize a computation that has been built via the
     * XLA service API, along with its dependencies, for purposes such as
     * analysis/replay/file-storage.
     * </pre>
     *
     * Protobuf type {@code xla.SessionModule}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:xla.SessionModule)
        xla.Session.SessionModuleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return xla.Session.internal_static_xla_SessionModule_descriptor;
      }

      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return xla.Session.internal_static_xla_SessionModule_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                xla.Session.SessionModule.class, xla.Session.SessionModule.Builder.class);
      }

      // Construct using xla.Session.SessionModule.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEmbeddedComputationsFieldBuilder();
          getArgumentsFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (entryBuilder_ == null) {
          entry_ = null;
        } else {
          entry_ = null;
          entryBuilder_ = null;
        }
        if (embeddedComputationsBuilder_ == null) {
          embeddedComputations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          embeddedComputationsBuilder_.clear();
        }
        if (argumentsBuilder_ == null) {
          arguments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          argumentsBuilder_.clear();
        }
        if (resultBuilder_ == null) {
          result_ = null;
        } else {
          result_ = null;
          resultBuilder_ = null;
        }
        executionPlatform_ = "";

        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return xla.Session.internal_static_xla_SessionModule_descriptor;
      }

      public xla.Session.SessionModule getDefaultInstanceForType() {
        return xla.Session.SessionModule.getDefaultInstance();
      }

      public xla.Session.SessionModule build() {
        xla.Session.SessionModule result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public xla.Session.SessionModule buildPartial() {
        xla.Session.SessionModule result = new xla.Session.SessionModule(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (entryBuilder_ == null) {
          result.entry_ = entry_;
        } else {
          result.entry_ = entryBuilder_.build();
        }
        if (embeddedComputationsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            embeddedComputations_ = java.util.Collections.unmodifiableList(embeddedComputations_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.embeddedComputations_ = embeddedComputations_;
        } else {
          result.embeddedComputations_ = embeddedComputationsBuilder_.build();
        }
        if (argumentsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            arguments_ = java.util.Collections.unmodifiableList(arguments_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.arguments_ = arguments_;
        } else {
          result.arguments_ = argumentsBuilder_.build();
        }
        if (resultBuilder_ == null) {
          result.result_ = result_;
        } else {
          result.result_ = resultBuilder_.build();
        }
        result.executionPlatform_ = executionPlatform_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof xla.Session.SessionModule) {
          return mergeFrom((xla.Session.SessionModule)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(xla.Session.SessionModule other) {
        if (other == xla.Session.SessionModule.getDefaultInstance()) return this;
        if (other.hasEntry()) {
          mergeEntry(other.getEntry());
        }
        if (embeddedComputationsBuilder_ == null) {
          if (!other.embeddedComputations_.isEmpty()) {
            if (embeddedComputations_.isEmpty()) {
              embeddedComputations_ = other.embeddedComputations_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEmbeddedComputationsIsMutable();
              embeddedComputations_.addAll(other.embeddedComputations_);
            }
            onChanged();
          }
        } else {
          if (!other.embeddedComputations_.isEmpty()) {
            if (embeddedComputationsBuilder_.isEmpty()) {
              embeddedComputationsBuilder_.dispose();
              embeddedComputationsBuilder_ = null;
              embeddedComputations_ = other.embeddedComputations_;
              bitField0_ = (bitField0_ & ~0x00000002);
              embeddedComputationsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEmbeddedComputationsFieldBuilder() : null;
            } else {
              embeddedComputationsBuilder_.addAllMessages(other.embeddedComputations_);
            }
          }
        }
        if (argumentsBuilder_ == null) {
          if (!other.arguments_.isEmpty()) {
            if (arguments_.isEmpty()) {
              arguments_ = other.arguments_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureArgumentsIsMutable();
              arguments_.addAll(other.arguments_);
            }
            onChanged();
          }
        } else {
          if (!other.arguments_.isEmpty()) {
            if (argumentsBuilder_.isEmpty()) {
              argumentsBuilder_.dispose();
              argumentsBuilder_ = null;
              arguments_ = other.arguments_;
              bitField0_ = (bitField0_ & ~0x00000004);
              argumentsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getArgumentsFieldBuilder() : null;
            } else {
              argumentsBuilder_.addAllMessages(other.arguments_);
            }
          }
        }
        if (other.hasResult()) {
          mergeResult(other.getResult());
        }
        if (!other.getExecutionPlatform().isEmpty()) {
          executionPlatform_ = other.executionPlatform_;
          onChanged();
        }
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        xla.Session.SessionModule parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (xla.Session.SessionModule) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private xla.Session.SessionComputation entry_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.Session.SessionComputation, xla.Session.SessionComputation.Builder, xla.Session.SessionComputationOrBuilder> entryBuilder_;
      /**
       * <pre>
       * The entry computation, which was requested for serialization. This may have
       * referred to embedded computations, which are reflected below.
       * </pre>
       *
       * <code>.xla.SessionComputation entry = 1;</code>
       */
      public boolean hasEntry() {
        return entryBuilder_ != null || entry_ != null;
      }
      /**
       * <pre>
       * The entry computation, which was requested for serialization. This may have
       * referred to embedded computations, which are reflected below.
       * </pre>
       *
       * <code>.xla.SessionComputation entry = 1;</code>
       */
      public xla.Session.SessionComputation getEntry() {
        if (entryBuilder_ == null) {
          return entry_ == null ? xla.Session.SessionComputation.getDefaultInstance() : entry_;
        } else {
          return entryBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The entry computation, which was requested for serialization. This may have
       * referred to embedded computations, which are reflected below.
       * </pre>
       *
       * <code>.xla.SessionComputation entry = 1;</code>
       */
      public Builder setEntry(xla.Session.SessionComputation value) {
        if (entryBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          entry_ = value;
          onChanged();
        } else {
          entryBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The entry computation, which was requested for serialization. This may have
       * referred to embedded computations, which are reflected below.
       * </pre>
       *
       * <code>.xla.SessionComputation entry = 1;</code>
       */
      public Builder setEntry(
          xla.Session.SessionComputation.Builder builderForValue) {
        if (entryBuilder_ == null) {
          entry_ = builderForValue.build();
          onChanged();
        } else {
          entryBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The entry computation, which was requested for serialization. This may have
       * referred to embedded computations, which are reflected below.
       * </pre>
       *
       * <code>.xla.SessionComputation entry = 1;</code>
       */
      public Builder mergeEntry(xla.Session.SessionComputation value) {
        if (entryBuilder_ == null) {
          if (entry_ != null) {
            entry_ =
              xla.Session.SessionComputation.newBuilder(entry_).mergeFrom(value).buildPartial();
          } else {
            entry_ = value;
          }
          onChanged();
        } else {
          entryBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The entry computation, which was requested for serialization. This may have
       * referred to embedded computations, which are reflected below.
       * </pre>
       *
       * <code>.xla.SessionComputation entry = 1;</code>
       */
      public Builder clearEntry() {
        if (entryBuilder_ == null) {
          entry_ = null;
          onChanged();
        } else {
          entry_ = null;
          entryBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The entry computation, which was requested for serialization. This may have
       * referred to embedded computations, which are reflected below.
       * </pre>
       *
       * <code>.xla.SessionComputation entry = 1;</code>
       */
      public xla.Session.SessionComputation.Builder getEntryBuilder() {
        
        onChanged();
        return getEntryFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The entry computation, which was requested for serialization. This may have
       * referred to embedded computations, which are reflected below.
       * </pre>
       *
       * <code>.xla.SessionComputation entry = 1;</code>
       */
      public xla.Session.SessionComputationOrBuilder getEntryOrBuilder() {
        if (entryBuilder_ != null) {
          return entryBuilder_.getMessageOrBuilder();
        } else {
          return entry_ == null ?
              xla.Session.SessionComputation.getDefaultInstance() : entry_;
        }
      }
      /**
       * <pre>
       * The entry computation, which was requested for serialization. This may have
       * referred to embedded computations, which are reflected below.
       * </pre>
       *
       * <code>.xla.SessionComputation entry = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.Session.SessionComputation, xla.Session.SessionComputation.Builder, xla.Session.SessionComputationOrBuilder> 
          getEntryFieldBuilder() {
        if (entryBuilder_ == null) {
          entryBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.Session.SessionComputation, xla.Session.SessionComputation.Builder, xla.Session.SessionComputationOrBuilder>(
                  getEntry(),
                  getParentForChildren(),
                  isClean());
          entry_ = null;
        }
        return entryBuilder_;
      }

      private java.util.List<xla.Session.SessionComputation> embeddedComputations_ =
        java.util.Collections.emptyList();
      private void ensureEmbeddedComputationsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          embeddedComputations_ = new java.util.ArrayList<xla.Session.SessionComputation>(embeddedComputations_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.Session.SessionComputation, xla.Session.SessionComputation.Builder, xla.Session.SessionComputationOrBuilder> embeddedComputationsBuilder_;

      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public java.util.List<xla.Session.SessionComputation> getEmbeddedComputationsList() {
        if (embeddedComputationsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(embeddedComputations_);
        } else {
          return embeddedComputationsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public int getEmbeddedComputationsCount() {
        if (embeddedComputationsBuilder_ == null) {
          return embeddedComputations_.size();
        } else {
          return embeddedComputationsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public xla.Session.SessionComputation getEmbeddedComputations(int index) {
        if (embeddedComputationsBuilder_ == null) {
          return embeddedComputations_.get(index);
        } else {
          return embeddedComputationsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public Builder setEmbeddedComputations(
          int index, xla.Session.SessionComputation value) {
        if (embeddedComputationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEmbeddedComputationsIsMutable();
          embeddedComputations_.set(index, value);
          onChanged();
        } else {
          embeddedComputationsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public Builder setEmbeddedComputations(
          int index, xla.Session.SessionComputation.Builder builderForValue) {
        if (embeddedComputationsBuilder_ == null) {
          ensureEmbeddedComputationsIsMutable();
          embeddedComputations_.set(index, builderForValue.build());
          onChanged();
        } else {
          embeddedComputationsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public Builder addEmbeddedComputations(xla.Session.SessionComputation value) {
        if (embeddedComputationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEmbeddedComputationsIsMutable();
          embeddedComputations_.add(value);
          onChanged();
        } else {
          embeddedComputationsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public Builder addEmbeddedComputations(
          int index, xla.Session.SessionComputation value) {
        if (embeddedComputationsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEmbeddedComputationsIsMutable();
          embeddedComputations_.add(index, value);
          onChanged();
        } else {
          embeddedComputationsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public Builder addEmbeddedComputations(
          xla.Session.SessionComputation.Builder builderForValue) {
        if (embeddedComputationsBuilder_ == null) {
          ensureEmbeddedComputationsIsMutable();
          embeddedComputations_.add(builderForValue.build());
          onChanged();
        } else {
          embeddedComputationsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public Builder addEmbeddedComputations(
          int index, xla.Session.SessionComputation.Builder builderForValue) {
        if (embeddedComputationsBuilder_ == null) {
          ensureEmbeddedComputationsIsMutable();
          embeddedComputations_.add(index, builderForValue.build());
          onChanged();
        } else {
          embeddedComputationsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public Builder addAllEmbeddedComputations(
          java.lang.Iterable<? extends xla.Session.SessionComputation> values) {
        if (embeddedComputationsBuilder_ == null) {
          ensureEmbeddedComputationsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, embeddedComputations_);
          onChanged();
        } else {
          embeddedComputationsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public Builder clearEmbeddedComputations() {
        if (embeddedComputationsBuilder_ == null) {
          embeddedComputations_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          embeddedComputationsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public Builder removeEmbeddedComputations(int index) {
        if (embeddedComputationsBuilder_ == null) {
          ensureEmbeddedComputationsIsMutable();
          embeddedComputations_.remove(index);
          onChanged();
        } else {
          embeddedComputationsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public xla.Session.SessionComputation.Builder getEmbeddedComputationsBuilder(
          int index) {
        return getEmbeddedComputationsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public xla.Session.SessionComputationOrBuilder getEmbeddedComputationsOrBuilder(
          int index) {
        if (embeddedComputationsBuilder_ == null) {
          return embeddedComputations_.get(index);  } else {
          return embeddedComputationsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public java.util.List<? extends xla.Session.SessionComputationOrBuilder> 
           getEmbeddedComputationsOrBuilderList() {
        if (embeddedComputationsBuilder_ != null) {
          return embeddedComputationsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(embeddedComputations_);
        }
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public xla.Session.SessionComputation.Builder addEmbeddedComputationsBuilder() {
        return getEmbeddedComputationsFieldBuilder().addBuilder(
            xla.Session.SessionComputation.getDefaultInstance());
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public xla.Session.SessionComputation.Builder addEmbeddedComputationsBuilder(
          int index) {
        return getEmbeddedComputationsFieldBuilder().addBuilder(
            index, xla.Session.SessionComputation.getDefaultInstance());
      }
      /**
       * <pre>
       * Embedded computations that are transitively referred to by the entry
       * computation.
       * </pre>
       *
       * <code>repeated .xla.SessionComputation embedded_computations = 2;</code>
       */
      public java.util.List<xla.Session.SessionComputation.Builder> 
           getEmbeddedComputationsBuilderList() {
        return getEmbeddedComputationsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.Session.SessionComputation, xla.Session.SessionComputation.Builder, xla.Session.SessionComputationOrBuilder> 
          getEmbeddedComputationsFieldBuilder() {
        if (embeddedComputationsBuilder_ == null) {
          embeddedComputationsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.Session.SessionComputation, xla.Session.SessionComputation.Builder, xla.Session.SessionComputationOrBuilder>(
                  embeddedComputations_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          embeddedComputations_ = null;
        }
        return embeddedComputationsBuilder_;
      }

      private java.util.List<xla.XlaData.LiteralProto> arguments_ =
        java.util.Collections.emptyList();
      private void ensureArgumentsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          arguments_ = new java.util.ArrayList<xla.XlaData.LiteralProto>(arguments_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.LiteralProto, xla.XlaData.LiteralProto.Builder, xla.XlaData.LiteralProtoOrBuilder> argumentsBuilder_;

      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public java.util.List<xla.XlaData.LiteralProto> getArgumentsList() {
        if (argumentsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(arguments_);
        } else {
          return argumentsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public int getArgumentsCount() {
        if (argumentsBuilder_ == null) {
          return arguments_.size();
        } else {
          return argumentsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public xla.XlaData.LiteralProto getArguments(int index) {
        if (argumentsBuilder_ == null) {
          return arguments_.get(index);
        } else {
          return argumentsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public Builder setArguments(
          int index, xla.XlaData.LiteralProto value) {
        if (argumentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgumentsIsMutable();
          arguments_.set(index, value);
          onChanged();
        } else {
          argumentsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public Builder setArguments(
          int index, xla.XlaData.LiteralProto.Builder builderForValue) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          arguments_.set(index, builderForValue.build());
          onChanged();
        } else {
          argumentsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public Builder addArguments(xla.XlaData.LiteralProto value) {
        if (argumentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgumentsIsMutable();
          arguments_.add(value);
          onChanged();
        } else {
          argumentsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public Builder addArguments(
          int index, xla.XlaData.LiteralProto value) {
        if (argumentsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgumentsIsMutable();
          arguments_.add(index, value);
          onChanged();
        } else {
          argumentsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public Builder addArguments(
          xla.XlaData.LiteralProto.Builder builderForValue) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          arguments_.add(builderForValue.build());
          onChanged();
        } else {
          argumentsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public Builder addArguments(
          int index, xla.XlaData.LiteralProto.Builder builderForValue) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          arguments_.add(index, builderForValue.build());
          onChanged();
        } else {
          argumentsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public Builder addAllArguments(
          java.lang.Iterable<? extends xla.XlaData.LiteralProto> values) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, arguments_);
          onChanged();
        } else {
          argumentsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public Builder clearArguments() {
        if (argumentsBuilder_ == null) {
          arguments_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          argumentsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public Builder removeArguments(int index) {
        if (argumentsBuilder_ == null) {
          ensureArgumentsIsMutable();
          arguments_.remove(index);
          onChanged();
        } else {
          argumentsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public xla.XlaData.LiteralProto.Builder getArgumentsBuilder(
          int index) {
        return getArgumentsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public xla.XlaData.LiteralProtoOrBuilder getArgumentsOrBuilder(
          int index) {
        if (argumentsBuilder_ == null) {
          return arguments_.get(index);  } else {
          return argumentsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public java.util.List<? extends xla.XlaData.LiteralProtoOrBuilder> 
           getArgumentsOrBuilderList() {
        if (argumentsBuilder_ != null) {
          return argumentsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(arguments_);
        }
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public xla.XlaData.LiteralProto.Builder addArgumentsBuilder() {
        return getArgumentsFieldBuilder().addBuilder(
            xla.XlaData.LiteralProto.getDefaultInstance());
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public xla.XlaData.LiteralProto.Builder addArgumentsBuilder(
          int index) {
        return getArgumentsFieldBuilder().addBuilder(
            index, xla.XlaData.LiteralProto.getDefaultInstance());
      }
      /**
       * <pre>
       * The arguments passed to the computation.
       * </pre>
       *
       * <code>repeated .xla.LiteralProto arguments = 3;</code>
       */
      public java.util.List<xla.XlaData.LiteralProto.Builder> 
           getArgumentsBuilderList() {
        return getArgumentsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          xla.XlaData.LiteralProto, xla.XlaData.LiteralProto.Builder, xla.XlaData.LiteralProtoOrBuilder> 
          getArgumentsFieldBuilder() {
        if (argumentsBuilder_ == null) {
          argumentsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              xla.XlaData.LiteralProto, xla.XlaData.LiteralProto.Builder, xla.XlaData.LiteralProtoOrBuilder>(
                  arguments_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          arguments_ = null;
        }
        return argumentsBuilder_;
      }

      private xla.XlaData.LiteralProto result_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.LiteralProto, xla.XlaData.LiteralProto.Builder, xla.XlaData.LiteralProtoOrBuilder> resultBuilder_;
      /**
       * <pre>
       * The result of the computation.
       * </pre>
       *
       * <code>.xla.LiteralProto result = 4;</code>
       */
      public boolean hasResult() {
        return resultBuilder_ != null || result_ != null;
      }
      /**
       * <pre>
       * The result of the computation.
       * </pre>
       *
       * <code>.xla.LiteralProto result = 4;</code>
       */
      public xla.XlaData.LiteralProto getResult() {
        if (resultBuilder_ == null) {
          return result_ == null ? xla.XlaData.LiteralProto.getDefaultInstance() : result_;
        } else {
          return resultBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * The result of the computation.
       * </pre>
       *
       * <code>.xla.LiteralProto result = 4;</code>
       */
      public Builder setResult(xla.XlaData.LiteralProto value) {
        if (resultBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          result_ = value;
          onChanged();
        } else {
          resultBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * The result of the computation.
       * </pre>
       *
       * <code>.xla.LiteralProto result = 4;</code>
       */
      public Builder setResult(
          xla.XlaData.LiteralProto.Builder builderForValue) {
        if (resultBuilder_ == null) {
          result_ = builderForValue.build();
          onChanged();
        } else {
          resultBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * The result of the computation.
       * </pre>
       *
       * <code>.xla.LiteralProto result = 4;</code>
       */
      public Builder mergeResult(xla.XlaData.LiteralProto value) {
        if (resultBuilder_ == null) {
          if (result_ != null) {
            result_ =
              xla.XlaData.LiteralProto.newBuilder(result_).mergeFrom(value).buildPartial();
          } else {
            result_ = value;
          }
          onChanged();
        } else {
          resultBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * The result of the computation.
       * </pre>
       *
       * <code>.xla.LiteralProto result = 4;</code>
       */
      public Builder clearResult() {
        if (resultBuilder_ == null) {
          result_ = null;
          onChanged();
        } else {
          result_ = null;
          resultBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * The result of the computation.
       * </pre>
       *
       * <code>.xla.LiteralProto result = 4;</code>
       */
      public xla.XlaData.LiteralProto.Builder getResultBuilder() {
        
        onChanged();
        return getResultFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * The result of the computation.
       * </pre>
       *
       * <code>.xla.LiteralProto result = 4;</code>
       */
      public xla.XlaData.LiteralProtoOrBuilder getResultOrBuilder() {
        if (resultBuilder_ != null) {
          return resultBuilder_.getMessageOrBuilder();
        } else {
          return result_ == null ?
              xla.XlaData.LiteralProto.getDefaultInstance() : result_;
        }
      }
      /**
       * <pre>
       * The result of the computation.
       * </pre>
       *
       * <code>.xla.LiteralProto result = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          xla.XlaData.LiteralProto, xla.XlaData.LiteralProto.Builder, xla.XlaData.LiteralProtoOrBuilder> 
          getResultFieldBuilder() {
        if (resultBuilder_ == null) {
          resultBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              xla.XlaData.LiteralProto, xla.XlaData.LiteralProto.Builder, xla.XlaData.LiteralProtoOrBuilder>(
                  getResult(),
                  getParentForChildren(),
                  isClean());
          result_ = null;
        }
        return resultBuilder_;
      }

      private java.lang.Object executionPlatform_ = "";
      /**
       * <pre>
       * The name of the platform used to run the computation.
       * </pre>
       *
       * <code>string execution_platform = 5;</code>
       */
      public java.lang.String getExecutionPlatform() {
        java.lang.Object ref = executionPlatform_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          executionPlatform_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The name of the platform used to run the computation.
       * </pre>
       *
       * <code>string execution_platform = 5;</code>
       */
      public com.google.protobuf.ByteString
          getExecutionPlatformBytes() {
        java.lang.Object ref = executionPlatform_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          executionPlatform_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The name of the platform used to run the computation.
       * </pre>
       *
       * <code>string execution_platform = 5;</code>
       */
      public Builder setExecutionPlatform(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        executionPlatform_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the platform used to run the computation.
       * </pre>
       *
       * <code>string execution_platform = 5;</code>
       */
      public Builder clearExecutionPlatform() {
        
        executionPlatform_ = getDefaultInstance().getExecutionPlatform();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The name of the platform used to run the computation.
       * </pre>
       *
       * <code>string execution_platform = 5;</code>
       */
      public Builder setExecutionPlatformBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        executionPlatform_ = value;
        onChanged();
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:xla.SessionModule)
    }

    // @@protoc_insertion_point(class_scope:xla.SessionModule)
    private static final xla.Session.SessionModule DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new xla.Session.SessionModule();
    }

    public static xla.Session.SessionModule getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SessionModule>
        PARSER = new com.google.protobuf.AbstractParser<SessionModule>() {
      public SessionModule parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new SessionModule(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SessionModule> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SessionModule> getParserForType() {
      return PARSER;
    }

    public xla.Session.SessionModule getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_OperationRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_OperationRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_SessionComputation_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_SessionComputation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_SessionComputation_RequestsEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_SessionComputation_RequestsEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_xla_SessionModule_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_xla_SessionModule_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n-tensorflow/compiler/xla/service/sessio" +
      "n.proto\022\003xla\032&tensorflow/compiler/xla/xl" +
      "a_data.proto\"\257\001\n\020OperationRequest\0221\n\rout" +
      "put_handle\030\001 \001(\0132\032.xla.ComputationDataHa" +
      "ndle\022 \n\014output_shape\030\002 \001(\0132\n.xla.Shape\022%" +
      "\n\035embedded_computation_versions\030\003 \003(\003\022\037\n" +
      "\007request\030\004 \001(\0132\016.xla.OpRequest\"\327\001\n\022Sessi" +
      "onComputation\022\014\n\004name\030\001 \001(\t\0222\n\022computati" +
      "on_handle\030\002 \001(\0132\026.xla.ComputationHandle\022" +
      "7\n\010requests\030\003 \003(\0132%.xla.SessionComputati",
      "on.RequestsEntry\032F\n\rRequestsEntry\022\013\n\003key" +
      "\030\001 \001(\003\022$\n\005value\030\002 \001(\0132\025.xla.OperationReq" +
      "uest:\0028\001\"\324\001\n\rSessionModule\022&\n\005entry\030\001 \001(" +
      "\0132\027.xla.SessionComputation\0226\n\025embedded_c" +
      "omputations\030\002 \003(\0132\027.xla.SessionComputati" +
      "on\022$\n\targuments\030\003 \003(\0132\021.xla.LiteralProto" +
      "\022!\n\006result\030\004 \001(\0132\021.xla.LiteralProto\022\032\n\022e" +
      "xecution_platform\030\005 \001(\tb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          xla.XlaData.getDescriptor(),
        }, assigner);
    internal_static_xla_OperationRequest_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_xla_OperationRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_OperationRequest_descriptor,
        new java.lang.String[] { "OutputHandle", "OutputShape", "EmbeddedComputationVersions", "Request", });
    internal_static_xla_SessionComputation_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_xla_SessionComputation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_SessionComputation_descriptor,
        new java.lang.String[] { "Name", "ComputationHandle", "Requests", });
    internal_static_xla_SessionComputation_RequestsEntry_descriptor =
      internal_static_xla_SessionComputation_descriptor.getNestedTypes().get(0);
    internal_static_xla_SessionComputation_RequestsEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_SessionComputation_RequestsEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_xla_SessionModule_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_xla_SessionModule_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_xla_SessionModule_descriptor,
        new java.lang.String[] { "Entry", "EmbeddedComputations", "Arguments", "Result", "ExecutionPlatform", });
    xla.XlaData.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
