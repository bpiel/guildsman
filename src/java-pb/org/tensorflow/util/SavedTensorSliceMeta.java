// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/util/saved_tensor_slice.proto

package org.tensorflow.util;

/**
 * <pre>
 * Metadata describing the set of tensor slices saved in a checkpoint file.
 * It is always stored at the beginning of each checkpoint file.
 * </pre>
 *
 * Protobuf type {@code tensorflow.SavedTensorSliceMeta}
 */
public  final class SavedTensorSliceMeta extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.SavedTensorSliceMeta)
    SavedTensorSliceMetaOrBuilder {
  // Use SavedTensorSliceMeta.newBuilder() to construct.
  private SavedTensorSliceMeta(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SavedTensorSliceMeta() {
    tensor_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private SavedTensorSliceMeta(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              tensor_ = new java.util.ArrayList<org.tensorflow.util.SavedSliceMeta>();
              mutable_bitField0_ |= 0x00000001;
            }
            tensor_.add(
                input.readMessage(org.tensorflow.util.SavedSliceMeta.parser(), extensionRegistry));
            break;
          }
          case 18: {
            org.tensorflow.framework.VersionDef.Builder subBuilder = null;
            if (versions_ != null) {
              subBuilder = versions_.toBuilder();
            }
            versions_ = input.readMessage(org.tensorflow.framework.VersionDef.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(versions_);
              versions_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        tensor_ = java.util.Collections.unmodifiableList(tensor_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.util.SavedTensorSliceProtos.internal_static_tensorflow_SavedTensorSliceMeta_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.util.SavedTensorSliceProtos.internal_static_tensorflow_SavedTensorSliceMeta_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.util.SavedTensorSliceMeta.class, org.tensorflow.util.SavedTensorSliceMeta.Builder.class);
  }

  private int bitField0_;
  public static final int TENSOR_FIELD_NUMBER = 1;
  private java.util.List<org.tensorflow.util.SavedSliceMeta> tensor_;
  /**
   * <pre>
   * Each SavedSliceMeta describes the slices for one tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
   */
  public java.util.List<org.tensorflow.util.SavedSliceMeta> getTensorList() {
    return tensor_;
  }
  /**
   * <pre>
   * Each SavedSliceMeta describes the slices for one tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
   */
  public java.util.List<? extends org.tensorflow.util.SavedSliceMetaOrBuilder> 
      getTensorOrBuilderList() {
    return tensor_;
  }
  /**
   * <pre>
   * Each SavedSliceMeta describes the slices for one tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
   */
  public int getTensorCount() {
    return tensor_.size();
  }
  /**
   * <pre>
   * Each SavedSliceMeta describes the slices for one tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
   */
  public org.tensorflow.util.SavedSliceMeta getTensor(int index) {
    return tensor_.get(index);
  }
  /**
   * <pre>
   * Each SavedSliceMeta describes the slices for one tensor.
   * </pre>
   *
   * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
   */
  public org.tensorflow.util.SavedSliceMetaOrBuilder getTensorOrBuilder(
      int index) {
    return tensor_.get(index);
  }

  public static final int VERSIONS_FIELD_NUMBER = 2;
  private org.tensorflow.framework.VersionDef versions_;
  /**
   * <pre>
   * Compatibility version of this checkpoint.  See core/public/version.h
   * for version history.
   * </pre>
   *
   * <code>.tensorflow.VersionDef versions = 2;</code>
   */
  public boolean hasVersions() {
    return versions_ != null;
  }
  /**
   * <pre>
   * Compatibility version of this checkpoint.  See core/public/version.h
   * for version history.
   * </pre>
   *
   * <code>.tensorflow.VersionDef versions = 2;</code>
   */
  public org.tensorflow.framework.VersionDef getVersions() {
    return versions_ == null ? org.tensorflow.framework.VersionDef.getDefaultInstance() : versions_;
  }
  /**
   * <pre>
   * Compatibility version of this checkpoint.  See core/public/version.h
   * for version history.
   * </pre>
   *
   * <code>.tensorflow.VersionDef versions = 2;</code>
   */
  public org.tensorflow.framework.VersionDefOrBuilder getVersionsOrBuilder() {
    return getVersions();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < tensor_.size(); i++) {
      output.writeMessage(1, tensor_.get(i));
    }
    if (versions_ != null) {
      output.writeMessage(2, getVersions());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < tensor_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, tensor_.get(i));
    }
    if (versions_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getVersions());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.util.SavedTensorSliceMeta)) {
      return super.equals(obj);
    }
    org.tensorflow.util.SavedTensorSliceMeta other = (org.tensorflow.util.SavedTensorSliceMeta) obj;

    boolean result = true;
    result = result && getTensorList()
        .equals(other.getTensorList());
    result = result && (hasVersions() == other.hasVersions());
    if (hasVersions()) {
      result = result && getVersions()
          .equals(other.getVersions());
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getTensorCount() > 0) {
      hash = (37 * hash) + TENSOR_FIELD_NUMBER;
      hash = (53 * hash) + getTensorList().hashCode();
    }
    if (hasVersions()) {
      hash = (37 * hash) + VERSIONS_FIELD_NUMBER;
      hash = (53 * hash) + getVersions().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.util.SavedTensorSliceMeta parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.util.SavedTensorSliceMeta parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.util.SavedTensorSliceMeta parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.util.SavedTensorSliceMeta parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.util.SavedTensorSliceMeta parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.util.SavedTensorSliceMeta parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.util.SavedTensorSliceMeta parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.util.SavedTensorSliceMeta parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.util.SavedTensorSliceMeta parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.util.SavedTensorSliceMeta parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.util.SavedTensorSliceMeta prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Metadata describing the set of tensor slices saved in a checkpoint file.
   * It is always stored at the beginning of each checkpoint file.
   * </pre>
   *
   * Protobuf type {@code tensorflow.SavedTensorSliceMeta}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.SavedTensorSliceMeta)
      org.tensorflow.util.SavedTensorSliceMetaOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.util.SavedTensorSliceProtos.internal_static_tensorflow_SavedTensorSliceMeta_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.util.SavedTensorSliceProtos.internal_static_tensorflow_SavedTensorSliceMeta_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.util.SavedTensorSliceMeta.class, org.tensorflow.util.SavedTensorSliceMeta.Builder.class);
    }

    // Construct using org.tensorflow.util.SavedTensorSliceMeta.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTensorFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      if (tensorBuilder_ == null) {
        tensor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        tensorBuilder_.clear();
      }
      if (versionsBuilder_ == null) {
        versions_ = null;
      } else {
        versions_ = null;
        versionsBuilder_ = null;
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.util.SavedTensorSliceProtos.internal_static_tensorflow_SavedTensorSliceMeta_descriptor;
    }

    public org.tensorflow.util.SavedTensorSliceMeta getDefaultInstanceForType() {
      return org.tensorflow.util.SavedTensorSliceMeta.getDefaultInstance();
    }

    public org.tensorflow.util.SavedTensorSliceMeta build() {
      org.tensorflow.util.SavedTensorSliceMeta result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.tensorflow.util.SavedTensorSliceMeta buildPartial() {
      org.tensorflow.util.SavedTensorSliceMeta result = new org.tensorflow.util.SavedTensorSliceMeta(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (tensorBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tensor_ = java.util.Collections.unmodifiableList(tensor_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tensor_ = tensor_;
      } else {
        result.tensor_ = tensorBuilder_.build();
      }
      if (versionsBuilder_ == null) {
        result.versions_ = versions_;
      } else {
        result.versions_ = versionsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.util.SavedTensorSliceMeta) {
        return mergeFrom((org.tensorflow.util.SavedTensorSliceMeta)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.util.SavedTensorSliceMeta other) {
      if (other == org.tensorflow.util.SavedTensorSliceMeta.getDefaultInstance()) return this;
      if (tensorBuilder_ == null) {
        if (!other.tensor_.isEmpty()) {
          if (tensor_.isEmpty()) {
            tensor_ = other.tensor_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTensorIsMutable();
            tensor_.addAll(other.tensor_);
          }
          onChanged();
        }
      } else {
        if (!other.tensor_.isEmpty()) {
          if (tensorBuilder_.isEmpty()) {
            tensorBuilder_.dispose();
            tensorBuilder_ = null;
            tensor_ = other.tensor_;
            bitField0_ = (bitField0_ & ~0x00000001);
            tensorBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTensorFieldBuilder() : null;
          } else {
            tensorBuilder_.addAllMessages(other.tensor_);
          }
        }
      }
      if (other.hasVersions()) {
        mergeVersions(other.getVersions());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.util.SavedTensorSliceMeta parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.util.SavedTensorSliceMeta) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<org.tensorflow.util.SavedSliceMeta> tensor_ =
      java.util.Collections.emptyList();
    private void ensureTensorIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        tensor_ = new java.util.ArrayList<org.tensorflow.util.SavedSliceMeta>(tensor_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.util.SavedSliceMeta, org.tensorflow.util.SavedSliceMeta.Builder, org.tensorflow.util.SavedSliceMetaOrBuilder> tensorBuilder_;

    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public java.util.List<org.tensorflow.util.SavedSliceMeta> getTensorList() {
      if (tensorBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tensor_);
      } else {
        return tensorBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public int getTensorCount() {
      if (tensorBuilder_ == null) {
        return tensor_.size();
      } else {
        return tensorBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public org.tensorflow.util.SavedSliceMeta getTensor(int index) {
      if (tensorBuilder_ == null) {
        return tensor_.get(index);
      } else {
        return tensorBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public Builder setTensor(
        int index, org.tensorflow.util.SavedSliceMeta value) {
      if (tensorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTensorIsMutable();
        tensor_.set(index, value);
        onChanged();
      } else {
        tensorBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public Builder setTensor(
        int index, org.tensorflow.util.SavedSliceMeta.Builder builderForValue) {
      if (tensorBuilder_ == null) {
        ensureTensorIsMutable();
        tensor_.set(index, builderForValue.build());
        onChanged();
      } else {
        tensorBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public Builder addTensor(org.tensorflow.util.SavedSliceMeta value) {
      if (tensorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTensorIsMutable();
        tensor_.add(value);
        onChanged();
      } else {
        tensorBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public Builder addTensor(
        int index, org.tensorflow.util.SavedSliceMeta value) {
      if (tensorBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTensorIsMutable();
        tensor_.add(index, value);
        onChanged();
      } else {
        tensorBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public Builder addTensor(
        org.tensorflow.util.SavedSliceMeta.Builder builderForValue) {
      if (tensorBuilder_ == null) {
        ensureTensorIsMutable();
        tensor_.add(builderForValue.build());
        onChanged();
      } else {
        tensorBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public Builder addTensor(
        int index, org.tensorflow.util.SavedSliceMeta.Builder builderForValue) {
      if (tensorBuilder_ == null) {
        ensureTensorIsMutable();
        tensor_.add(index, builderForValue.build());
        onChanged();
      } else {
        tensorBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public Builder addAllTensor(
        java.lang.Iterable<? extends org.tensorflow.util.SavedSliceMeta> values) {
      if (tensorBuilder_ == null) {
        ensureTensorIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tensor_);
        onChanged();
      } else {
        tensorBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public Builder clearTensor() {
      if (tensorBuilder_ == null) {
        tensor_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        tensorBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public Builder removeTensor(int index) {
      if (tensorBuilder_ == null) {
        ensureTensorIsMutable();
        tensor_.remove(index);
        onChanged();
      } else {
        tensorBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public org.tensorflow.util.SavedSliceMeta.Builder getTensorBuilder(
        int index) {
      return getTensorFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public org.tensorflow.util.SavedSliceMetaOrBuilder getTensorOrBuilder(
        int index) {
      if (tensorBuilder_ == null) {
        return tensor_.get(index);  } else {
        return tensorBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public java.util.List<? extends org.tensorflow.util.SavedSliceMetaOrBuilder> 
         getTensorOrBuilderList() {
      if (tensorBuilder_ != null) {
        return tensorBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tensor_);
      }
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public org.tensorflow.util.SavedSliceMeta.Builder addTensorBuilder() {
      return getTensorFieldBuilder().addBuilder(
          org.tensorflow.util.SavedSliceMeta.getDefaultInstance());
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public org.tensorflow.util.SavedSliceMeta.Builder addTensorBuilder(
        int index) {
      return getTensorFieldBuilder().addBuilder(
          index, org.tensorflow.util.SavedSliceMeta.getDefaultInstance());
    }
    /**
     * <pre>
     * Each SavedSliceMeta describes the slices for one tensor.
     * </pre>
     *
     * <code>repeated .tensorflow.SavedSliceMeta tensor = 1;</code>
     */
    public java.util.List<org.tensorflow.util.SavedSliceMeta.Builder> 
         getTensorBuilderList() {
      return getTensorFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        org.tensorflow.util.SavedSliceMeta, org.tensorflow.util.SavedSliceMeta.Builder, org.tensorflow.util.SavedSliceMetaOrBuilder> 
        getTensorFieldBuilder() {
      if (tensorBuilder_ == null) {
        tensorBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            org.tensorflow.util.SavedSliceMeta, org.tensorflow.util.SavedSliceMeta.Builder, org.tensorflow.util.SavedSliceMetaOrBuilder>(
                tensor_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        tensor_ = null;
      }
      return tensorBuilder_;
    }

    private org.tensorflow.framework.VersionDef versions_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.framework.VersionDef, org.tensorflow.framework.VersionDef.Builder, org.tensorflow.framework.VersionDefOrBuilder> versionsBuilder_;
    /**
     * <pre>
     * Compatibility version of this checkpoint.  See core/public/version.h
     * for version history.
     * </pre>
     *
     * <code>.tensorflow.VersionDef versions = 2;</code>
     */
    public boolean hasVersions() {
      return versionsBuilder_ != null || versions_ != null;
    }
    /**
     * <pre>
     * Compatibility version of this checkpoint.  See core/public/version.h
     * for version history.
     * </pre>
     *
     * <code>.tensorflow.VersionDef versions = 2;</code>
     */
    public org.tensorflow.framework.VersionDef getVersions() {
      if (versionsBuilder_ == null) {
        return versions_ == null ? org.tensorflow.framework.VersionDef.getDefaultInstance() : versions_;
      } else {
        return versionsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Compatibility version of this checkpoint.  See core/public/version.h
     * for version history.
     * </pre>
     *
     * <code>.tensorflow.VersionDef versions = 2;</code>
     */
    public Builder setVersions(org.tensorflow.framework.VersionDef value) {
      if (versionsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        versions_ = value;
        onChanged();
      } else {
        versionsBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Compatibility version of this checkpoint.  See core/public/version.h
     * for version history.
     * </pre>
     *
     * <code>.tensorflow.VersionDef versions = 2;</code>
     */
    public Builder setVersions(
        org.tensorflow.framework.VersionDef.Builder builderForValue) {
      if (versionsBuilder_ == null) {
        versions_ = builderForValue.build();
        onChanged();
      } else {
        versionsBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Compatibility version of this checkpoint.  See core/public/version.h
     * for version history.
     * </pre>
     *
     * <code>.tensorflow.VersionDef versions = 2;</code>
     */
    public Builder mergeVersions(org.tensorflow.framework.VersionDef value) {
      if (versionsBuilder_ == null) {
        if (versions_ != null) {
          versions_ =
            org.tensorflow.framework.VersionDef.newBuilder(versions_).mergeFrom(value).buildPartial();
        } else {
          versions_ = value;
        }
        onChanged();
      } else {
        versionsBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Compatibility version of this checkpoint.  See core/public/version.h
     * for version history.
     * </pre>
     *
     * <code>.tensorflow.VersionDef versions = 2;</code>
     */
    public Builder clearVersions() {
      if (versionsBuilder_ == null) {
        versions_ = null;
        onChanged();
      } else {
        versions_ = null;
        versionsBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Compatibility version of this checkpoint.  See core/public/version.h
     * for version history.
     * </pre>
     *
     * <code>.tensorflow.VersionDef versions = 2;</code>
     */
    public org.tensorflow.framework.VersionDef.Builder getVersionsBuilder() {
      
      onChanged();
      return getVersionsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Compatibility version of this checkpoint.  See core/public/version.h
     * for version history.
     * </pre>
     *
     * <code>.tensorflow.VersionDef versions = 2;</code>
     */
    public org.tensorflow.framework.VersionDefOrBuilder getVersionsOrBuilder() {
      if (versionsBuilder_ != null) {
        return versionsBuilder_.getMessageOrBuilder();
      } else {
        return versions_ == null ?
            org.tensorflow.framework.VersionDef.getDefaultInstance() : versions_;
      }
    }
    /**
     * <pre>
     * Compatibility version of this checkpoint.  See core/public/version.h
     * for version history.
     * </pre>
     *
     * <code>.tensorflow.VersionDef versions = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.framework.VersionDef, org.tensorflow.framework.VersionDef.Builder, org.tensorflow.framework.VersionDefOrBuilder> 
        getVersionsFieldBuilder() {
      if (versionsBuilder_ == null) {
        versionsBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.framework.VersionDef, org.tensorflow.framework.VersionDef.Builder, org.tensorflow.framework.VersionDefOrBuilder>(
                getVersions(),
                getParentForChildren(),
                isClean());
        versions_ = null;
      }
      return versionsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.SavedTensorSliceMeta)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.SavedTensorSliceMeta)
  private static final org.tensorflow.util.SavedTensorSliceMeta DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.util.SavedTensorSliceMeta();
  }

  public static org.tensorflow.util.SavedTensorSliceMeta getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SavedTensorSliceMeta>
      PARSER = new com.google.protobuf.AbstractParser<SavedTensorSliceMeta>() {
    public SavedTensorSliceMeta parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new SavedTensorSliceMeta(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SavedTensorSliceMeta> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SavedTensorSliceMeta> getParserForType() {
    return PARSER;
  }

  public org.tensorflow.util.SavedTensorSliceMeta getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

