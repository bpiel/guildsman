// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/kernels/boosted_trees/boosted_trees.proto

package org.tensorflow.framework;

/**
 * <pre>
 * Node describes a node in a tree.
 * </pre>
 *
 * Protobuf type {@code tensorflow.boosted_trees.Node}
 */
public  final class Node extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:tensorflow.boosted_trees.Node)
    NodeOrBuilder {
  // Use Node.newBuilder() to construct.
  private Node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Node() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private Node(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            org.tensorflow.framework.Leaf.Builder subBuilder = null;
            if (nodeCase_ == 1) {
              subBuilder = ((org.tensorflow.framework.Leaf) node_).toBuilder();
            }
            node_ =
                input.readMessage(org.tensorflow.framework.Leaf.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.tensorflow.framework.Leaf) node_);
              node_ = subBuilder.buildPartial();
            }
            nodeCase_ = 1;
            break;
          }
          case 18: {
            org.tensorflow.framework.BucketizedSplit.Builder subBuilder = null;
            if (nodeCase_ == 2) {
              subBuilder = ((org.tensorflow.framework.BucketizedSplit) node_).toBuilder();
            }
            node_ =
                input.readMessage(org.tensorflow.framework.BucketizedSplit.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom((org.tensorflow.framework.BucketizedSplit) node_);
              node_ = subBuilder.buildPartial();
            }
            nodeCase_ = 2;
            break;
          }
          case 6218: {
            org.tensorflow.framework.NodeMetadata.Builder subBuilder = null;
            if (metadata_ != null) {
              subBuilder = metadata_.toBuilder();
            }
            metadata_ = input.readMessage(org.tensorflow.framework.NodeMetadata.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(metadata_);
              metadata_ = subBuilder.buildPartial();
            }

            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return org.tensorflow.framework.BoostedTreesProtos.internal_static_tensorflow_boosted_trees_Node_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return org.tensorflow.framework.BoostedTreesProtos.internal_static_tensorflow_boosted_trees_Node_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            org.tensorflow.framework.Node.class, org.tensorflow.framework.Node.Builder.class);
  }

  private int nodeCase_ = 0;
  private java.lang.Object node_;
  public enum NodeCase
      implements com.google.protobuf.Internal.EnumLite {
    LEAF(1),
    BUCKETIZED_SPLIT(2),
    NODE_NOT_SET(0);
    private final int value;
    private NodeCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static NodeCase valueOf(int value) {
      return forNumber(value);
    }

    public static NodeCase forNumber(int value) {
      switch (value) {
        case 1: return LEAF;
        case 2: return BUCKETIZED_SPLIT;
        case 0: return NODE_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  public NodeCase
  getNodeCase() {
    return NodeCase.forNumber(
        nodeCase_);
  }

  public static final int LEAF_FIELD_NUMBER = 1;
  /**
   * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
   */
  public org.tensorflow.framework.Leaf getLeaf() {
    if (nodeCase_ == 1) {
       return (org.tensorflow.framework.Leaf) node_;
    }
    return org.tensorflow.framework.Leaf.getDefaultInstance();
  }
  /**
   * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
   */
  public org.tensorflow.framework.LeafOrBuilder getLeafOrBuilder() {
    if (nodeCase_ == 1) {
       return (org.tensorflow.framework.Leaf) node_;
    }
    return org.tensorflow.framework.Leaf.getDefaultInstance();
  }

  public static final int BUCKETIZED_SPLIT_FIELD_NUMBER = 2;
  /**
   * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
   */
  public org.tensorflow.framework.BucketizedSplit getBucketizedSplit() {
    if (nodeCase_ == 2) {
       return (org.tensorflow.framework.BucketizedSplit) node_;
    }
    return org.tensorflow.framework.BucketizedSplit.getDefaultInstance();
  }
  /**
   * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
   */
  public org.tensorflow.framework.BucketizedSplitOrBuilder getBucketizedSplitOrBuilder() {
    if (nodeCase_ == 2) {
       return (org.tensorflow.framework.BucketizedSplit) node_;
    }
    return org.tensorflow.framework.BucketizedSplit.getDefaultInstance();
  }

  public static final int METADATA_FIELD_NUMBER = 777;
  private org.tensorflow.framework.NodeMetadata metadata_;
  /**
   * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
   */
  public boolean hasMetadata() {
    return metadata_ != null;
  }
  /**
   * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
   */
  public org.tensorflow.framework.NodeMetadata getMetadata() {
    return metadata_ == null ? org.tensorflow.framework.NodeMetadata.getDefaultInstance() : metadata_;
  }
  /**
   * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
   */
  public org.tensorflow.framework.NodeMetadataOrBuilder getMetadataOrBuilder() {
    return getMetadata();
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (nodeCase_ == 1) {
      output.writeMessage(1, (org.tensorflow.framework.Leaf) node_);
    }
    if (nodeCase_ == 2) {
      output.writeMessage(2, (org.tensorflow.framework.BucketizedSplit) node_);
    }
    if (metadata_ != null) {
      output.writeMessage(777, getMetadata());
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (nodeCase_ == 1) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, (org.tensorflow.framework.Leaf) node_);
    }
    if (nodeCase_ == 2) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, (org.tensorflow.framework.BucketizedSplit) node_);
    }
    if (metadata_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(777, getMetadata());
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof org.tensorflow.framework.Node)) {
      return super.equals(obj);
    }
    org.tensorflow.framework.Node other = (org.tensorflow.framework.Node) obj;

    boolean result = true;
    result = result && (hasMetadata() == other.hasMetadata());
    if (hasMetadata()) {
      result = result && getMetadata()
          .equals(other.getMetadata());
    }
    result = result && getNodeCase().equals(
        other.getNodeCase());
    if (!result) return false;
    switch (nodeCase_) {
      case 1:
        result = result && getLeaf()
            .equals(other.getLeaf());
        break;
      case 2:
        result = result && getBucketizedSplit()
            .equals(other.getBucketizedSplit());
        break;
      case 0:
      default:
    }
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasMetadata()) {
      hash = (37 * hash) + METADATA_FIELD_NUMBER;
      hash = (53 * hash) + getMetadata().hashCode();
    }
    switch (nodeCase_) {
      case 1:
        hash = (37 * hash) + LEAF_FIELD_NUMBER;
        hash = (53 * hash) + getLeaf().hashCode();
        break;
      case 2:
        hash = (37 * hash) + BUCKETIZED_SPLIT_FIELD_NUMBER;
        hash = (53 * hash) + getBucketizedSplit().hashCode();
        break;
      case 0:
      default:
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static org.tensorflow.framework.Node parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.Node parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.Node parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static org.tensorflow.framework.Node parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static org.tensorflow.framework.Node parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.framework.Node parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.framework.Node parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static org.tensorflow.framework.Node parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static org.tensorflow.framework.Node parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static org.tensorflow.framework.Node parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(org.tensorflow.framework.Node prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Node describes a node in a tree.
   * </pre>
   *
   * Protobuf type {@code tensorflow.boosted_trees.Node}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:tensorflow.boosted_trees.Node)
      org.tensorflow.framework.NodeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.tensorflow.framework.BoostedTreesProtos.internal_static_tensorflow_boosted_trees_Node_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.tensorflow.framework.BoostedTreesProtos.internal_static_tensorflow_boosted_trees_Node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.tensorflow.framework.Node.class, org.tensorflow.framework.Node.Builder.class);
    }

    // Construct using org.tensorflow.framework.Node.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (metadataBuilder_ == null) {
        metadata_ = null;
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }
      nodeCase_ = 0;
      node_ = null;
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return org.tensorflow.framework.BoostedTreesProtos.internal_static_tensorflow_boosted_trees_Node_descriptor;
    }

    public org.tensorflow.framework.Node getDefaultInstanceForType() {
      return org.tensorflow.framework.Node.getDefaultInstance();
    }

    public org.tensorflow.framework.Node build() {
      org.tensorflow.framework.Node result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public org.tensorflow.framework.Node buildPartial() {
      org.tensorflow.framework.Node result = new org.tensorflow.framework.Node(this);
      if (nodeCase_ == 1) {
        if (leafBuilder_ == null) {
          result.node_ = node_;
        } else {
          result.node_ = leafBuilder_.build();
        }
      }
      if (nodeCase_ == 2) {
        if (bucketizedSplitBuilder_ == null) {
          result.node_ = node_;
        } else {
          result.node_ = bucketizedSplitBuilder_.build();
        }
      }
      if (metadataBuilder_ == null) {
        result.metadata_ = metadata_;
      } else {
        result.metadata_ = metadataBuilder_.build();
      }
      result.nodeCase_ = nodeCase_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof org.tensorflow.framework.Node) {
        return mergeFrom((org.tensorflow.framework.Node)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(org.tensorflow.framework.Node other) {
      if (other == org.tensorflow.framework.Node.getDefaultInstance()) return this;
      if (other.hasMetadata()) {
        mergeMetadata(other.getMetadata());
      }
      switch (other.getNodeCase()) {
        case LEAF: {
          mergeLeaf(other.getLeaf());
          break;
        }
        case BUCKETIZED_SPLIT: {
          mergeBucketizedSplit(other.getBucketizedSplit());
          break;
        }
        case NODE_NOT_SET: {
          break;
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      org.tensorflow.framework.Node parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (org.tensorflow.framework.Node) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int nodeCase_ = 0;
    private java.lang.Object node_;
    public NodeCase
        getNodeCase() {
      return NodeCase.forNumber(
          nodeCase_);
    }

    public Builder clearNode() {
      nodeCase_ = 0;
      node_ = null;
      onChanged();
      return this;
    }


    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.framework.Leaf, org.tensorflow.framework.Leaf.Builder, org.tensorflow.framework.LeafOrBuilder> leafBuilder_;
    /**
     * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
     */
    public org.tensorflow.framework.Leaf getLeaf() {
      if (leafBuilder_ == null) {
        if (nodeCase_ == 1) {
          return (org.tensorflow.framework.Leaf) node_;
        }
        return org.tensorflow.framework.Leaf.getDefaultInstance();
      } else {
        if (nodeCase_ == 1) {
          return leafBuilder_.getMessage();
        }
        return org.tensorflow.framework.Leaf.getDefaultInstance();
      }
    }
    /**
     * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
     */
    public Builder setLeaf(org.tensorflow.framework.Leaf value) {
      if (leafBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        node_ = value;
        onChanged();
      } else {
        leafBuilder_.setMessage(value);
      }
      nodeCase_ = 1;
      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
     */
    public Builder setLeaf(
        org.tensorflow.framework.Leaf.Builder builderForValue) {
      if (leafBuilder_ == null) {
        node_ = builderForValue.build();
        onChanged();
      } else {
        leafBuilder_.setMessage(builderForValue.build());
      }
      nodeCase_ = 1;
      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
     */
    public Builder mergeLeaf(org.tensorflow.framework.Leaf value) {
      if (leafBuilder_ == null) {
        if (nodeCase_ == 1 &&
            node_ != org.tensorflow.framework.Leaf.getDefaultInstance()) {
          node_ = org.tensorflow.framework.Leaf.newBuilder((org.tensorflow.framework.Leaf) node_)
              .mergeFrom(value).buildPartial();
        } else {
          node_ = value;
        }
        onChanged();
      } else {
        if (nodeCase_ == 1) {
          leafBuilder_.mergeFrom(value);
        }
        leafBuilder_.setMessage(value);
      }
      nodeCase_ = 1;
      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
     */
    public Builder clearLeaf() {
      if (leafBuilder_ == null) {
        if (nodeCase_ == 1) {
          nodeCase_ = 0;
          node_ = null;
          onChanged();
        }
      } else {
        if (nodeCase_ == 1) {
          nodeCase_ = 0;
          node_ = null;
        }
        leafBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
     */
    public org.tensorflow.framework.Leaf.Builder getLeafBuilder() {
      return getLeafFieldBuilder().getBuilder();
    }
    /**
     * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
     */
    public org.tensorflow.framework.LeafOrBuilder getLeafOrBuilder() {
      if ((nodeCase_ == 1) && (leafBuilder_ != null)) {
        return leafBuilder_.getMessageOrBuilder();
      } else {
        if (nodeCase_ == 1) {
          return (org.tensorflow.framework.Leaf) node_;
        }
        return org.tensorflow.framework.Leaf.getDefaultInstance();
      }
    }
    /**
     * <code>.tensorflow.boosted_trees.Leaf leaf = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.framework.Leaf, org.tensorflow.framework.Leaf.Builder, org.tensorflow.framework.LeafOrBuilder> 
        getLeafFieldBuilder() {
      if (leafBuilder_ == null) {
        if (!(nodeCase_ == 1)) {
          node_ = org.tensorflow.framework.Leaf.getDefaultInstance();
        }
        leafBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.framework.Leaf, org.tensorflow.framework.Leaf.Builder, org.tensorflow.framework.LeafOrBuilder>(
                (org.tensorflow.framework.Leaf) node_,
                getParentForChildren(),
                isClean());
        node_ = null;
      }
      nodeCase_ = 1;
      onChanged();;
      return leafBuilder_;
    }

    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.framework.BucketizedSplit, org.tensorflow.framework.BucketizedSplit.Builder, org.tensorflow.framework.BucketizedSplitOrBuilder> bucketizedSplitBuilder_;
    /**
     * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
     */
    public org.tensorflow.framework.BucketizedSplit getBucketizedSplit() {
      if (bucketizedSplitBuilder_ == null) {
        if (nodeCase_ == 2) {
          return (org.tensorflow.framework.BucketizedSplit) node_;
        }
        return org.tensorflow.framework.BucketizedSplit.getDefaultInstance();
      } else {
        if (nodeCase_ == 2) {
          return bucketizedSplitBuilder_.getMessage();
        }
        return org.tensorflow.framework.BucketizedSplit.getDefaultInstance();
      }
    }
    /**
     * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
     */
    public Builder setBucketizedSplit(org.tensorflow.framework.BucketizedSplit value) {
      if (bucketizedSplitBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        node_ = value;
        onChanged();
      } else {
        bucketizedSplitBuilder_.setMessage(value);
      }
      nodeCase_ = 2;
      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
     */
    public Builder setBucketizedSplit(
        org.tensorflow.framework.BucketizedSplit.Builder builderForValue) {
      if (bucketizedSplitBuilder_ == null) {
        node_ = builderForValue.build();
        onChanged();
      } else {
        bucketizedSplitBuilder_.setMessage(builderForValue.build());
      }
      nodeCase_ = 2;
      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
     */
    public Builder mergeBucketizedSplit(org.tensorflow.framework.BucketizedSplit value) {
      if (bucketizedSplitBuilder_ == null) {
        if (nodeCase_ == 2 &&
            node_ != org.tensorflow.framework.BucketizedSplit.getDefaultInstance()) {
          node_ = org.tensorflow.framework.BucketizedSplit.newBuilder((org.tensorflow.framework.BucketizedSplit) node_)
              .mergeFrom(value).buildPartial();
        } else {
          node_ = value;
        }
        onChanged();
      } else {
        if (nodeCase_ == 2) {
          bucketizedSplitBuilder_.mergeFrom(value);
        }
        bucketizedSplitBuilder_.setMessage(value);
      }
      nodeCase_ = 2;
      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
     */
    public Builder clearBucketizedSplit() {
      if (bucketizedSplitBuilder_ == null) {
        if (nodeCase_ == 2) {
          nodeCase_ = 0;
          node_ = null;
          onChanged();
        }
      } else {
        if (nodeCase_ == 2) {
          nodeCase_ = 0;
          node_ = null;
        }
        bucketizedSplitBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
     */
    public org.tensorflow.framework.BucketizedSplit.Builder getBucketizedSplitBuilder() {
      return getBucketizedSplitFieldBuilder().getBuilder();
    }
    /**
     * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
     */
    public org.tensorflow.framework.BucketizedSplitOrBuilder getBucketizedSplitOrBuilder() {
      if ((nodeCase_ == 2) && (bucketizedSplitBuilder_ != null)) {
        return bucketizedSplitBuilder_.getMessageOrBuilder();
      } else {
        if (nodeCase_ == 2) {
          return (org.tensorflow.framework.BucketizedSplit) node_;
        }
        return org.tensorflow.framework.BucketizedSplit.getDefaultInstance();
      }
    }
    /**
     * <code>.tensorflow.boosted_trees.BucketizedSplit bucketized_split = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.framework.BucketizedSplit, org.tensorflow.framework.BucketizedSplit.Builder, org.tensorflow.framework.BucketizedSplitOrBuilder> 
        getBucketizedSplitFieldBuilder() {
      if (bucketizedSplitBuilder_ == null) {
        if (!(nodeCase_ == 2)) {
          node_ = org.tensorflow.framework.BucketizedSplit.getDefaultInstance();
        }
        bucketizedSplitBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.framework.BucketizedSplit, org.tensorflow.framework.BucketizedSplit.Builder, org.tensorflow.framework.BucketizedSplitOrBuilder>(
                (org.tensorflow.framework.BucketizedSplit) node_,
                getParentForChildren(),
                isClean());
        node_ = null;
      }
      nodeCase_ = 2;
      onChanged();;
      return bucketizedSplitBuilder_;
    }

    private org.tensorflow.framework.NodeMetadata metadata_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.framework.NodeMetadata, org.tensorflow.framework.NodeMetadata.Builder, org.tensorflow.framework.NodeMetadataOrBuilder> metadataBuilder_;
    /**
     * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
     */
    public boolean hasMetadata() {
      return metadataBuilder_ != null || metadata_ != null;
    }
    /**
     * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
     */
    public org.tensorflow.framework.NodeMetadata getMetadata() {
      if (metadataBuilder_ == null) {
        return metadata_ == null ? org.tensorflow.framework.NodeMetadata.getDefaultInstance() : metadata_;
      } else {
        return metadataBuilder_.getMessage();
      }
    }
    /**
     * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
     */
    public Builder setMetadata(org.tensorflow.framework.NodeMetadata value) {
      if (metadataBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        metadata_ = value;
        onChanged();
      } else {
        metadataBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
     */
    public Builder setMetadata(
        org.tensorflow.framework.NodeMetadata.Builder builderForValue) {
      if (metadataBuilder_ == null) {
        metadata_ = builderForValue.build();
        onChanged();
      } else {
        metadataBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
     */
    public Builder mergeMetadata(org.tensorflow.framework.NodeMetadata value) {
      if (metadataBuilder_ == null) {
        if (metadata_ != null) {
          metadata_ =
            org.tensorflow.framework.NodeMetadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
        } else {
          metadata_ = value;
        }
        onChanged();
      } else {
        metadataBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
     */
    public Builder clearMetadata() {
      if (metadataBuilder_ == null) {
        metadata_ = null;
        onChanged();
      } else {
        metadata_ = null;
        metadataBuilder_ = null;
      }

      return this;
    }
    /**
     * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
     */
    public org.tensorflow.framework.NodeMetadata.Builder getMetadataBuilder() {
      
      onChanged();
      return getMetadataFieldBuilder().getBuilder();
    }
    /**
     * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
     */
    public org.tensorflow.framework.NodeMetadataOrBuilder getMetadataOrBuilder() {
      if (metadataBuilder_ != null) {
        return metadataBuilder_.getMessageOrBuilder();
      } else {
        return metadata_ == null ?
            org.tensorflow.framework.NodeMetadata.getDefaultInstance() : metadata_;
      }
    }
    /**
     * <code>.tensorflow.boosted_trees.NodeMetadata metadata = 777;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        org.tensorflow.framework.NodeMetadata, org.tensorflow.framework.NodeMetadata.Builder, org.tensorflow.framework.NodeMetadataOrBuilder> 
        getMetadataFieldBuilder() {
      if (metadataBuilder_ == null) {
        metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            org.tensorflow.framework.NodeMetadata, org.tensorflow.framework.NodeMetadata.Builder, org.tensorflow.framework.NodeMetadataOrBuilder>(
                getMetadata(),
                getParentForChildren(),
                isClean());
        metadata_ = null;
      }
      return metadataBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:tensorflow.boosted_trees.Node)
  }

  // @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.Node)
  private static final org.tensorflow.framework.Node DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new org.tensorflow.framework.Node();
  }

  public static org.tensorflow.framework.Node getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Node>
      PARSER = new com.google.protobuf.AbstractParser<Node>() {
    public Node parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new Node(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Node> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Node> getParserForType() {
    return PARSER;
  }

  public org.tensorflow.framework.Node getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

