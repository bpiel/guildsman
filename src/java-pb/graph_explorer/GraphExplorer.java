// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/contrib/tensorboard/graph_explorer/proto/graph_explorer.proto

package graph_explorer;

public final class GraphExplorer {
  private GraphExplorer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface NodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:graph_explorer.Node)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The identifier of a node is a sequence of strings separated by '/'. The
     * identifier provides a unique name for a node and defines its hierarchical
     * relation to other nodes.  If no label is provided  the last part of the
     * identifier is used as a label.
     * Example: In the graph below, metanodes are written with square brackets and
     * leaf nodes with parentheses. The metanode 'node1' contains the leaf node
     * 'node4' and the metanode 'node2', which contains the leaf node 'node3'.
     *   [node1 [node2 (node3)] (node4)]
     * The identifiers for these nodes are: "node1", "node1/node2",
     * "node1/node2/node3", and "node1/node4".
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <pre>
     * The identifier of a node is a sequence of strings separated by '/'. The
     * identifier provides a unique name for a node and defines its hierarchical
     * relation to other nodes.  If no label is provided  the last part of the
     * identifier is used as a label.
     * Example: In the graph below, metanodes are written with square brackets and
     * leaf nodes with parentheses. The metanode 'node1' contains the leaf node
     * 'node4' and the metanode 'node2', which contains the leaf node 'node3'.
     *   [node1 [node2 (node3)] (node4)]
     * The identifiers for these nodes are: "node1", "node1/node2",
     * "node1/node2/node3", and "node1/node4".
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <pre>
     * A node attribute is information used by Graph Explorer to style a node.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 2;</code>
     */
    int getNodeAttrCount();
    /**
     * <pre>
     * A node attribute is information used by Graph Explorer to style a node.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 2;</code>
     */
    boolean containsNodeAttr(
        java.lang.String key);
    /**
     * Use {@link #getNodeAttrMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getNodeAttr();
    /**
     * <pre>
     * A node attribute is information used by Graph Explorer to style a node.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 2;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getNodeAttrMap();
    /**
     * <pre>
     * A node attribute is information used by Graph Explorer to style a node.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 2;</code>
     */

    java.lang.String getNodeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * A node attribute is information used by Graph Explorer to style a node.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 2;</code>
     */

    java.lang.String getNodeAttrOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * A metanode attribute is one that is inherited by all nodes inside the
     * current metanode. If an attribute applies only to the current node and
     * should not be inherited, it should be specified as a node attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
     */
    int getMetanodeAttrCount();
    /**
     * <pre>
     * A metanode attribute is one that is inherited by all nodes inside the
     * current metanode. If an attribute applies only to the current node and
     * should not be inherited, it should be specified as a node attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
     */
    boolean containsMetanodeAttr(
        java.lang.String key);
    /**
     * Use {@link #getMetanodeAttrMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMetanodeAttr();
    /**
     * <pre>
     * A metanode attribute is one that is inherited by all nodes inside the
     * current metanode. If an attribute applies only to the current node and
     * should not be inherited, it should be specified as a node attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMetanodeAttrMap();
    /**
     * <pre>
     * A metanode attribute is one that is inherited by all nodes inside the
     * current metanode. If an attribute applies only to the current node and
     * should not be inherited, it should be specified as a node attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
     */

    java.lang.String getMetanodeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * A metanode attribute is one that is inherited by all nodes inside the
     * current metanode. If an attribute applies only to the current node and
     * should not be inherited, it should be specified as a node attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
     */

    java.lang.String getMetanodeAttrOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * There are two types of nodes. A 'metanode' contains other
   * nodes and a 'leaf node' has no internal structure.  The metanode containment
   * relationship is acyclic, meaning that if a metanode 'A' contains the metanode
   * 'B', then 'B' cannot contain 'A'.
   * </pre>
   *
   * Protobuf type {@code graph_explorer.Node}
   */
  public  static final class Node extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:graph_explorer.Node)
      NodeOrBuilder {
    // Use Node.newBuilder() to construct.
    private Node(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Node() {
      name_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              name_ = s;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                nodeAttr_ = com.google.protobuf.MapField.newMapField(
                    NodeAttrDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              nodeAttr__ = input.readMessage(
                  NodeAttrDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              nodeAttr_.getMutableMap().put(
                  nodeAttr__.getKey(), nodeAttr__.getValue());
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                metanodeAttr_ = com.google.protobuf.MapField.newMapField(
                    MetanodeAttrDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              metanodeAttr__ = input.readMessage(
                  MetanodeAttrDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              metanodeAttr_.getMutableMap().put(
                  metanodeAttr__.getKey(), metanodeAttr__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return graph_explorer.GraphExplorer.internal_static_graph_explorer_Node_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetNodeAttr();
        case 3:
          return internalGetMetanodeAttr();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return graph_explorer.GraphExplorer.internal_static_graph_explorer_Node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              graph_explorer.GraphExplorer.Node.class, graph_explorer.GraphExplorer.Node.Builder.class);
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private volatile java.lang.Object name_;
    /**
     * <pre>
     * The identifier of a node is a sequence of strings separated by '/'. The
     * identifier provides a unique name for a node and defines its hierarchical
     * relation to other nodes.  If no label is provided  the last part of the
     * identifier is used as a label.
     * Example: In the graph below, metanodes are written with square brackets and
     * leaf nodes with parentheses. The metanode 'node1' contains the leaf node
     * 'node4' and the metanode 'node2', which contains the leaf node 'node3'.
     *   [node1 [node2 (node3)] (node4)]
     * The identifiers for these nodes are: "node1", "node1/node2",
     * "node1/node2/node3", and "node1/node4".
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The identifier of a node is a sequence of strings separated by '/'. The
     * identifier provides a unique name for a node and defines its hierarchical
     * relation to other nodes.  If no label is provided  the last part of the
     * identifier is used as a label.
     * Example: In the graph below, metanodes are written with square brackets and
     * leaf nodes with parentheses. The metanode 'node1' contains the leaf node
     * 'node4' and the metanode 'node2', which contains the leaf node 'node3'.
     *   [node1 [node2 (node3)] (node4)]
     * The identifiers for these nodes are: "node1", "node1/node2",
     * "node1/node2/node3", and "node1/node4".
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODE_ATTR_FIELD_NUMBER = 2;
    private static final class NodeAttrDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  graph_explorer.GraphExplorer.internal_static_graph_explorer_Node_NodeAttrEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> nodeAttr_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetNodeAttr() {
      if (nodeAttr_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NodeAttrDefaultEntryHolder.defaultEntry);
      }
      return nodeAttr_;
    }

    public int getNodeAttrCount() {
      return internalGetNodeAttr().getMap().size();
    }
    /**
     * <pre>
     * A node attribute is information used by Graph Explorer to style a node.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 2;</code>
     */

    public boolean containsNodeAttr(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetNodeAttr().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNodeAttrMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getNodeAttr() {
      return getNodeAttrMap();
    }
    /**
     * <pre>
     * A node attribute is information used by Graph Explorer to style a node.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 2;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getNodeAttrMap() {
      return internalGetNodeAttr().getMap();
    }
    /**
     * <pre>
     * A node attribute is information used by Graph Explorer to style a node.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 2;</code>
     */

    public java.lang.String getNodeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetNodeAttr().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A node attribute is information used by Graph Explorer to style a node.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 2;</code>
     */

    public java.lang.String getNodeAttrOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetNodeAttr().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int METANODE_ATTR_FIELD_NUMBER = 3;
    private static final class MetanodeAttrDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  graph_explorer.GraphExplorer.internal_static_graph_explorer_Node_MetanodeAttrEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> metanodeAttr_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMetanodeAttr() {
      if (metanodeAttr_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetanodeAttrDefaultEntryHolder.defaultEntry);
      }
      return metanodeAttr_;
    }

    public int getMetanodeAttrCount() {
      return internalGetMetanodeAttr().getMap().size();
    }
    /**
     * <pre>
     * A metanode attribute is one that is inherited by all nodes inside the
     * current metanode. If an attribute applies only to the current node and
     * should not be inherited, it should be specified as a node attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
     */

    public boolean containsMetanodeAttr(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMetanodeAttr().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetanodeAttrMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMetanodeAttr() {
      return getMetanodeAttrMap();
    }
    /**
     * <pre>
     * A metanode attribute is one that is inherited by all nodes inside the
     * current metanode. If an attribute applies only to the current node and
     * should not be inherited, it should be specified as a node attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getMetanodeAttrMap() {
      return internalGetMetanodeAttr().getMap();
    }
    /**
     * <pre>
     * A metanode attribute is one that is inherited by all nodes inside the
     * current metanode. If an attribute applies only to the current node and
     * should not be inherited, it should be specified as a node attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
     */

    public java.lang.String getMetanodeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetanodeAttr().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * A metanode attribute is one that is inherited by all nodes inside the
     * current metanode. If an attribute applies only to the current node and
     * should not be inherited, it should be specified as a node attribute.
     * </pre>
     *
     * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
     */

    public java.lang.String getMetanodeAttrOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetanodeAttr().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetNodeAttr(),
          NodeAttrDefaultEntryHolder.defaultEntry,
          2);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMetanodeAttr(),
          MetanodeAttrDefaultEntryHolder.defaultEntry,
          3);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetNodeAttr().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        nodeAttr__ = NodeAttrDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, nodeAttr__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMetanodeAttr().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        metanodeAttr__ = MetanodeAttrDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, metanodeAttr__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof graph_explorer.GraphExplorer.Node)) {
        return super.equals(obj);
      }
      graph_explorer.GraphExplorer.Node other = (graph_explorer.GraphExplorer.Node) obj;

      boolean result = true;
      result = result && getName()
          .equals(other.getName());
      result = result && internalGetNodeAttr().equals(
          other.internalGetNodeAttr());
      result = result && internalGetMetanodeAttr().equals(
          other.internalGetMetanodeAttr());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + NAME_FIELD_NUMBER;
      hash = (53 * hash) + getName().hashCode();
      if (!internalGetNodeAttr().getMap().isEmpty()) {
        hash = (37 * hash) + NODE_ATTR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetNodeAttr().hashCode();
      }
      if (!internalGetMetanodeAttr().getMap().isEmpty()) {
        hash = (37 * hash) + METANODE_ATTR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMetanodeAttr().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static graph_explorer.GraphExplorer.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static graph_explorer.GraphExplorer.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static graph_explorer.GraphExplorer.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static graph_explorer.GraphExplorer.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static graph_explorer.GraphExplorer.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static graph_explorer.GraphExplorer.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(graph_explorer.GraphExplorer.Node prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * There are two types of nodes. A 'metanode' contains other
     * nodes and a 'leaf node' has no internal structure.  The metanode containment
     * relationship is acyclic, meaning that if a metanode 'A' contains the metanode
     * 'B', then 'B' cannot contain 'A'.
     * </pre>
     *
     * Protobuf type {@code graph_explorer.Node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:graph_explorer.Node)
        graph_explorer.GraphExplorer.NodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return graph_explorer.GraphExplorer.internal_static_graph_explorer_Node_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetNodeAttr();
          case 3:
            return internalGetMetanodeAttr();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableNodeAttr();
          case 3:
            return internalGetMutableMetanodeAttr();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return graph_explorer.GraphExplorer.internal_static_graph_explorer_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                graph_explorer.GraphExplorer.Node.class, graph_explorer.GraphExplorer.Node.Builder.class);
      }

      // Construct using graph_explorer.GraphExplorer.Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        name_ = "";

        internalGetMutableNodeAttr().clear();
        internalGetMutableMetanodeAttr().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return graph_explorer.GraphExplorer.internal_static_graph_explorer_Node_descriptor;
      }

      public graph_explorer.GraphExplorer.Node getDefaultInstanceForType() {
        return graph_explorer.GraphExplorer.Node.getDefaultInstance();
      }

      public graph_explorer.GraphExplorer.Node build() {
        graph_explorer.GraphExplorer.Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public graph_explorer.GraphExplorer.Node buildPartial() {
        graph_explorer.GraphExplorer.Node result = new graph_explorer.GraphExplorer.Node(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.name_ = name_;
        result.nodeAttr_ = internalGetNodeAttr();
        result.nodeAttr_.makeImmutable();
        result.metanodeAttr_ = internalGetMetanodeAttr();
        result.metanodeAttr_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof graph_explorer.GraphExplorer.Node) {
          return mergeFrom((graph_explorer.GraphExplorer.Node)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(graph_explorer.GraphExplorer.Node other) {
        if (other == graph_explorer.GraphExplorer.Node.getDefaultInstance()) return this;
        if (!other.getName().isEmpty()) {
          name_ = other.name_;
          onChanged();
        }
        internalGetMutableNodeAttr().mergeFrom(
            other.internalGetNodeAttr());
        internalGetMutableMetanodeAttr().mergeFrom(
            other.internalGetMetanodeAttr());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        graph_explorer.GraphExplorer.Node parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (graph_explorer.GraphExplorer.Node) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <pre>
       * The identifier of a node is a sequence of strings separated by '/'. The
       * identifier provides a unique name for a node and defines its hierarchical
       * relation to other nodes.  If no label is provided  the last part of the
       * identifier is used as a label.
       * Example: In the graph below, metanodes are written with square brackets and
       * leaf nodes with parentheses. The metanode 'node1' contains the leaf node
       * 'node4' and the metanode 'node2', which contains the leaf node 'node3'.
       *   [node1 [node2 (node3)] (node4)]
       * The identifiers for these nodes are: "node1", "node1/node2",
       * "node1/node2/node3", and "node1/node4".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The identifier of a node is a sequence of strings separated by '/'. The
       * identifier provides a unique name for a node and defines its hierarchical
       * relation to other nodes.  If no label is provided  the last part of the
       * identifier is used as a label.
       * Example: In the graph below, metanodes are written with square brackets and
       * leaf nodes with parentheses. The metanode 'node1' contains the leaf node
       * 'node4' and the metanode 'node2', which contains the leaf node 'node3'.
       *   [node1 [node2 (node3)] (node4)]
       * The identifiers for these nodes are: "node1", "node1/node2",
       * "node1/node2/node3", and "node1/node4".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The identifier of a node is a sequence of strings separated by '/'. The
       * identifier provides a unique name for a node and defines its hierarchical
       * relation to other nodes.  If no label is provided  the last part of the
       * identifier is used as a label.
       * Example: In the graph below, metanodes are written with square brackets and
       * leaf nodes with parentheses. The metanode 'node1' contains the leaf node
       * 'node4' and the metanode 'node2', which contains the leaf node 'node3'.
       *   [node1 [node2 (node3)] (node4)]
       * The identifiers for these nodes are: "node1", "node1/node2",
       * "node1/node2/node3", and "node1/node4".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The identifier of a node is a sequence of strings separated by '/'. The
       * identifier provides a unique name for a node and defines its hierarchical
       * relation to other nodes.  If no label is provided  the last part of the
       * identifier is used as a label.
       * Example: In the graph below, metanodes are written with square brackets and
       * leaf nodes with parentheses. The metanode 'node1' contains the leaf node
       * 'node4' and the metanode 'node2', which contains the leaf node 'node3'.
       *   [node1 [node2 (node3)] (node4)]
       * The identifiers for these nodes are: "node1", "node1/node2",
       * "node1/node2/node3", and "node1/node4".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder clearName() {
        
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The identifier of a node is a sequence of strings separated by '/'. The
       * identifier provides a unique name for a node and defines its hierarchical
       * relation to other nodes.  If no label is provided  the last part of the
       * identifier is used as a label.
       * Example: In the graph below, metanodes are written with square brackets and
       * leaf nodes with parentheses. The metanode 'node1' contains the leaf node
       * 'node4' and the metanode 'node2', which contains the leaf node 'node3'.
       *   [node1 [node2 (node3)] (node4)]
       * The identifiers for these nodes are: "node1", "node1/node2",
       * "node1/node2/node3", and "node1/node4".
       * </pre>
       *
       * <code>string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        name_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> nodeAttr_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetNodeAttr() {
        if (nodeAttr_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              NodeAttrDefaultEntryHolder.defaultEntry);
        }
        return nodeAttr_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableNodeAttr() {
        onChanged();;
        if (nodeAttr_ == null) {
          nodeAttr_ = com.google.protobuf.MapField.newMapField(
              NodeAttrDefaultEntryHolder.defaultEntry);
        }
        if (!nodeAttr_.isMutable()) {
          nodeAttr_ = nodeAttr_.copy();
        }
        return nodeAttr_;
      }

      public int getNodeAttrCount() {
        return internalGetNodeAttr().getMap().size();
      }
      /**
       * <pre>
       * A node attribute is information used by Graph Explorer to style a node.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 2;</code>
       */

      public boolean containsNodeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetNodeAttr().getMap().containsKey(key);
      }
      /**
       * Use {@link #getNodeAttrMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getNodeAttr() {
        return getNodeAttrMap();
      }
      /**
       * <pre>
       * A node attribute is information used by Graph Explorer to style a node.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 2;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getNodeAttrMap() {
        return internalGetNodeAttr().getMap();
      }
      /**
       * <pre>
       * A node attribute is information used by Graph Explorer to style a node.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 2;</code>
       */

      public java.lang.String getNodeAttrOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetNodeAttr().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A node attribute is information used by Graph Explorer to style a node.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 2;</code>
       */

      public java.lang.String getNodeAttrOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetNodeAttr().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearNodeAttr() {
        internalGetMutableNodeAttr().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * A node attribute is information used by Graph Explorer to style a node.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 2;</code>
       */

      public Builder removeNodeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableNodeAttr().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableNodeAttr() {
        return internalGetMutableNodeAttr().getMutableMap();
      }
      /**
       * <pre>
       * A node attribute is information used by Graph Explorer to style a node.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 2;</code>
       */
      public Builder putNodeAttr(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableNodeAttr().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * A node attribute is information used by Graph Explorer to style a node.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 2;</code>
       */

      public Builder putAllNodeAttr(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableNodeAttr().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metanodeAttr_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetanodeAttr() {
        if (metanodeAttr_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetanodeAttrDefaultEntryHolder.defaultEntry);
        }
        return metanodeAttr_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMetanodeAttr() {
        onChanged();;
        if (metanodeAttr_ == null) {
          metanodeAttr_ = com.google.protobuf.MapField.newMapField(
              MetanodeAttrDefaultEntryHolder.defaultEntry);
        }
        if (!metanodeAttr_.isMutable()) {
          metanodeAttr_ = metanodeAttr_.copy();
        }
        return metanodeAttr_;
      }

      public int getMetanodeAttrCount() {
        return internalGetMetanodeAttr().getMap().size();
      }
      /**
       * <pre>
       * A metanode attribute is one that is inherited by all nodes inside the
       * current metanode. If an attribute applies only to the current node and
       * should not be inherited, it should be specified as a node attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
       */

      public boolean containsMetanodeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetanodeAttr().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetanodeAttrMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetanodeAttr() {
        return getMetanodeAttrMap();
      }
      /**
       * <pre>
       * A metanode attribute is one that is inherited by all nodes inside the
       * current metanode. If an attribute applies only to the current node and
       * should not be inherited, it should be specified as a node attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetanodeAttrMap() {
        return internalGetMetanodeAttr().getMap();
      }
      /**
       * <pre>
       * A metanode attribute is one that is inherited by all nodes inside the
       * current metanode. If an attribute applies only to the current node and
       * should not be inherited, it should be specified as a node attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
       */

      public java.lang.String getMetanodeAttrOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetanodeAttr().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * A metanode attribute is one that is inherited by all nodes inside the
       * current metanode. If an attribute applies only to the current node and
       * should not be inherited, it should be specified as a node attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
       */

      public java.lang.String getMetanodeAttrOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetanodeAttr().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMetanodeAttr() {
        internalGetMutableMetanodeAttr().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * A metanode attribute is one that is inherited by all nodes inside the
       * current metanode. If an attribute applies only to the current node and
       * should not be inherited, it should be specified as a node attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
       */

      public Builder removeMetanodeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetanodeAttr().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMetanodeAttr() {
        return internalGetMutableMetanodeAttr().getMutableMap();
      }
      /**
       * <pre>
       * A metanode attribute is one that is inherited by all nodes inside the
       * current metanode. If an attribute applies only to the current node and
       * should not be inherited, it should be specified as a node attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
       */
      public Builder putMetanodeAttr(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetanodeAttr().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * A metanode attribute is one that is inherited by all nodes inside the
       * current metanode. If an attribute applies only to the current node and
       * should not be inherited, it should be specified as a node attribute.
       * </pre>
       *
       * <code>map&lt;string, string&gt; metanode_attr = 3;</code>
       */

      public Builder putAllMetanodeAttr(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMetanodeAttr().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:graph_explorer.Node)
    }

    // @@protoc_insertion_point(class_scope:graph_explorer.Node)
    private static final graph_explorer.GraphExplorer.Node DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new graph_explorer.GraphExplorer.Node();
    }

    public static graph_explorer.GraphExplorer.Node getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Node>
        PARSER = new com.google.protobuf.AbstractParser<Node>() {
      public Node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Node(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Node> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Node> getParserForType() {
      return PARSER;
    }

    public graph_explorer.GraphExplorer.Node getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface EdgeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:graph_explorer.Edge)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * The source and target fields must have the format of a Node name.
     * </pre>
     *
     * <code>string source = 1;</code>
     */
    java.lang.String getSource();
    /**
     * <pre>
     * The source and target fields must have the format of a Node name.
     * </pre>
     *
     * <code>string source = 1;</code>
     */
    com.google.protobuf.ByteString
        getSourceBytes();

    /**
     * <code>string target = 2;</code>
     */
    java.lang.String getTarget();
    /**
     * <code>string target = 2;</code>
     */
    com.google.protobuf.ByteString
        getTargetBytes();

    /**
     * <pre>
     * Edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; edge_attr = 3;</code>
     */
    int getEdgeAttrCount();
    /**
     * <pre>
     * Edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; edge_attr = 3;</code>
     */
    boolean containsEdgeAttr(
        java.lang.String key);
    /**
     * Use {@link #getEdgeAttrMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getEdgeAttr();
    /**
     * <pre>
     * Edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; edge_attr = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getEdgeAttrMap();
    /**
     * <pre>
     * Edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; edge_attr = 3;</code>
     */

    java.lang.String getEdgeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; edge_attr = 3;</code>
     */

    java.lang.String getEdgeAttrOrThrow(
        java.lang.String key);
  }
  /**
   * <pre>
   * An edge consists of a source and a target node, specified by their
   * identifiers. An edge has attributes and data that are similar to node
   * attributes and node data. Edges do not form a hierarchy so there are no
   * metanode attributes.
   * </pre>
   *
   * Protobuf type {@code graph_explorer.Edge}
   */
  public  static final class Edge extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:graph_explorer.Edge)
      EdgeOrBuilder {
    // Use Edge.newBuilder() to construct.
    private Edge(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Edge() {
      source_ = "";
      target_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Edge(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              source_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              target_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                edgeAttr_ = com.google.protobuf.MapField.newMapField(
                    EdgeAttrDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              edgeAttr__ = input.readMessage(
                  EdgeAttrDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              edgeAttr_.getMutableMap().put(
                  edgeAttr__.getKey(), edgeAttr__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return graph_explorer.GraphExplorer.internal_static_graph_explorer_Edge_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetEdgeAttr();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return graph_explorer.GraphExplorer.internal_static_graph_explorer_Edge_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              graph_explorer.GraphExplorer.Edge.class, graph_explorer.GraphExplorer.Edge.Builder.class);
    }

    private int bitField0_;
    public static final int SOURCE_FIELD_NUMBER = 1;
    private volatile java.lang.Object source_;
    /**
     * <pre>
     * The source and target fields must have the format of a Node name.
     * </pre>
     *
     * <code>string source = 1;</code>
     */
    public java.lang.String getSource() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        source_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The source and target fields must have the format of a Node name.
     * </pre>
     *
     * <code>string source = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSourceBytes() {
      java.lang.Object ref = source_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        source_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGET_FIELD_NUMBER = 2;
    private volatile java.lang.Object target_;
    /**
     * <code>string target = 2;</code>
     */
    public java.lang.String getTarget() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        target_ = s;
        return s;
      }
    }
    /**
     * <code>string target = 2;</code>
     */
    public com.google.protobuf.ByteString
        getTargetBytes() {
      java.lang.Object ref = target_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        target_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EDGE_ATTR_FIELD_NUMBER = 3;
    private static final class EdgeAttrDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  graph_explorer.GraphExplorer.internal_static_graph_explorer_Edge_EdgeAttrEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> edgeAttr_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetEdgeAttr() {
      if (edgeAttr_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EdgeAttrDefaultEntryHolder.defaultEntry);
      }
      return edgeAttr_;
    }

    public int getEdgeAttrCount() {
      return internalGetEdgeAttr().getMap().size();
    }
    /**
     * <pre>
     * Edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; edge_attr = 3;</code>
     */

    public boolean containsEdgeAttr(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetEdgeAttr().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEdgeAttrMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getEdgeAttr() {
      return getEdgeAttrMap();
    }
    /**
     * <pre>
     * Edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; edge_attr = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getEdgeAttrMap() {
      return internalGetEdgeAttr().getMap();
    }
    /**
     * <pre>
     * Edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; edge_attr = 3;</code>
     */

    public java.lang.String getEdgeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetEdgeAttr().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; edge_attr = 3;</code>
     */

    public java.lang.String getEdgeAttrOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetEdgeAttr().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getSourceBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, source_);
      }
      if (!getTargetBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, target_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetEdgeAttr(),
          EdgeAttrDefaultEntryHolder.defaultEntry,
          3);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getSourceBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, source_);
      }
      if (!getTargetBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, target_);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetEdgeAttr().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        edgeAttr__ = EdgeAttrDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, edgeAttr__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof graph_explorer.GraphExplorer.Edge)) {
        return super.equals(obj);
      }
      graph_explorer.GraphExplorer.Edge other = (graph_explorer.GraphExplorer.Edge) obj;

      boolean result = true;
      result = result && getSource()
          .equals(other.getSource());
      result = result && getTarget()
          .equals(other.getTarget());
      result = result && internalGetEdgeAttr().equals(
          other.internalGetEdgeAttr());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SOURCE_FIELD_NUMBER;
      hash = (53 * hash) + getSource().hashCode();
      hash = (37 * hash) + TARGET_FIELD_NUMBER;
      hash = (53 * hash) + getTarget().hashCode();
      if (!internalGetEdgeAttr().getMap().isEmpty()) {
        hash = (37 * hash) + EDGE_ATTR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEdgeAttr().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static graph_explorer.GraphExplorer.Edge parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static graph_explorer.GraphExplorer.Edge parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Edge parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static graph_explorer.GraphExplorer.Edge parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Edge parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static graph_explorer.GraphExplorer.Edge parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Edge parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static graph_explorer.GraphExplorer.Edge parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Edge parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static graph_explorer.GraphExplorer.Edge parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(graph_explorer.GraphExplorer.Edge prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * An edge consists of a source and a target node, specified by their
     * identifiers. An edge has attributes and data that are similar to node
     * attributes and node data. Edges do not form a hierarchy so there are no
     * metanode attributes.
     * </pre>
     *
     * Protobuf type {@code graph_explorer.Edge}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:graph_explorer.Edge)
        graph_explorer.GraphExplorer.EdgeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return graph_explorer.GraphExplorer.internal_static_graph_explorer_Edge_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetEdgeAttr();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableEdgeAttr();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return graph_explorer.GraphExplorer.internal_static_graph_explorer_Edge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                graph_explorer.GraphExplorer.Edge.class, graph_explorer.GraphExplorer.Edge.Builder.class);
      }

      // Construct using graph_explorer.GraphExplorer.Edge.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      public Builder clear() {
        super.clear();
        source_ = "";

        target_ = "";

        internalGetMutableEdgeAttr().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return graph_explorer.GraphExplorer.internal_static_graph_explorer_Edge_descriptor;
      }

      public graph_explorer.GraphExplorer.Edge getDefaultInstanceForType() {
        return graph_explorer.GraphExplorer.Edge.getDefaultInstance();
      }

      public graph_explorer.GraphExplorer.Edge build() {
        graph_explorer.GraphExplorer.Edge result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public graph_explorer.GraphExplorer.Edge buildPartial() {
        graph_explorer.GraphExplorer.Edge result = new graph_explorer.GraphExplorer.Edge(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        result.source_ = source_;
        result.target_ = target_;
        result.edgeAttr_ = internalGetEdgeAttr();
        result.edgeAttr_.makeImmutable();
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof graph_explorer.GraphExplorer.Edge) {
          return mergeFrom((graph_explorer.GraphExplorer.Edge)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(graph_explorer.GraphExplorer.Edge other) {
        if (other == graph_explorer.GraphExplorer.Edge.getDefaultInstance()) return this;
        if (!other.getSource().isEmpty()) {
          source_ = other.source_;
          onChanged();
        }
        if (!other.getTarget().isEmpty()) {
          target_ = other.target_;
          onChanged();
        }
        internalGetMutableEdgeAttr().mergeFrom(
            other.internalGetEdgeAttr());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        graph_explorer.GraphExplorer.Edge parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (graph_explorer.GraphExplorer.Edge) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object source_ = "";
      /**
       * <pre>
       * The source and target fields must have the format of a Node name.
       * </pre>
       *
       * <code>string source = 1;</code>
       */
      public java.lang.String getSource() {
        java.lang.Object ref = source_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          source_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The source and target fields must have the format of a Node name.
       * </pre>
       *
       * <code>string source = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSourceBytes() {
        java.lang.Object ref = source_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          source_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The source and target fields must have the format of a Node name.
       * </pre>
       *
       * <code>string source = 1;</code>
       */
      public Builder setSource(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        source_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The source and target fields must have the format of a Node name.
       * </pre>
       *
       * <code>string source = 1;</code>
       */
      public Builder clearSource() {
        
        source_ = getDefaultInstance().getSource();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The source and target fields must have the format of a Node name.
       * </pre>
       *
       * <code>string source = 1;</code>
       */
      public Builder setSourceBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        source_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object target_ = "";
      /**
       * <code>string target = 2;</code>
       */
      public java.lang.String getTarget() {
        java.lang.Object ref = target_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          target_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string target = 2;</code>
       */
      public com.google.protobuf.ByteString
          getTargetBytes() {
        java.lang.Object ref = target_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          target_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string target = 2;</code>
       */
      public Builder setTarget(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        target_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>string target = 2;</code>
       */
      public Builder clearTarget() {
        
        target_ = getDefaultInstance().getTarget();
        onChanged();
        return this;
      }
      /**
       * <code>string target = 2;</code>
       */
      public Builder setTargetBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        target_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> edgeAttr_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetEdgeAttr() {
        if (edgeAttr_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EdgeAttrDefaultEntryHolder.defaultEntry);
        }
        return edgeAttr_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableEdgeAttr() {
        onChanged();;
        if (edgeAttr_ == null) {
          edgeAttr_ = com.google.protobuf.MapField.newMapField(
              EdgeAttrDefaultEntryHolder.defaultEntry);
        }
        if (!edgeAttr_.isMutable()) {
          edgeAttr_ = edgeAttr_.copy();
        }
        return edgeAttr_;
      }

      public int getEdgeAttrCount() {
        return internalGetEdgeAttr().getMap().size();
      }
      /**
       * <pre>
       * Edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; edge_attr = 3;</code>
       */

      public boolean containsEdgeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetEdgeAttr().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEdgeAttrMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getEdgeAttr() {
        return getEdgeAttrMap();
      }
      /**
       * <pre>
       * Edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; edge_attr = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getEdgeAttrMap() {
        return internalGetEdgeAttr().getMap();
      }
      /**
       * <pre>
       * Edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; edge_attr = 3;</code>
       */

      public java.lang.String getEdgeAttrOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetEdgeAttr().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; edge_attr = 3;</code>
       */

      public java.lang.String getEdgeAttrOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetEdgeAttr().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEdgeAttr() {
        internalGetMutableEdgeAttr().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; edge_attr = 3;</code>
       */

      public Builder removeEdgeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableEdgeAttr().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableEdgeAttr() {
        return internalGetMutableEdgeAttr().getMutableMap();
      }
      /**
       * <pre>
       * Edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; edge_attr = 3;</code>
       */
      public Builder putEdgeAttr(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableEdgeAttr().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; edge_attr = 3;</code>
       */

      public Builder putAllEdgeAttr(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableEdgeAttr().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:graph_explorer.Edge)
    }

    // @@protoc_insertion_point(class_scope:graph_explorer.Edge)
    private static final graph_explorer.GraphExplorer.Edge DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new graph_explorer.GraphExplorer.Edge();
    }

    public static graph_explorer.GraphExplorer.Edge getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Edge>
        PARSER = new com.google.protobuf.AbstractParser<Edge>() {
      public Edge parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Edge(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Edge> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Edge> getParserForType() {
      return PARSER;
    }

    public graph_explorer.GraphExplorer.Edge getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:graph_explorer.Graph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    java.util.List<graph_explorer.GraphExplorer.Node> 
        getNodeList();
    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    graph_explorer.GraphExplorer.Node getNode(int index);
    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    int getNodeCount();
    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    java.util.List<? extends graph_explorer.GraphExplorer.NodeOrBuilder> 
        getNodeOrBuilderList();
    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    graph_explorer.GraphExplorer.NodeOrBuilder getNodeOrBuilder(
        int index);

    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    java.util.List<graph_explorer.GraphExplorer.Edge> 
        getEdgeList();
    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    graph_explorer.GraphExplorer.Edge getEdge(int index);
    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    int getEdgeCount();
    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    java.util.List<? extends graph_explorer.GraphExplorer.EdgeOrBuilder> 
        getEdgeOrBuilderList();
    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    graph_explorer.GraphExplorer.EdgeOrBuilder getEdgeOrBuilder(
        int index);

    /**
     * <pre>
     * Default values of node, metanode and edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 3;</code>
     */
    int getNodeAttrCount();
    /**
     * <pre>
     * Default values of node, metanode and edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 3;</code>
     */
    boolean containsNodeAttr(
        java.lang.String key);
    /**
     * Use {@link #getNodeAttrMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getNodeAttr();
    /**
     * <pre>
     * Default values of node, metanode and edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 3;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getNodeAttrMap();
    /**
     * <pre>
     * Default values of node, metanode and edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 3;</code>
     */

    java.lang.String getNodeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Default values of node, metanode and edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 3;</code>
     */

    java.lang.String getNodeAttrOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
     */
    int getMetanodeAttrCount();
    /**
     * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
     */
    boolean containsMetanodeAttr(
        java.lang.String key);
    /**
     * Use {@link #getMetanodeAttrMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getMetanodeAttr();
    /**
     * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getMetanodeAttrMap();
    /**
     * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
     */

    java.lang.String getMetanodeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
     */

    java.lang.String getMetanodeAttrOrThrow(
        java.lang.String key);

    /**
     * <code>map&lt;string, string&gt; edge_attr = 5;</code>
     */
    int getEdgeAttrCount();
    /**
     * <code>map&lt;string, string&gt; edge_attr = 5;</code>
     */
    boolean containsEdgeAttr(
        java.lang.String key);
    /**
     * Use {@link #getEdgeAttrMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getEdgeAttr();
    /**
     * <code>map&lt;string, string&gt; edge_attr = 5;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getEdgeAttrMap();
    /**
     * <code>map&lt;string, string&gt; edge_attr = 5;</code>
     */

    java.lang.String getEdgeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <code>map&lt;string, string&gt; edge_attr = 5;</code>
     */

    java.lang.String getEdgeAttrOrThrow(
        java.lang.String key);

    /**
     * <pre>
     * Graph attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; graph_attr = 6;</code>
     */
    int getGraphAttrCount();
    /**
     * <pre>
     * Graph attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; graph_attr = 6;</code>
     */
    boolean containsGraphAttr(
        java.lang.String key);
    /**
     * Use {@link #getGraphAttrMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.String, java.lang.String>
    getGraphAttr();
    /**
     * <pre>
     * Graph attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; graph_attr = 6;</code>
     */
    java.util.Map<java.lang.String, java.lang.String>
    getGraphAttrMap();
    /**
     * <pre>
     * Graph attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; graph_attr = 6;</code>
     */

    java.lang.String getGraphAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue);
    /**
     * <pre>
     * Graph attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; graph_attr = 6;</code>
     */

    java.lang.String getGraphAttrOrThrow(
        java.lang.String key);
  }
  /**
   * Protobuf type {@code graph_explorer.Graph}
   */
  public  static final class Graph extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:graph_explorer.Graph)
      GraphOrBuilder {
    // Use Graph.newBuilder() to construct.
    private Graph(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Graph() {
      node_ = java.util.Collections.emptyList();
      edge_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
    }
    private Graph(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      int mutable_bitField0_ = 0;
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!input.skipField(tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                node_ = new java.util.ArrayList<graph_explorer.GraphExplorer.Node>();
                mutable_bitField0_ |= 0x00000001;
              }
              node_.add(
                  input.readMessage(graph_explorer.GraphExplorer.Node.parser(), extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                edge_ = new java.util.ArrayList<graph_explorer.GraphExplorer.Edge>();
                mutable_bitField0_ |= 0x00000002;
              }
              edge_.add(
                  input.readMessage(graph_explorer.GraphExplorer.Edge.parser(), extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                nodeAttr_ = com.google.protobuf.MapField.newMapField(
                    NodeAttrDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              nodeAttr__ = input.readMessage(
                  NodeAttrDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              nodeAttr_.getMutableMap().put(
                  nodeAttr__.getKey(), nodeAttr__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                metanodeAttr_ = com.google.protobuf.MapField.newMapField(
                    MetanodeAttrDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              metanodeAttr__ = input.readMessage(
                  MetanodeAttrDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              metanodeAttr_.getMutableMap().put(
                  metanodeAttr__.getKey(), metanodeAttr__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                edgeAttr_ = com.google.protobuf.MapField.newMapField(
                    EdgeAttrDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              edgeAttr__ = input.readMessage(
                  EdgeAttrDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              edgeAttr_.getMutableMap().put(
                  edgeAttr__.getKey(), edgeAttr__.getValue());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                graphAttr_ = com.google.protobuf.MapField.newMapField(
                    GraphAttrDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
              graphAttr__ = input.readMessage(
                  GraphAttrDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              graphAttr_.getMutableMap().put(
                  graphAttr__.getKey(), graphAttr__.getValue());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          node_ = java.util.Collections.unmodifiableList(node_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          edge_ = java.util.Collections.unmodifiableList(edge_);
        }
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return graph_explorer.GraphExplorer.internal_static_graph_explorer_Graph_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetNodeAttr();
        case 4:
          return internalGetMetanodeAttr();
        case 5:
          return internalGetEdgeAttr();
        case 6:
          return internalGetGraphAttr();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return graph_explorer.GraphExplorer.internal_static_graph_explorer_Graph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              graph_explorer.GraphExplorer.Graph.class, graph_explorer.GraphExplorer.Graph.Builder.class);
    }

    public static final int NODE_FIELD_NUMBER = 1;
    private java.util.List<graph_explorer.GraphExplorer.Node> node_;
    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    public java.util.List<graph_explorer.GraphExplorer.Node> getNodeList() {
      return node_;
    }
    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    public java.util.List<? extends graph_explorer.GraphExplorer.NodeOrBuilder> 
        getNodeOrBuilderList() {
      return node_;
    }
    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    public int getNodeCount() {
      return node_.size();
    }
    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    public graph_explorer.GraphExplorer.Node getNode(int index) {
      return node_.get(index);
    }
    /**
     * <pre>
     * List of nodes in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Node node = 1;</code>
     */
    public graph_explorer.GraphExplorer.NodeOrBuilder getNodeOrBuilder(
        int index) {
      return node_.get(index);
    }

    public static final int EDGE_FIELD_NUMBER = 2;
    private java.util.List<graph_explorer.GraphExplorer.Edge> edge_;
    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    public java.util.List<graph_explorer.GraphExplorer.Edge> getEdgeList() {
      return edge_;
    }
    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    public java.util.List<? extends graph_explorer.GraphExplorer.EdgeOrBuilder> 
        getEdgeOrBuilderList() {
      return edge_;
    }
    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    public int getEdgeCount() {
      return edge_.size();
    }
    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    public graph_explorer.GraphExplorer.Edge getEdge(int index) {
      return edge_.get(index);
    }
    /**
     * <pre>
     * List of edges in the graph.
     * </pre>
     *
     * <code>repeated .graph_explorer.Edge edge = 2;</code>
     */
    public graph_explorer.GraphExplorer.EdgeOrBuilder getEdgeOrBuilder(
        int index) {
      return edge_.get(index);
    }

    public static final int NODE_ATTR_FIELD_NUMBER = 3;
    private static final class NodeAttrDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  graph_explorer.GraphExplorer.internal_static_graph_explorer_Graph_NodeAttrEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> nodeAttr_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetNodeAttr() {
      if (nodeAttr_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NodeAttrDefaultEntryHolder.defaultEntry);
      }
      return nodeAttr_;
    }

    public int getNodeAttrCount() {
      return internalGetNodeAttr().getMap().size();
    }
    /**
     * <pre>
     * Default values of node, metanode and edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 3;</code>
     */

    public boolean containsNodeAttr(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetNodeAttr().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNodeAttrMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getNodeAttr() {
      return getNodeAttrMap();
    }
    /**
     * <pre>
     * Default values of node, metanode and edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 3;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getNodeAttrMap() {
      return internalGetNodeAttr().getMap();
    }
    /**
     * <pre>
     * Default values of node, metanode and edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 3;</code>
     */

    public java.lang.String getNodeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetNodeAttr().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Default values of node, metanode and edge attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; node_attr = 3;</code>
     */

    public java.lang.String getNodeAttrOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetNodeAttr().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int METANODE_ATTR_FIELD_NUMBER = 4;
    private static final class MetanodeAttrDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  graph_explorer.GraphExplorer.internal_static_graph_explorer_Graph_MetanodeAttrEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> metanodeAttr_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetMetanodeAttr() {
      if (metanodeAttr_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            MetanodeAttrDefaultEntryHolder.defaultEntry);
      }
      return metanodeAttr_;
    }

    public int getMetanodeAttrCount() {
      return internalGetMetanodeAttr().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
     */

    public boolean containsMetanodeAttr(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetMetanodeAttr().getMap().containsKey(key);
    }
    /**
     * Use {@link #getMetanodeAttrMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getMetanodeAttr() {
      return getMetanodeAttrMap();
    }
    /**
     * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getMetanodeAttrMap() {
      return internalGetMetanodeAttr().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
     */

    public java.lang.String getMetanodeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetanodeAttr().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
     */

    public java.lang.String getMetanodeAttrOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetMetanodeAttr().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int EDGE_ATTR_FIELD_NUMBER = 5;
    private static final class EdgeAttrDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  graph_explorer.GraphExplorer.internal_static_graph_explorer_Graph_EdgeAttrEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> edgeAttr_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetEdgeAttr() {
      if (edgeAttr_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            EdgeAttrDefaultEntryHolder.defaultEntry);
      }
      return edgeAttr_;
    }

    public int getEdgeAttrCount() {
      return internalGetEdgeAttr().getMap().size();
    }
    /**
     * <code>map&lt;string, string&gt; edge_attr = 5;</code>
     */

    public boolean containsEdgeAttr(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetEdgeAttr().getMap().containsKey(key);
    }
    /**
     * Use {@link #getEdgeAttrMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getEdgeAttr() {
      return getEdgeAttrMap();
    }
    /**
     * <code>map&lt;string, string&gt; edge_attr = 5;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getEdgeAttrMap() {
      return internalGetEdgeAttr().getMap();
    }
    /**
     * <code>map&lt;string, string&gt; edge_attr = 5;</code>
     */

    public java.lang.String getEdgeAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetEdgeAttr().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, string&gt; edge_attr = 5;</code>
     */

    public java.lang.String getEdgeAttrOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetEdgeAttr().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int GRAPH_ATTR_FIELD_NUMBER = 6;
    private static final class GraphAttrDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.String, java.lang.String> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.String, java.lang.String>newDefaultInstance(
                  graph_explorer.GraphExplorer.internal_static_graph_explorer_Graph_GraphAttrEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "",
                  com.google.protobuf.WireFormat.FieldType.STRING,
                  "");
    }
    private com.google.protobuf.MapField<
        java.lang.String, java.lang.String> graphAttr_;
    private com.google.protobuf.MapField<java.lang.String, java.lang.String>
    internalGetGraphAttr() {
      if (graphAttr_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            GraphAttrDefaultEntryHolder.defaultEntry);
      }
      return graphAttr_;
    }

    public int getGraphAttrCount() {
      return internalGetGraphAttr().getMap().size();
    }
    /**
     * <pre>
     * Graph attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; graph_attr = 6;</code>
     */

    public boolean containsGraphAttr(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetGraphAttr().getMap().containsKey(key);
    }
    /**
     * Use {@link #getGraphAttrMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, java.lang.String> getGraphAttr() {
      return getGraphAttrMap();
    }
    /**
     * <pre>
     * Graph attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; graph_attr = 6;</code>
     */

    public java.util.Map<java.lang.String, java.lang.String> getGraphAttrMap() {
      return internalGetGraphAttr().getMap();
    }
    /**
     * <pre>
     * Graph attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; graph_attr = 6;</code>
     */

    public java.lang.String getGraphAttrOrDefault(
        java.lang.String key,
        java.lang.String defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetGraphAttr().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * Graph attributes.
     * </pre>
     *
     * <code>map&lt;string, string&gt; graph_attr = 6;</code>
     */

    public java.lang.String getGraphAttrOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, java.lang.String> map =
          internalGetGraphAttr().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < node_.size(); i++) {
        output.writeMessage(1, node_.get(i));
      }
      for (int i = 0; i < edge_.size(); i++) {
        output.writeMessage(2, edge_.get(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetNodeAttr(),
          NodeAttrDefaultEntryHolder.defaultEntry,
          3);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetMetanodeAttr(),
          MetanodeAttrDefaultEntryHolder.defaultEntry,
          4);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetEdgeAttr(),
          EdgeAttrDefaultEntryHolder.defaultEntry,
          5);
      com.google.protobuf.GeneratedMessageV3
        .serializeStringMapTo(
          output,
          internalGetGraphAttr(),
          GraphAttrDefaultEntryHolder.defaultEntry,
          6);
    }

    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < node_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, node_.get(i));
      }
      for (int i = 0; i < edge_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, edge_.get(i));
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetNodeAttr().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        nodeAttr__ = NodeAttrDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, nodeAttr__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetMetanodeAttr().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        metanodeAttr__ = MetanodeAttrDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, metanodeAttr__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetEdgeAttr().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        edgeAttr__ = EdgeAttrDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, edgeAttr__);
      }
      for (java.util.Map.Entry<java.lang.String, java.lang.String> entry
           : internalGetGraphAttr().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.String, java.lang.String>
        graphAttr__ = GraphAttrDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(6, graphAttr__);
      }
      memoizedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof graph_explorer.GraphExplorer.Graph)) {
        return super.equals(obj);
      }
      graph_explorer.GraphExplorer.Graph other = (graph_explorer.GraphExplorer.Graph) obj;

      boolean result = true;
      result = result && getNodeList()
          .equals(other.getNodeList());
      result = result && getEdgeList()
          .equals(other.getEdgeList());
      result = result && internalGetNodeAttr().equals(
          other.internalGetNodeAttr());
      result = result && internalGetMetanodeAttr().equals(
          other.internalGetMetanodeAttr());
      result = result && internalGetEdgeAttr().equals(
          other.internalGetEdgeAttr());
      result = result && internalGetGraphAttr().equals(
          other.internalGetGraphAttr());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getNodeCount() > 0) {
        hash = (37 * hash) + NODE_FIELD_NUMBER;
        hash = (53 * hash) + getNodeList().hashCode();
      }
      if (getEdgeCount() > 0) {
        hash = (37 * hash) + EDGE_FIELD_NUMBER;
        hash = (53 * hash) + getEdgeList().hashCode();
      }
      if (!internalGetNodeAttr().getMap().isEmpty()) {
        hash = (37 * hash) + NODE_ATTR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetNodeAttr().hashCode();
      }
      if (!internalGetMetanodeAttr().getMap().isEmpty()) {
        hash = (37 * hash) + METANODE_ATTR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetMetanodeAttr().hashCode();
      }
      if (!internalGetEdgeAttr().getMap().isEmpty()) {
        hash = (37 * hash) + EDGE_ATTR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetEdgeAttr().hashCode();
      }
      if (!internalGetGraphAttr().getMap().isEmpty()) {
        hash = (37 * hash) + GRAPH_ATTR_FIELD_NUMBER;
        hash = (53 * hash) + internalGetGraphAttr().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static graph_explorer.GraphExplorer.Graph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static graph_explorer.GraphExplorer.Graph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Graph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static graph_explorer.GraphExplorer.Graph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Graph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static graph_explorer.GraphExplorer.Graph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Graph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static graph_explorer.GraphExplorer.Graph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static graph_explorer.GraphExplorer.Graph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static graph_explorer.GraphExplorer.Graph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(graph_explorer.GraphExplorer.Graph prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code graph_explorer.Graph}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:graph_explorer.Graph)
        graph_explorer.GraphExplorer.GraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return graph_explorer.GraphExplorer.internal_static_graph_explorer_Graph_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetNodeAttr();
          case 4:
            return internalGetMetanodeAttr();
          case 5:
            return internalGetEdgeAttr();
          case 6:
            return internalGetGraphAttr();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableNodeAttr();
          case 4:
            return internalGetMutableMetanodeAttr();
          case 5:
            return internalGetMutableEdgeAttr();
          case 6:
            return internalGetMutableGraphAttr();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return graph_explorer.GraphExplorer.internal_static_graph_explorer_Graph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                graph_explorer.GraphExplorer.Graph.class, graph_explorer.GraphExplorer.Graph.Builder.class);
      }

      // Construct using graph_explorer.GraphExplorer.Graph.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNodeFieldBuilder();
          getEdgeFieldBuilder();
        }
      }
      public Builder clear() {
        super.clear();
        if (nodeBuilder_ == null) {
          node_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodeBuilder_.clear();
        }
        if (edgeBuilder_ == null) {
          edge_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          edgeBuilder_.clear();
        }
        internalGetMutableNodeAttr().clear();
        internalGetMutableMetanodeAttr().clear();
        internalGetMutableEdgeAttr().clear();
        internalGetMutableGraphAttr().clear();
        return this;
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return graph_explorer.GraphExplorer.internal_static_graph_explorer_Graph_descriptor;
      }

      public graph_explorer.GraphExplorer.Graph getDefaultInstanceForType() {
        return graph_explorer.GraphExplorer.Graph.getDefaultInstance();
      }

      public graph_explorer.GraphExplorer.Graph build() {
        graph_explorer.GraphExplorer.Graph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public graph_explorer.GraphExplorer.Graph buildPartial() {
        graph_explorer.GraphExplorer.Graph result = new graph_explorer.GraphExplorer.Graph(this);
        int from_bitField0_ = bitField0_;
        if (nodeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            node_ = java.util.Collections.unmodifiableList(node_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.node_ = node_;
        } else {
          result.node_ = nodeBuilder_.build();
        }
        if (edgeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            edge_ = java.util.Collections.unmodifiableList(edge_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.edge_ = edge_;
        } else {
          result.edge_ = edgeBuilder_.build();
        }
        result.nodeAttr_ = internalGetNodeAttr();
        result.nodeAttr_.makeImmutable();
        result.metanodeAttr_ = internalGetMetanodeAttr();
        result.metanodeAttr_.makeImmutable();
        result.edgeAttr_ = internalGetEdgeAttr();
        result.edgeAttr_.makeImmutable();
        result.graphAttr_ = internalGetGraphAttr();
        result.graphAttr_.makeImmutable();
        onBuilt();
        return result;
      }

      public Builder clone() {
        return (Builder) super.clone();
      }
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof graph_explorer.GraphExplorer.Graph) {
          return mergeFrom((graph_explorer.GraphExplorer.Graph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(graph_explorer.GraphExplorer.Graph other) {
        if (other == graph_explorer.GraphExplorer.Graph.getDefaultInstance()) return this;
        if (nodeBuilder_ == null) {
          if (!other.node_.isEmpty()) {
            if (node_.isEmpty()) {
              node_ = other.node_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodeIsMutable();
              node_.addAll(other.node_);
            }
            onChanged();
          }
        } else {
          if (!other.node_.isEmpty()) {
            if (nodeBuilder_.isEmpty()) {
              nodeBuilder_.dispose();
              nodeBuilder_ = null;
              node_ = other.node_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNodeFieldBuilder() : null;
            } else {
              nodeBuilder_.addAllMessages(other.node_);
            }
          }
        }
        if (edgeBuilder_ == null) {
          if (!other.edge_.isEmpty()) {
            if (edge_.isEmpty()) {
              edge_ = other.edge_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEdgeIsMutable();
              edge_.addAll(other.edge_);
            }
            onChanged();
          }
        } else {
          if (!other.edge_.isEmpty()) {
            if (edgeBuilder_.isEmpty()) {
              edgeBuilder_.dispose();
              edgeBuilder_ = null;
              edge_ = other.edge_;
              bitField0_ = (bitField0_ & ~0x00000002);
              edgeBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEdgeFieldBuilder() : null;
            } else {
              edgeBuilder_.addAllMessages(other.edge_);
            }
          }
        }
        internalGetMutableNodeAttr().mergeFrom(
            other.internalGetNodeAttr());
        internalGetMutableMetanodeAttr().mergeFrom(
            other.internalGetMetanodeAttr());
        internalGetMutableEdgeAttr().mergeFrom(
            other.internalGetEdgeAttr());
        internalGetMutableGraphAttr().mergeFrom(
            other.internalGetGraphAttr());
        onChanged();
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        graph_explorer.GraphExplorer.Graph parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (graph_explorer.GraphExplorer.Graph) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<graph_explorer.GraphExplorer.Node> node_ =
        java.util.Collections.emptyList();
      private void ensureNodeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          node_ = new java.util.ArrayList<graph_explorer.GraphExplorer.Node>(node_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          graph_explorer.GraphExplorer.Node, graph_explorer.GraphExplorer.Node.Builder, graph_explorer.GraphExplorer.NodeOrBuilder> nodeBuilder_;

      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public java.util.List<graph_explorer.GraphExplorer.Node> getNodeList() {
        if (nodeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(node_);
        } else {
          return nodeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public int getNodeCount() {
        if (nodeBuilder_ == null) {
          return node_.size();
        } else {
          return nodeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public graph_explorer.GraphExplorer.Node getNode(int index) {
        if (nodeBuilder_ == null) {
          return node_.get(index);
        } else {
          return nodeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public Builder setNode(
          int index, graph_explorer.GraphExplorer.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.set(index, value);
          onChanged();
        } else {
          nodeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public Builder setNode(
          int index, graph_explorer.GraphExplorer.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public Builder addNode(graph_explorer.GraphExplorer.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.add(value);
          onChanged();
        } else {
          nodeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public Builder addNode(
          int index, graph_explorer.GraphExplorer.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.add(index, value);
          onChanged();
        } else {
          nodeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public Builder addNode(
          graph_explorer.GraphExplorer.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.add(builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public Builder addNode(
          int index, graph_explorer.GraphExplorer.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public Builder addAllNode(
          java.lang.Iterable<? extends graph_explorer.GraphExplorer.Node> values) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, node_);
          onChanged();
        } else {
          nodeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public Builder clearNode() {
        if (nodeBuilder_ == null) {
          node_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public Builder removeNode(int index) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.remove(index);
          onChanged();
        } else {
          nodeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public graph_explorer.GraphExplorer.Node.Builder getNodeBuilder(
          int index) {
        return getNodeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public graph_explorer.GraphExplorer.NodeOrBuilder getNodeOrBuilder(
          int index) {
        if (nodeBuilder_ == null) {
          return node_.get(index);  } else {
          return nodeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public java.util.List<? extends graph_explorer.GraphExplorer.NodeOrBuilder> 
           getNodeOrBuilderList() {
        if (nodeBuilder_ != null) {
          return nodeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(node_);
        }
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public graph_explorer.GraphExplorer.Node.Builder addNodeBuilder() {
        return getNodeFieldBuilder().addBuilder(
            graph_explorer.GraphExplorer.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public graph_explorer.GraphExplorer.Node.Builder addNodeBuilder(
          int index) {
        return getNodeFieldBuilder().addBuilder(
            index, graph_explorer.GraphExplorer.Node.getDefaultInstance());
      }
      /**
       * <pre>
       * List of nodes in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Node node = 1;</code>
       */
      public java.util.List<graph_explorer.GraphExplorer.Node.Builder> 
           getNodeBuilderList() {
        return getNodeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          graph_explorer.GraphExplorer.Node, graph_explorer.GraphExplorer.Node.Builder, graph_explorer.GraphExplorer.NodeOrBuilder> 
          getNodeFieldBuilder() {
        if (nodeBuilder_ == null) {
          nodeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              graph_explorer.GraphExplorer.Node, graph_explorer.GraphExplorer.Node.Builder, graph_explorer.GraphExplorer.NodeOrBuilder>(
                  node_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        return nodeBuilder_;
      }

      private java.util.List<graph_explorer.GraphExplorer.Edge> edge_ =
        java.util.Collections.emptyList();
      private void ensureEdgeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          edge_ = new java.util.ArrayList<graph_explorer.GraphExplorer.Edge>(edge_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          graph_explorer.GraphExplorer.Edge, graph_explorer.GraphExplorer.Edge.Builder, graph_explorer.GraphExplorer.EdgeOrBuilder> edgeBuilder_;

      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public java.util.List<graph_explorer.GraphExplorer.Edge> getEdgeList() {
        if (edgeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(edge_);
        } else {
          return edgeBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public int getEdgeCount() {
        if (edgeBuilder_ == null) {
          return edge_.size();
        } else {
          return edgeBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public graph_explorer.GraphExplorer.Edge getEdge(int index) {
        if (edgeBuilder_ == null) {
          return edge_.get(index);
        } else {
          return edgeBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public Builder setEdge(
          int index, graph_explorer.GraphExplorer.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgeIsMutable();
          edge_.set(index, value);
          onChanged();
        } else {
          edgeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public Builder setEdge(
          int index, graph_explorer.GraphExplorer.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.set(index, builderForValue.build());
          onChanged();
        } else {
          edgeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public Builder addEdge(graph_explorer.GraphExplorer.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgeIsMutable();
          edge_.add(value);
          onChanged();
        } else {
          edgeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public Builder addEdge(
          int index, graph_explorer.GraphExplorer.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgeIsMutable();
          edge_.add(index, value);
          onChanged();
        } else {
          edgeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public Builder addEdge(
          graph_explorer.GraphExplorer.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.add(builderForValue.build());
          onChanged();
        } else {
          edgeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public Builder addEdge(
          int index, graph_explorer.GraphExplorer.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.add(index, builderForValue.build());
          onChanged();
        } else {
          edgeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public Builder addAllEdge(
          java.lang.Iterable<? extends graph_explorer.GraphExplorer.Edge> values) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, edge_);
          onChanged();
        } else {
          edgeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public Builder clearEdge() {
        if (edgeBuilder_ == null) {
          edge_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          edgeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public Builder removeEdge(int index) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.remove(index);
          onChanged();
        } else {
          edgeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public graph_explorer.GraphExplorer.Edge.Builder getEdgeBuilder(
          int index) {
        return getEdgeFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public graph_explorer.GraphExplorer.EdgeOrBuilder getEdgeOrBuilder(
          int index) {
        if (edgeBuilder_ == null) {
          return edge_.get(index);  } else {
          return edgeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public java.util.List<? extends graph_explorer.GraphExplorer.EdgeOrBuilder> 
           getEdgeOrBuilderList() {
        if (edgeBuilder_ != null) {
          return edgeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(edge_);
        }
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public graph_explorer.GraphExplorer.Edge.Builder addEdgeBuilder() {
        return getEdgeFieldBuilder().addBuilder(
            graph_explorer.GraphExplorer.Edge.getDefaultInstance());
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public graph_explorer.GraphExplorer.Edge.Builder addEdgeBuilder(
          int index) {
        return getEdgeFieldBuilder().addBuilder(
            index, graph_explorer.GraphExplorer.Edge.getDefaultInstance());
      }
      /**
       * <pre>
       * List of edges in the graph.
       * </pre>
       *
       * <code>repeated .graph_explorer.Edge edge = 2;</code>
       */
      public java.util.List<graph_explorer.GraphExplorer.Edge.Builder> 
           getEdgeBuilderList() {
        return getEdgeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          graph_explorer.GraphExplorer.Edge, graph_explorer.GraphExplorer.Edge.Builder, graph_explorer.GraphExplorer.EdgeOrBuilder> 
          getEdgeFieldBuilder() {
        if (edgeBuilder_ == null) {
          edgeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              graph_explorer.GraphExplorer.Edge, graph_explorer.GraphExplorer.Edge.Builder, graph_explorer.GraphExplorer.EdgeOrBuilder>(
                  edge_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          edge_ = null;
        }
        return edgeBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> nodeAttr_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetNodeAttr() {
        if (nodeAttr_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              NodeAttrDefaultEntryHolder.defaultEntry);
        }
        return nodeAttr_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableNodeAttr() {
        onChanged();;
        if (nodeAttr_ == null) {
          nodeAttr_ = com.google.protobuf.MapField.newMapField(
              NodeAttrDefaultEntryHolder.defaultEntry);
        }
        if (!nodeAttr_.isMutable()) {
          nodeAttr_ = nodeAttr_.copy();
        }
        return nodeAttr_;
      }

      public int getNodeAttrCount() {
        return internalGetNodeAttr().getMap().size();
      }
      /**
       * <pre>
       * Default values of node, metanode and edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 3;</code>
       */

      public boolean containsNodeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetNodeAttr().getMap().containsKey(key);
      }
      /**
       * Use {@link #getNodeAttrMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getNodeAttr() {
        return getNodeAttrMap();
      }
      /**
       * <pre>
       * Default values of node, metanode and edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 3;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getNodeAttrMap() {
        return internalGetNodeAttr().getMap();
      }
      /**
       * <pre>
       * Default values of node, metanode and edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 3;</code>
       */

      public java.lang.String getNodeAttrOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetNodeAttr().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Default values of node, metanode and edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 3;</code>
       */

      public java.lang.String getNodeAttrOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetNodeAttr().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearNodeAttr() {
        internalGetMutableNodeAttr().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Default values of node, metanode and edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 3;</code>
       */

      public Builder removeNodeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableNodeAttr().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableNodeAttr() {
        return internalGetMutableNodeAttr().getMutableMap();
      }
      /**
       * <pre>
       * Default values of node, metanode and edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 3;</code>
       */
      public Builder putNodeAttr(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableNodeAttr().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Default values of node, metanode and edge attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; node_attr = 3;</code>
       */

      public Builder putAllNodeAttr(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableNodeAttr().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> metanodeAttr_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMetanodeAttr() {
        if (metanodeAttr_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              MetanodeAttrDefaultEntryHolder.defaultEntry);
        }
        return metanodeAttr_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableMetanodeAttr() {
        onChanged();;
        if (metanodeAttr_ == null) {
          metanodeAttr_ = com.google.protobuf.MapField.newMapField(
              MetanodeAttrDefaultEntryHolder.defaultEntry);
        }
        if (!metanodeAttr_.isMutable()) {
          metanodeAttr_ = metanodeAttr_.copy();
        }
        return metanodeAttr_;
      }

      public int getMetanodeAttrCount() {
        return internalGetMetanodeAttr().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
       */

      public boolean containsMetanodeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetMetanodeAttr().getMap().containsKey(key);
      }
      /**
       * Use {@link #getMetanodeAttrMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getMetanodeAttr() {
        return getMetanodeAttrMap();
      }
      /**
       * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getMetanodeAttrMap() {
        return internalGetMetanodeAttr().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
       */

      public java.lang.String getMetanodeAttrOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetanodeAttr().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
       */

      public java.lang.String getMetanodeAttrOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetMetanodeAttr().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearMetanodeAttr() {
        internalGetMutableMetanodeAttr().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
       */

      public Builder removeMetanodeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetanodeAttr().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableMetanodeAttr() {
        return internalGetMutableMetanodeAttr().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
       */
      public Builder putMetanodeAttr(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableMetanodeAttr().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; metanode_attr = 4;</code>
       */

      public Builder putAllMetanodeAttr(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableMetanodeAttr().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> edgeAttr_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetEdgeAttr() {
        if (edgeAttr_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              EdgeAttrDefaultEntryHolder.defaultEntry);
        }
        return edgeAttr_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableEdgeAttr() {
        onChanged();;
        if (edgeAttr_ == null) {
          edgeAttr_ = com.google.protobuf.MapField.newMapField(
              EdgeAttrDefaultEntryHolder.defaultEntry);
        }
        if (!edgeAttr_.isMutable()) {
          edgeAttr_ = edgeAttr_.copy();
        }
        return edgeAttr_;
      }

      public int getEdgeAttrCount() {
        return internalGetEdgeAttr().getMap().size();
      }
      /**
       * <code>map&lt;string, string&gt; edge_attr = 5;</code>
       */

      public boolean containsEdgeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetEdgeAttr().getMap().containsKey(key);
      }
      /**
       * Use {@link #getEdgeAttrMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getEdgeAttr() {
        return getEdgeAttrMap();
      }
      /**
       * <code>map&lt;string, string&gt; edge_attr = 5;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getEdgeAttrMap() {
        return internalGetEdgeAttr().getMap();
      }
      /**
       * <code>map&lt;string, string&gt; edge_attr = 5;</code>
       */

      public java.lang.String getEdgeAttrOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetEdgeAttr().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;string, string&gt; edge_attr = 5;</code>
       */

      public java.lang.String getEdgeAttrOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetEdgeAttr().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearEdgeAttr() {
        internalGetMutableEdgeAttr().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; edge_attr = 5;</code>
       */

      public Builder removeEdgeAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableEdgeAttr().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableEdgeAttr() {
        return internalGetMutableEdgeAttr().getMutableMap();
      }
      /**
       * <code>map&lt;string, string&gt; edge_attr = 5;</code>
       */
      public Builder putEdgeAttr(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableEdgeAttr().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;string, string&gt; edge_attr = 5;</code>
       */

      public Builder putAllEdgeAttr(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableEdgeAttr().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.String, java.lang.String> graphAttr_;
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetGraphAttr() {
        if (graphAttr_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              GraphAttrDefaultEntryHolder.defaultEntry);
        }
        return graphAttr_;
      }
      private com.google.protobuf.MapField<java.lang.String, java.lang.String>
      internalGetMutableGraphAttr() {
        onChanged();;
        if (graphAttr_ == null) {
          graphAttr_ = com.google.protobuf.MapField.newMapField(
              GraphAttrDefaultEntryHolder.defaultEntry);
        }
        if (!graphAttr_.isMutable()) {
          graphAttr_ = graphAttr_.copy();
        }
        return graphAttr_;
      }

      public int getGraphAttrCount() {
        return internalGetGraphAttr().getMap().size();
      }
      /**
       * <pre>
       * Graph attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; graph_attr = 6;</code>
       */

      public boolean containsGraphAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        return internalGetGraphAttr().getMap().containsKey(key);
      }
      /**
       * Use {@link #getGraphAttrMap()} instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String> getGraphAttr() {
        return getGraphAttrMap();
      }
      /**
       * <pre>
       * Graph attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; graph_attr = 6;</code>
       */

      public java.util.Map<java.lang.String, java.lang.String> getGraphAttrMap() {
        return internalGetGraphAttr().getMap();
      }
      /**
       * <pre>
       * Graph attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; graph_attr = 6;</code>
       */

      public java.lang.String getGraphAttrOrDefault(
          java.lang.String key,
          java.lang.String defaultValue) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetGraphAttr().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <pre>
       * Graph attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; graph_attr = 6;</code>
       */

      public java.lang.String getGraphAttrOrThrow(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        java.util.Map<java.lang.String, java.lang.String> map =
            internalGetGraphAttr().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearGraphAttr() {
        internalGetMutableGraphAttr().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <pre>
       * Graph attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; graph_attr = 6;</code>
       */

      public Builder removeGraphAttr(
          java.lang.String key) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableGraphAttr().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.String, java.lang.String>
      getMutableGraphAttr() {
        return internalGetMutableGraphAttr().getMutableMap();
      }
      /**
       * <pre>
       * Graph attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; graph_attr = 6;</code>
       */
      public Builder putGraphAttr(
          java.lang.String key,
          java.lang.String value) {
        if (key == null) { throw new java.lang.NullPointerException(); }
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableGraphAttr().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <pre>
       * Graph attributes.
       * </pre>
       *
       * <code>map&lt;string, string&gt; graph_attr = 6;</code>
       */

      public Builder putAllGraphAttr(
          java.util.Map<java.lang.String, java.lang.String> values) {
        internalGetMutableGraphAttr().getMutableMap()
            .putAll(values);
        return this;
      }
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }

      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return this;
      }


      // @@protoc_insertion_point(builder_scope:graph_explorer.Graph)
    }

    // @@protoc_insertion_point(class_scope:graph_explorer.Graph)
    private static final graph_explorer.GraphExplorer.Graph DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new graph_explorer.GraphExplorer.Graph();
    }

    public static graph_explorer.GraphExplorer.Graph getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Graph>
        PARSER = new com.google.protobuf.AbstractParser<Graph>() {
      public Graph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
          return new Graph(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Graph> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Graph> getParserForType() {
      return PARSER;
    }

    public graph_explorer.GraphExplorer.Graph getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Node_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Node_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Node_NodeAttrEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Node_NodeAttrEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Node_MetanodeAttrEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Node_MetanodeAttrEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Edge_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Edge_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Edge_EdgeAttrEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Edge_EdgeAttrEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Graph_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Graph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Graph_NodeAttrEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Graph_NodeAttrEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Graph_MetanodeAttrEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Graph_MetanodeAttrEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Graph_EdgeAttrEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Graph_EdgeAttrEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_graph_explorer_Graph_GraphAttrEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_graph_explorer_Graph_GraphAttrEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\nHtensorflow/contrib/tensorboard/graph_e" +
      "xplorer/proto/graph_explorer.proto\022\016grap" +
      "h_explorer\"\360\001\n\004Node\022\014\n\004name\030\001 \001(\t\0225\n\tnod" +
      "e_attr\030\002 \003(\0132\".graph_explorer.Node.NodeA" +
      "ttrEntry\022=\n\rmetanode_attr\030\003 \003(\0132&.graph_" +
      "explorer.Node.MetanodeAttrEntry\032/\n\rNodeA" +
      "ttrEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001" +
      "\0323\n\021MetanodeAttrEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va" +
      "lue\030\002 \001(\t:\0028\001\"\216\001\n\004Edge\022\016\n\006source\030\001 \001(\t\022\016" +
      "\n\006target\030\002 \001(\t\0225\n\tedge_attr\030\003 \003(\0132\".grap",
      "h_explorer.Edge.EdgeAttrEntry\032/\n\rEdgeAtt" +
      "rEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\202" +
      "\004\n\005Graph\022\"\n\004node\030\001 \003(\0132\024.graph_explorer." +
      "Node\022\"\n\004edge\030\002 \003(\0132\024.graph_explorer.Edge" +
      "\0226\n\tnode_attr\030\003 \003(\0132#.graph_explorer.Gra" +
      "ph.NodeAttrEntry\022>\n\rmetanode_attr\030\004 \003(\0132" +
      "\'.graph_explorer.Graph.MetanodeAttrEntry" +
      "\0226\n\tedge_attr\030\005 \003(\0132#.graph_explorer.Gra" +
      "ph.EdgeAttrEntry\0228\n\ngraph_attr\030\006 \003(\0132$.g" +
      "raph_explorer.Graph.GraphAttrEntry\032/\n\rNo",
      "deAttrEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:" +
      "\0028\001\0323\n\021MetanodeAttrEntry\022\013\n\003key\030\001 \001(\t\022\r\n" +
      "\005value\030\002 \001(\t:\0028\001\032/\n\rEdgeAttrEntry\022\013\n\003key" +
      "\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\0320\n\016GraphAttrEn" +
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001b\006pro" +
      "to3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_graph_explorer_Node_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_graph_explorer_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Node_descriptor,
        new java.lang.String[] { "Name", "NodeAttr", "MetanodeAttr", });
    internal_static_graph_explorer_Node_NodeAttrEntry_descriptor =
      internal_static_graph_explorer_Node_descriptor.getNestedTypes().get(0);
    internal_static_graph_explorer_Node_NodeAttrEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Node_NodeAttrEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_graph_explorer_Node_MetanodeAttrEntry_descriptor =
      internal_static_graph_explorer_Node_descriptor.getNestedTypes().get(1);
    internal_static_graph_explorer_Node_MetanodeAttrEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Node_MetanodeAttrEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_graph_explorer_Edge_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_graph_explorer_Edge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Edge_descriptor,
        new java.lang.String[] { "Source", "Target", "EdgeAttr", });
    internal_static_graph_explorer_Edge_EdgeAttrEntry_descriptor =
      internal_static_graph_explorer_Edge_descriptor.getNestedTypes().get(0);
    internal_static_graph_explorer_Edge_EdgeAttrEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Edge_EdgeAttrEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_graph_explorer_Graph_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_graph_explorer_Graph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Graph_descriptor,
        new java.lang.String[] { "Node", "Edge", "NodeAttr", "MetanodeAttr", "EdgeAttr", "GraphAttr", });
    internal_static_graph_explorer_Graph_NodeAttrEntry_descriptor =
      internal_static_graph_explorer_Graph_descriptor.getNestedTypes().get(0);
    internal_static_graph_explorer_Graph_NodeAttrEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Graph_NodeAttrEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_graph_explorer_Graph_MetanodeAttrEntry_descriptor =
      internal_static_graph_explorer_Graph_descriptor.getNestedTypes().get(1);
    internal_static_graph_explorer_Graph_MetanodeAttrEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Graph_MetanodeAttrEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_graph_explorer_Graph_EdgeAttrEntry_descriptor =
      internal_static_graph_explorer_Graph_descriptor.getNestedTypes().get(2);
    internal_static_graph_explorer_Graph_EdgeAttrEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Graph_EdgeAttrEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_graph_explorer_Graph_GraphAttrEntry_descriptor =
      internal_static_graph_explorer_Graph_descriptor.getNestedTypes().get(3);
    internal_static_graph_explorer_Graph_GraphAttrEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_graph_explorer_Graph_GraphAttrEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
